{
    "Anchor": {
        "line": 54,
        "jsDoc": [
            "/**\r\n *\r\n * Defines a floating pointer in the document. Whenever text is inserted or deleted before the cursor, the position of the anchor is updated.\r\n *\r\n * @class Anchor\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/anchor.js",
        "construct": {
            "line": 54,
            "jsDoc": [
                "/**\r\n * Creates a new `Anchor` and associates it with a document.\r\n *\r\n * @param {Document} doc The document to associate with the anchor\r\n * @param {Number} row The starting row position\r\n * @param {Number} column The starting column position\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "doc": "Document",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "getPosition": {
            "line": 72,
            "jsDoc": [
                "/**\r\n     * Returns an object identifying the `row` and `column` position of the current anchor.\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "getDocument": {
            "line": 81,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the current document.\r\n     * @returns {Document}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "Document"
            },
            "described": true
        },
        "onChange": {
            "line": 102,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "change_event": {
            "line": 89,
            "jsDoc": [
                "/**\r\n     * Fires whenever the anchor position changes.\r\n     *\r\n     * Both of these objects have a `row` and `column` property corresponding to the position.\r\n     *\r\n     * Events that can trigger this function include [[Anchor.setPosition `setPosition()`]].\r\n     *\r\n     * @event change\r\n     * @param {Object} e  An object containing information about the anchor position. It has two properties:\r\n     *  - `old`: An object describing the old Anchor position\r\n     *  - `value`: An object describing the new Anchor position\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "setPosition": {
            "line": 158,
            "jsDoc": [
                "/**\r\n     * Sets the anchor position to the specified row and column. If `noClip` is `true`, the position is not clipped.\r\n     * @param {Number} row The row index to move the anchor to\r\n     * @param {Number} column The column index to move the anchor to\r\n     * @param {Boolean} noClip Identifies if you want the position to be clipped\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number",
                "noClip": "Boolean"
            },
            "described": true
        },
        "detach": {
            "line": 189,
            "jsDoc": [
                "/**\r\n     * When called, the `\"change\"` event listener is removed.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "attach": {
            "line": 192,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "void",
                "doc": "any"
            },
            "described": true
        },
        "$clipPositionToDocument": {
            "line": 203,
            "jsDoc": [
                "/**\r\n     * Clips the anchor position to the specified row and column.\r\n     * @param {Number} row The row index to clip the anchor to\r\n     * @param {Number} column The column index to clip the anchor to\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/anchor.js",
            "params": {
                "return": "{}",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 1082,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 1090,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 1091,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 1092,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 1094,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 1096,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 1098,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 1100,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 1102,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 1104,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 1106,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 1108,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 1110,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 1112,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 1114,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 1116,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 1118,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 1120,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 1122,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "AcePopup": {
        "line": 59,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/autocomplete/popup.js"
    },
    "Autocomplete": {
        "line": 42,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
        "$init": {
            "line": 64,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getPopup": {
            "line": 77,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "openPopup": {
            "line": 81,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "editor": "any",
                "prefix": "any",
                "keepPopupPosition": "any"
            },
            "described": true
        },
        "detach": {
            "line": 114,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "changeListener": {
            "line": 133,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "blurListener": {
            "line": 144,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "mousedownListener": {
            "line": 158,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "mousewheelListener": {
            "line": 162,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "goTo": {
            "line": 166,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "where": "any"
            },
            "described": true
        },
        "insertMatch": {
            "line": 170,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "boolean",
                "data": "any",
                "options": "any"
            },
            "described": true
        },
        "gatherCompletions": {
            "line": 224,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "boolean",
                "editor": "any",
                "callback": "any"
            },
            "described": true
        },
        "showPopup": {
            "line": 250,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "editor": "any",
                "options": "any"
            },
            "described": true
        },
        "updateCompletions": {
            "line": 271,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "any",
                "keepPopupPosition": "any",
                "options": "any"
            },
            "described": true
        },
        "cancelContextMenu": {
            "line": 362,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateDocTooltip": {
            "line": 366,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "showDocTooltip": {
            "line": 388,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "item": "any"
            },
            "described": true
        },
        "hideDocTooltip": {
            "line": 437,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onTooltipClick": {
            "line": 448,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "destroy": {
            "line": 460,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "for": {
            "line": 476,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "any",
                "editor": "any"
            },
            "described": true
        },
        "described": true
    },
    "FilteredList": {
        "line": 506,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
        "setFilter": {
            "line": 513,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "void",
                "str": "any"
            },
            "described": true
        },
        "filterCompletions": {
            "line": 537,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/autocomplete.js",
            "params": {
                "return": "{}",
                "items": "any",
                "needle": "any"
            },
            "described": true
        },
        "described": true
    },
    "BackgroundTokenizer": {
        "line": 54,
        "jsDoc": [
            "/**\r\n * Tokenizes the current [[Document `Document`]] in the background, and caches the tokenized rows for future use. \r\n * \r\n * If a certain row is changed, everything below that row is re-tokenized.\r\n *\r\n * @class BackgroundTokenizer\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
        "construct": {
            "line": 54,
            "jsDoc": [
                "/**\r\n * Creates a new `BackgroundTokenizer` object.\r\n * @param {Tokenizer} tokenizer The tokenizer to use\r\n * @param {Editor} editor The editor to associate with\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "tokenizer": "Tokenizer",
                "editor": "Editor"
            },
            "described": true
        },
        "setTokenizer": {
            "line": 112,
            "jsDoc": [
                "/**\r\n     * Sets a new tokenizer for this object.\r\n     *\r\n     * @param {Tokenizer} tokenizer The new tokenizer to use\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void",
                "tokenizer": "Tokenizer"
            },
            "described": true
        },
        "setDocument": {
            "line": 124,
            "jsDoc": [
                "/**\r\n     * Sets a new document to associate with this object.\r\n     * @param {Document} doc The new document to associate with\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void",
                "doc": "Document"
            },
            "described": true
        },
        "fireUpdateEvent": {
            "line": 145,
            "jsDoc": [
                "/**\r\n     * Emits the `'update'` event. `firstRow` and `lastRow` are used to define the boundaries of the region to be updated.\r\n     * @param {Number} firstRow The starting row region\r\n     * @param {Number} lastRow The final row region\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "update_event": {
            "line": 132,
            "jsDoc": [
                "/**\r\n     * Fires whenever the background tokeniziers between a range of rows are going to be updated.\r\n     * \r\n     * @event update\r\n     * @param {Object} e An object containing two properties, `first` and `last`, which indicate the rows of the region being updated.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "start": {
            "line": 159,
            "jsDoc": [
                "/**\r\n     * Starts tokenizing at the row indicated.\r\n     *\r\n     * @param {Number} startRow The row to start at\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void",
                "startRow": "Number"
            },
            "described": true
        },
        "scheduleStart": {
            "line": 171,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$updateOnChange": {
            "line": 176,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "stop": {
            "line": 201,
            "jsDoc": [
                "/**\r\n     * Stops tokenizing.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getTokens": {
            "line": 215,
            "jsDoc": [
                "/**\r\n     * Gives list of tokens of the row. (tokens are cached)\r\n     * \r\n     * @param {Number} row The row to get tokens at\r\n     *\r\n     * \r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "any",
                "row": "Number"
            },
            "described": true
        },
        "getState": {
            "line": 224,
            "jsDoc": [
                "/**\r\n     * [Returns the state of tokenization at the end of a row.]{: #BackgroundTokenizer.getState}\r\n     *\r\n     * @param {Number} row The row to get state at\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "any",
                "row": "Number"
            },
            "described": true
        },
        "$tokenizeRow": {
            "line": 230,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "any",
                "row": "any"
            },
            "described": true
        },
        "cleanup": {
            "line": 248,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/background_tokenizer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 1043,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "BidiHandler": {
        "line": 50,
        "jsDoc": [
            "/**\r\n * This object is used to ensure Bi-Directional support (for languages with text flowing from right to left, like Arabic or Hebrew)\r\n * including correct caret positioning, text selection mouse and keyboard arrows functioning\r\n * @class BidiHandler\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
        "construct": {
            "line": 50,
            "jsDoc": [
                "/**\r\n * Creates a new `BidiHandler` object\r\n * @param {EditSession} session The session to use\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "session": "EditSession"
            },
            "described": true
        },
        "isBidiRow": {
            "line": 83,
            "jsDoc": [
                "/**\r\n     * Returns 'true' if row contains Bidi characters, in such case\r\n     * creates Bidi map to be used in operations related to selection\r\n     * (keyboard arrays, mouse click, select)\r\n     * @param {Number} the screen row to be checked\r\n     * @param {Number} the document row to be checked [optional]\r\n     * @param {Number} the wrapped screen line index [ optional]\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "any",
                "screenRow": "any",
                "docRow": "any",
                "splitIndex": "any"
            },
            "described": true
        },
        "onChange": {
            "line": 94,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "getDocumentRow": {
            "line": 106,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "getSplitIndex": {
            "line": 118,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "updateRowLine": {
            "line": 138,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "docRow": "any",
                "splitIndex": "any"
            },
            "described": true
        },
        "updateBidiMap": {
            "line": 189,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "markAsDirty": {
            "line": 201,
            "jsDoc": [
                "/**\r\n     * Resets stored info related to current screen row\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateCharacterWidths": {
            "line": 210,
            "jsDoc": [
                "/**\r\n     * Updates array of character widths\r\n     * @param {Object} font metrics\r\n     *\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "fontMetrics": "any"
            },
            "described": true
        },
        "setShowInvisibles": {
            "line": 226,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "showInvisibles": "any"
            },
            "described": true
        },
        "setEolChar": {
            "line": 231,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "eolChar": "any"
            },
            "described": true
        },
        "setContentWidth": {
            "line": 235,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "width": "any"
            },
            "described": true
        },
        "isRtlLine": {
            "line": 239,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "any",
                "row": "any"
            },
            "described": true
        },
        "setRtlDirection": {
            "line": 247,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "void",
                "editor": "any",
                "isRtlDir": "any"
            },
            "described": true
        },
        "getPosLeft": {
            "line": 264,
            "jsDoc": [
                "/**\r\n     * Returns offset of character at position defined by column.\r\n     * @param {Number} col the screen column position\r\n     *\r\n     * @return {Number} horizontal pixel offset of given screen column\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "number",
                "col": "Number"
            },
            "described": true
        },
        "getSelections": {
            "line": 297,
            "jsDoc": [
                "/**\r\n     * Returns 'selections' - array of objects defining set of selection rectangles\r\n     * @param {Number} the start column position\r\n     * @param {Number} the end column position\r\n     *\r\n     * @return {Array of Objects} Each object contains 'left' and 'width' values defining selection rectangle.\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "Arra",
                "startCol": "any",
                "endCol": "any"
            },
            "described": true
        },
        "offsetToCol": {
            "line": 336,
            "jsDoc": [
                "/**\r\n     * Converts character coordinates on the screen to respective document column number\r\n     * @param {Number} posX character horizontal offset\r\n     *\r\n     * @return {Number} screen column number corresponding to given pixel offset\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/bidihandler.js",
            "params": {
                "return": "Number",
                "posX": "Number"
            },
            "described": true
        },
        "described": true
    },
    "CommandManager": {
        "line": 20,
        "jsDoc": [
            "/**\r\n * @class CommandManager\r\n *\r\n **/",
            "/**\r\n * new CommandManager(platform, commands)\r\n * @param {String} platform Identifier for the platform; must be either `\"mac\"` or `\"win\"`\r\n * @param {Array} commands A list of commands\r\n *\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/commands/command_manager.js",
        "exec": {
            "line": 37,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/command_manager.js",
            "params": {
                "return": "boolean",
                "command": "any",
                "editor": "any",
                "args": "any"
            },
            "described": true
        },
        "toggleRecording": {
            "line": 64,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/command_manager.js",
            "params": {
                "return": "boolean",
                "editor": "any"
            },
            "described": true
        },
        "replay": {
            "line": 90,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/command_manager.js",
            "params": {
                "return": "any",
                "editor": "any"
            },
            "described": true
        },
        "trimMacro": {
            "line": 110,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/command_manager.js",
            "params": {
                "return": "any",
                "m": "any"
            },
            "described": true
        },
        "setupIncrementalSearch": {
            "line": 290,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "editor": "any",
                "val": "any"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 1873,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "exec_event": {
            "line": 1873,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 1878,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 1879,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 1880,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addEventListener": {
            "line": 1882,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 1883,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 1884,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeEventListener": {
            "line": 1885,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addCommand": {
            "line": 1890,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeCommand": {
            "line": 1891,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "bindKey": {
            "line": 1892,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 1897,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 1899,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 1901,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 1903,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 1905,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 1907,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 1909,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 1911,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 1913,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 1915,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 1917,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 1919,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 1921,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "IncrementalSearchKeyboardHandler": {
        "line": 166,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/commands/incremental_search_commands.js",
        "attach": {
            "line": 174,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/incremental_search_commands.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "detach": {
            "line": 190,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/incremental_search_commands.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "handleKeyboard": {
            "line": 197,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/incremental_search_commands.js",
            "params": {
                "return": "any",
                "data": "any",
                "hashId": "any",
                "key": "any",
                "keyCode": "any"
            },
            "described": true
        },
        "described": true
    },
    "OccurKeyboardHandler": {
        "line": 74,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/commands/occur_commands.js",
        "attach": {
            "line": 82,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/occur_commands.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "handleKeyboard": {
            "line": 88,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/occur_commands.js",
            "params": {
                "return": "any",
                "data": "any",
                "hashId": "any",
                "key": "any",
                "keyCode": "any"
            },
            "described": true
        },
        "installIn": {
            "line": 95,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/occur_commands.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "uninstallFrom": {
            "line": 101,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/commands/occur_commands.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "described": true
    },
    "Document": {
        "line": 54,
        "jsDoc": [
            "/**\r\n * Contains the text of the document. Document can be attached to several [[EditSession `EditSession`]]s. \r\n * At its core, `Document`s are just an array of strings, with each row in the document matching up to the array index.\r\n *\r\n * @class Document\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/document.js",
        "construct": {
            "line": 54,
            "jsDoc": [
                "/**\r\n *\r\n * Creates a new `Document`. If `text` is included, the `Document` contains those strings; otherwise, it's empty.\r\n * @param {String | Array} text The starting text\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "text": "String | Array"
            },
            "described": true
        },
        "setValue": {
            "line": 77,
            "jsDoc": [
                "/**\r\n     * Replaces all the lines in the current `Document` with the value of `text`.\r\n     *\r\n     * @param {String} text The text to use\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "text": "String"
            },
            "described": true
        },
        "getValue": {
            "line": 86,
            "jsDoc": [
                "/**\r\n     * Returns all the lines in the document as a single string, joined by the new line character.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "createAnchor": {
            "line": 96,
            "jsDoc": [
                "/** \r\n     * Creates a new `Anchor` to define a floating point in the document.\r\n     * @param {Number} row The row number to use\r\n     * @param {Number} column The column number to use\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "$split": {
            "line": 111,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "text": "any"
            },
            "described": true
        },
        "$detectNewLine": {
            "line": 121,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "text": "any"
            },
            "described": true
        },
        "getNewLineCharacter": {
            "line": 134,
            "jsDoc": [
                "/**\r\n     * Returns the newline character that's being used, depending on the value of `newLineMode`. \r\n     * @returns {String} If `newLineMode == windows`, `\\r\\n` is returned.  \r\n     *  If `newLineMode == unix`, `\\n` is returned.  \r\n     *  If `newLineMode == auto`, the value of `autoNewLine` is returned.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "setNewLineMode": {
            "line": 152,
            "jsDoc": [
                "/**\r\n     * [Sets the new line mode.]{: #Document.setNewLineMode.desc}\r\n     * @param {String} newLineMode [The newline mode to use; can be either `windows`, `unix`, or `auto`]{: #Document.setNewLineMode.param}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "newLineMode": "String"
            },
            "described": true
        },
        "getNewLineMode": {
            "line": 164,
            "jsDoc": [
                "/**\r\n     * [Returns the type of newlines being used; either `windows`, `unix`, or `auto`]{: #Document.getNewLineMode}\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "isNewLine": {
            "line": 173,
            "jsDoc": [
                "/**\r\n     * Returns `true` if `text` is a newline character (either `\\r\\n`, `\\r`, or `\\n`).\r\n     * @param {String} text The text to check\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "boolean",
                "text": "String"
            },
            "described": true
        },
        "getLine": {
            "line": 182,
            "jsDoc": [
                "/**\r\n     * Returns a verbatim copy of the given line as it is in the document\r\n     * @param {Number} row The row index to retrieve\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "row": "Number"
            },
            "described": true
        },
        "getLines": {
            "line": 192,
            "jsDoc": [
                "/**\r\n     * Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.\r\n     * @param {Number} firstRow The first row index to retrieve\r\n     * @param {Number} lastRow The final row index to retrieve\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "getAllLines": {
            "line": 199,
            "jsDoc": [
                "/**\r\n     * Returns all lines in the document as string array.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getLength": {
            "line": 206,
            "jsDoc": [
                "/**\r\n     * Returns the number of rows in the document.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getTextRange": {
            "line": 216,
            "jsDoc": [
                "/**\r\n     * Returns all the text within `range` as a single string.\r\n     * @param {Range} range The range to work with.\r\n     * \r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "String",
                "range": "Range"
            },
            "described": true
        },
        "getLinesForRange": {
            "line": 226,
            "jsDoc": [
                "/**\r\n     * Returns all the text within `range` as an array of lines.\r\n     * @param {Range} range The range to work with.\r\n     * \r\n     * @returns {string[]}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "string[]",
                "range": "Range"
            },
            "described": true
        },
        "insertLines": {
            "line": 243,
            "jsDoc": [
                "/** Deprecated methods retained for backwards compatibility.**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "row": "any",
                "lines": "any"
            },
            "described": true
        },
        "removeLines": {
            "line": 247,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "firstRow": "any",
                "lastRow": "any"
            },
            "described": true
        },
        "insertNewLine": {
            "line": 251,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "position": "any"
            },
            "described": true
        },
        "insert": {
            "line": 263,
            "jsDoc": [
                "/**\r\n     * Inserts a block of `text` at the indicated `position`.\r\n     * @param {Object} position The position to start inserting at; it's an object that looks like `{ row: row, column: column}`\r\n     * @param {String} text A chunk of text to insert\r\n     * @returns {Object} The position ({row, column}) of the last line of `text`. If the length of `text` is 0, this function simply returns `position`. \r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Object",
                "position": "Object",
                "text": "String"
            },
            "described": true
        },
        "insertInLine": {
            "line": 285,
            "jsDoc": [
                "/**\r\n     * Inserts `text` into the `position` at the current row. This method also triggers the `\"change\"` event.\r\n     * \r\n     * This differs from the `insert` method in two ways:\r\n     *   1. This does NOT handle newline characters (single-line text only).\r\n     *   2. This is faster than the `insert` method for single-line text insertions.\r\n     * \r\n     * @param {Object} position The position to insert at; it's an object that looks like `{ row: row, column: column}`\r\n     * @param {String} text A chunk of text\r\n     * @returns {Object} Returns an object containing the final row and column, like this:  \r\n     *     ```\r\n     *     {row: endRow, column: 0}\r\n     *     ```\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Object",
                "position": "Object",
                "text": "String"
            },
            "described": true
        },
        "clippedPos": {
            "line": 299,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "clonePos": {
            "line": 316,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "pos": "any"
            },
            "described": true
        },
        "pos": {
            "line": 320,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "$clipPosition": {
            "line": 324,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "any",
                "position": "any"
            },
            "described": true
        },
        "insertFullLines": {
            "line": 367,
            "jsDoc": [
                "/**\r\n     * Inserts the elements in `lines` into the document as full lines (does not merge with existing line), starting at the row index given by `row`. This method also triggers the `\"change\"` event.\r\n     * @param {Number} row The index of the row to insert at\r\n     * @param {string[]} lines An array of strings\r\n     * @returns {Object} Contains the final row and column, like this:  \r\n     *   ```\r\n     *   {row: endRow, column: 0}\r\n     *   ```  \r\n     *   If `lines` is empty, this function returns an object containing the current row, and column, like this:  \r\n     *   ``` \r\n     *   {row: row, column: 0}\r\n     *   ```\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "row": "Number",
                "lines": "string[]"
            },
            "described": true
        },
        "change_event": {
            "line": 336,
            "jsDoc": [
                "/**\r\n     * Fires whenever the document changes.\r\n     *\r\n     * Several methods trigger different `\"change\"` events. Below is a list of each action type, followed by each property that's also available:\r\n     *\r\n     *  * `\"insert\"`\r\n     *    * `range`: the [[Range]] of the change within the document\r\n     *    * `lines`: the lines being added\r\n     *  * `\"remove\"`\r\n     *    * `range`: the [[Range]] of the change within the document\r\n     *    * `lines`: the lines being removed\r\n     *\r\n     * @event change\r\n     * @param {Object} e Contains at least one property called `\"action\"`. `\"action\"` indicates the action that triggered the change. Each action also has a set of additional properties.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "insertMergedLines": {
            "line": 403,
            "jsDoc": [
                "/**\r\n     * Inserts the elements in `lines` into the document, starting at the position index given by `row`. This method also triggers the `\"change\"` event.\r\n     * @param {Number} row The index of the row to insert at\r\n     * @param {string[]} lines An array of strings\r\n     * @returns {Object} Contains the final row and column, like this:  \r\n     *   ```\r\n     *   {row: endRow, column: 0}\r\n     *   ```  \r\n     *   If `lines` is empty, this function returns an object containing the current row, and column, like this:  \r\n     *   ``` \r\n     *   {row: row, column: 0}\r\n     *   ```\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Object",
                "position": "any",
                "lines": "string[]"
            },
            "described": true
        },
        "remove": {
            "line": 426,
            "jsDoc": [
                "/**\r\n     * Removes the `range` from the document.\r\n     * @param {Range} range A specified Range to remove\r\n     * @returns {Object} Returns the new `start` property of the range, which contains `startRow` and `startColumn`. If `range` is empty, this function returns the unmodified value of `range.start`.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Object",
                "range": "Range"
            },
            "described": true
        },
        "removeInLine": {
            "line": 446,
            "jsDoc": [
                "/**\r\n     * Removes the specified columns from the `row`. This method also triggers a `\"change\"` event.\r\n     * @param {Number} row The row to remove from\r\n     * @param {Number} startColumn The column to start removing at \r\n     * @param {Number} endColumn The column to stop removing at\r\n     * @returns {Object} Returns an object containing `startRow` and `startColumn`, indicating the new row and column values.<br/>If `startColumn` is equal to `endColumn`, this function returns nothing.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Object",
                "row": "Number",
                "startColumn": "Number",
                "endColumn": "Number"
            },
            "described": true
        },
        "removeFullLines": {
            "line": 467,
            "jsDoc": [
                "/**\r\n     * Removes a range of full lines. This method also triggers the `\"change\"` event.\r\n     * @param {Number} firstRow The first row to be removed\r\n     * @param {Number} lastRow The last row to be removed\r\n     * @returns {[String]} Returns all the removed lines.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "[String]",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "removeNewLine": {
            "line": 502,
            "jsDoc": [
                "/**\r\n     * Removes the new line between `row` and the row immediately following it. This method also triggers the `\"change\"` event.\r\n     * @param {Number} row The row to check\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "row": "Number"
            },
            "described": true
        },
        "replace": {
            "line": 523,
            "jsDoc": [
                "/**\r\n     * Replaces a range in the document with the new `text`.\r\n     * @param {Range} range A specified Range to replace\r\n     * @param {String} text The new text to use as a replacement\r\n     * @returns {Object} Returns an object containing the final row and column, like this:\r\n     *     {row: endRow, column: 0}\r\n     * If the text and range are empty, this function returns an object containing the current `range.start` value.\r\n     * If the text is the exact same as what currently exists, this function returns an object containing the current `range.end` value.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Object",
                "range": "Range",
                "text": "String"
            },
            "described": true
        },
        "applyDeltas": {
            "line": 550,
            "jsDoc": [
                "/**\r\n     * Applies all changes in `deltas` to the document.\r\n     * @param {Delta[]} deltas An array of delta objects (can include \"insert\" and \"remove\" actions)\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "deltas": "Delta[]"
            },
            "described": true
        },
        "revertDeltas": {
            "line": 560,
            "jsDoc": [
                "/**\r\n     * Reverts all changes in `deltas` from the document.\r\n     * @param {Delta[]} deltas An array of delta objects (can include \"insert\" and \"remove\" actions)\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "deltas": "Delta[]"
            },
            "described": true
        },
        "applyDelta": {
            "line": 570,
            "jsDoc": [
                "/**\r\n     * Applies `delta` to the document.\r\n     * @param {Object} delta A delta object (can include \"insert\" and \"remove\" actions)\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "delta": "Object",
                "doNotValidate": "any"
            },
            "described": true
        },
        "$safeApplyDelta": {
            "line": 587,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "$splitAndapplyLargeDelta": {
            "line": 598,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "delta": "any",
                "MAX": "any"
            },
            "described": true
        },
        "revertDelta": {
            "line": 634,
            "jsDoc": [
                "/**\r\n     * Reverts `delta` from the document.\r\n     * @param {Object} delta A delta object (can include \"insert\" and \"remove\" actions)\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "void",
                "delta": "Object"
            },
            "described": true
        },
        "indexToPosition": {
            "line": 659,
            "jsDoc": [
                "/**\r\n     * Converts an index position in a document to a `{row, column}` object.\r\n     *\r\n     * Index refers to the \"absolute position\" of a character in the document. For example:\r\n     *\r\n     * ```javascript\r\n     * var x = 0; // 10 characters, plus one for newline\r\n     * var y = -1;\r\n     * ```\r\n     * \r\n     * Here, `y` is an index 15: 11 characters for the first row, and 5 characters until `y` in the second.\r\n     *\r\n     * @param {Number} index An index to convert\r\n     * @param {Number} startRow=0 The row from which to start the conversion\r\n     * @returns {Object} A `{row, column}` object of the `index` position\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "index": "Number",
                "startRow": "Number"
            },
            "described": true
        },
        "positionToIndex": {
            "line": 686,
            "jsDoc": [
                "/**\r\n     * Converts the `{row, column}` position in a document to the character's index.\r\n     *\r\n     * Index refers to the \"absolute position\" of a character in the document. For example:\r\n     *\r\n     * ```javascript\r\n     * var x = 0; // 10 characters, plus one for newline\r\n     * var y = -1;\r\n     * ```\r\n     * \r\n     * Here, `y` is an index 15: 11 characters for the first row, and 5 characters until `y` in the second.\r\n     *\r\n     * @param {Object} pos The `{row, column}` to convert\r\n     * @param {Number} startRow=0 The row from which to start the conversion\r\n     * @returns {Number} The index position in the document\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/document.js",
            "params": {
                "return": "Number",
                "pos": "Object",
                "startRow": "Number"
            },
            "described": true
        },
        "visit": {
            "line": 6252,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "revisit": {
            "line": 6259,
            "jsDoc": [
                "/**\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 1133,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 1164,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 1165,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 1166,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 1168,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 1175,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 1177,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 1179,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 1181,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 1183,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 1185,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 1187,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 1189,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 1191,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 1193,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 1195,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 1197,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 1199,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 1201,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "BracketMatch": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/edit_session/bracket_match.js",
        "findMatchingBracket": {
            "line": 40,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/bracket_match.js",
            "params": {
                "return": "any",
                "position": "any",
                "chr": "any"
            },
            "described": true
        },
        "getBracketRange": {
            "line": 56,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/bracket_match.js",
            "params": {
                "return": "any",
                "pos": "any"
            },
            "described": true
        },
        "getMatchingBracketRanges": {
            "line": 105,
            "jsDoc": [
                "/**\r\n     * Returns:\r\n     * * null if there is no any bracket at `pos`;\r\n     * * two Ranges if there is opening and closing brackets;\r\n     * * one Range if there is only one bracket\r\n     *\r\n     * @param {Point} pos\r\n     * @returns {null|Range[]}\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/bracket_match.js",
            "params": {
                "return": "null|Range[]",
                "pos": "Point"
            },
            "described": true
        },
        "$findOpeningBracket": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/bracket_match.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "bracket": "any",
                "position": "any",
                "typeRe": "any"
            },
            "described": true
        },
        "$findClosingBracket": {
            "line": 197,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/bracket_match.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "bracket": "any",
                "position": "any",
                "typeRe": "any"
            },
            "described": true
        },
        "described": true
    },
    "Fold": {
        "line": 39,
        "jsDoc": [
            "/**\r\n * Simple fold-data struct.\r\n ***/"
        ],
        "sourceName": "ace_new/ace/lib/ace/edit_session/fold.js",
        "toString": {
            "line": 54,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "setFoldLine": {
            "line": 58,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold.js",
            "params": {
                "return": "void",
                "foldLine": "any"
            },
            "described": true
        },
        "clone": {
            "line": 65,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "addSubFold": {
            "line": 75,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold.js",
            "params": {
                "return": "any",
                "fold": "any"
            },
            "described": true
        },
        "restoreRange": {
            "line": 116,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold.js",
            "params": {
                "return": "void",
                "range": "any"
            },
            "described": true
        },
        "described": true,
        "range_prop": {
            "line": 1224,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "start_prop": {
            "line": 1225,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "end_prop": {
            "line": 1226,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "foldLine_prop": {
            "line": 1227,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "sameRow_prop": {
            "line": 1228,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "subFolds_prop": {
            "line": 1229,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "FoldLine": {
        "line": 39,
        "jsDoc": [
            "/**\r\n * If an array is passed in, the folds are expected to be sorted already.\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
        "shiftRow": {
            "line": 62,
            "jsDoc": [
                "/**\r\n     * Note: This doesn't update wrapData!\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "void",
                "shift": "any"
            },
            "described": true
        },
        "addFold": {
            "line": 71,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "void",
                "fold": "any"
            },
            "described": true
        },
        "containsRow": {
            "line": 101,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "boolean",
                "row": "any"
            },
            "described": true
        },
        "walk": {
            "line": 105,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "void",
                "callback": "any",
                "endRow": "any",
                "endColumn": "any"
            },
            "described": true
        },
        "getNextFoldTo": {
            "line": 143,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "{ fold: any; kind: string; }",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "addRemoveChars": {
            "line": 163,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "void",
                "row": "any",
                "column": "any",
                "len": "any"
            },
            "described": true
        },
        "split": {
            "line": 194,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "any",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "merge": {
            "line": 218,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "void",
                "foldLineNext": "any"
            },
            "described": true
        },
        "toString": {
            "line": 229,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "idxToPosition": {
            "line": 239,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/fold_line.js",
            "params": {
                "return": "any",
                "idx": "any"
            },
            "described": true
        },
        "described": true,
        "folds_prop": {
            "line": 1206,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "range_prop": {
            "line": 1207,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "start_prop": {
            "line": 1208,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "end_prop": {
            "line": 1209,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Folding": {
        "line": 39,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
        "getFoldAt": {
            "line": 45,
            "jsDoc": [
                "/**\r\n     * Looks up a fold at a given row/column. Possible values for side:\r\n     *   -1: ignore a fold if fold.start = row/column\r\n     *   +1: ignore a fold if fold.end = row/column\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "row": "any",
                "column": "any",
                "side": "any"
            },
            "described": true
        },
        "getFoldsInRange": {
            "line": 68,
            "jsDoc": [
                "/**\r\n     * Returns all folds in the given range. Note, that this will return folds\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "{}",
                "range": "any"
            },
            "described": true
        },
        "getFoldsInRangeList": {
            "line": 112,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "{}",
                "ranges": "any"
            },
            "described": true
        },
        "getAllFolds": {
            "line": 127,
            "jsDoc": [
                "/**\r\n     * Returns all folds in the document\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "{}"
            },
            "described": true
        },
        "getFoldStringAt": {
            "line": 155,
            "jsDoc": [
                "/**\r\n     * Returns the string between folds at the given position.\r\n     * E.g.\r\n     *  foo<fold>b|ar<fold>wolrd -> \"bar\"\r\n     *  foo<fold>bar<fold>wol|rd -> \"world\"\r\n     *  foo<fold>bar<fo|ld>wolrd -> <null>\r\n     *\r\n     * where | means the position of row/column\r\n     *\r\n     * The trim option determs if the return string should be trimed according\r\n     * to the \"side\" passed with the trim value:\r\n     *\r\n     * E.g.\r\n     *  foo<fold>b|ar<fold>wolrd -trim=-1> \"b\"\r\n     *  foo<fold>bar<fold>wol|rd -trim=+1> \"rld\"\r\n     *  fo|o<fold>bar<fold>wolrd -trim=00> \"foo\"\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "row": "any",
                "column": "any",
                "trim": "any",
                "foldLine": "any"
            },
            "described": true
        },
        "getFoldLine": {
            "line": 190,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "docRow": "any",
                "startFoldLine": "any"
            },
            "described": true
        },
        "getNextFoldLine": {
            "line": 209,
            "jsDoc": [
                "/** returns the fold which starts after or contains docRow**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "docRow": "any",
                "startFoldLine": "any"
            },
            "described": true
        },
        "getFoldedRowCount": {
            "line": 225,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "number",
                "first": "any",
                "last": "any"
            },
            "described": true
        },
        "$addFoldLine": {
            "line": 249,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "foldLine": "any"
            },
            "described": true
        },
        "addFold": {
            "line": 264,
            "jsDoc": [
                "/**\r\n     * Adds a new fold.\r\n     *\r\n     * @returns\r\n     *      The new created Fold object or an existing fold object in case the\r\n     *      passed in range fits an existing fold exactly.\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "placeholder": "any",
                "range": "any"
            },
            "described": true
        },
        "addFolds": {
            "line": 345,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "folds": "any"
            },
            "described": true
        },
        "removeFold": {
            "line": 351,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "fold": "any"
            },
            "described": true
        },
        "removeFolds": {
            "line": 404,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "folds": "any"
            },
            "described": true
        },
        "expandFold": {
            "line": 419,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "fold": "any"
            },
            "described": true
        },
        "expandFolds": {
            "line": 431,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "folds": "any"
            },
            "described": true
        },
        "unfold": {
            "line": 437,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "location": "any",
                "expandInner": "any"
            },
            "described": true
        },
        "isRowFolded": {
            "line": 482,
            "jsDoc": [
                "/**\r\n     * Checks if a given documentRow is folded. This is true if there are some\r\n     * folded parts such that some parts of the line is still visible.\r\n     ***/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "boolean",
                "docRow": "any",
                "startFoldRow": "any"
            },
            "described": true
        },
        "getRowFoldEnd": {
            "line": 486,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "docRow": "any",
                "startFoldRow": "any"
            },
            "described": true
        },
        "getRowFoldStart": {
            "line": 491,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "docRow": "any",
                "startFoldRow": "any"
            },
            "described": true
        },
        "getFoldDisplayLine": {
            "line": 496,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "string",
                "foldLine": "any",
                "endRow": "any",
                "endColumn": "any",
                "startRow": "any",
                "startColumn": "any"
            },
            "described": true
        },
        "getDisplayLine": {
            "line": 529,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "row": "any",
                "endColumn": "any",
                "startRow": "any",
                "startColumn": "any"
            },
            "described": true
        },
        "$cloneFoldData": {
            "line": 542,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "{}"
            },
            "described": true
        },
        "toggleFold": {
            "line": 554,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "tryToUnfold": "any"
            },
            "described": true
        },
        "getCommentFoldRange": {
            "line": 614,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "row": "any",
                "column": "any",
                "dir": "any"
            },
            "described": true
        },
        "foldAll": {
            "line": 658,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "startRow": "any",
                "endRow": "any",
                "depth": "any",
                "test": "any"
            },
            "described": true
        },
        "foldToLevel": {
            "line": 687,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "level": "any"
            },
            "described": true
        },
        "foldAllComments": {
            "line": 693,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setFoldStyle": {
            "line": 715,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "style": "any"
            },
            "described": true
        },
        "$setFolding": {
            "line": 733,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "foldMode": "any"
            },
            "described": true
        },
        "getParentFoldRangeData": {
            "line": 758,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "{ range?: undefined; firstRange?: undefined; } | { range: any; firstRange: any; }",
                "row": "any",
                "ignoreCurrent": "any"
            },
            "described": true
        },
        "onFoldWidgetClick": {
            "line": 785,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "row": "any",
                "e": "any"
            },
            "described": true
        },
        "$toggleFoldWidget": {
            "line": 801,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "any",
                "row": "any",
                "options": "any"
            },
            "described": true
        },
        "toggleFoldWidget": {
            "line": 849,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "toggleParent": "any"
            },
            "described": true
        },
        "updateFoldWidgets": {
            "line": 872,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "tokenizerUpdateFoldWidgets": {
            "line": 886,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session/folding.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "described": true
    },
    "EditSession": {
        "line": 143,
        "jsDoc": [
            "/**\r\n * Stores all the data about [[Editor `Editor`]] state providing easy way to change editors state.\r\n *\r\n * `EditSession` can be attached to only one [[Document `Document`]]. Same `Document` can be attached to several `EditSession`s.\r\n * @class EditSession\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/edit_session.js",
        "construct": {
            "line": 143,
            "jsDoc": [
                "/**\r\n * Sets up a new `EditSession` and associates it with the given `Document` and `TextMode`.\r\n * @param {Document | String} text [If `text` is a `Document`, it associates the `EditSession` with it. Otherwise, a new `Document` is created, with the initial text]{: #textParam}\r\n * @param {TextMode} mode [The initial language mode to use for the document]{: #modeParam}\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "text": "Document | String",
                "mode": "TextMode"
            },
            "described": true
        },
        "change_event": {
            "line": 54,
            "jsDoc": [
                "/**\r\n *\r\n * Emitted when the document changes.\r\n * @event change\r\n * @param {Object} e An object containing a `delta` of information about the change.\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "changeTabSize_event": {
            "line": 60,
            "jsDoc": [
                "/**\r\n * Emitted when the tab size changes, via [[EditSession.setTabSize]].\r\n *\r\n * @event changeTabSize\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeOverwrite_event": {
            "line": 65,
            "jsDoc": [
                "/**\r\n * Emitted when the ability to overwrite text changes, via [[EditSession.setOverwrite]].\r\n *\r\n * @event changeOverwrite\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeBreakpoint_event": {
            "line": 70,
            "jsDoc": [
                "/**\r\n * Emitted when the gutter changes, either by setting or removing breakpoints, or when the gutter decorations change.\r\n *\r\n * @event changeBreakpoint\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeFrontMarker_event": {
            "line": 75,
            "jsDoc": [
                "/**\r\n * Emitted when a front marker changes.\r\n *\r\n * @event changeFrontMarker\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeBackMarker_event": {
            "line": 80,
            "jsDoc": [
                "/**\r\n * Emitted when a back marker changes.\r\n *\r\n * @event changeBackMarker\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeAnnotation_event": {
            "line": 85,
            "jsDoc": [
                "/**\r\n * Emitted when an annotation changes, like through [[EditSession.setAnnotations]].\r\n *\r\n * @event changeAnnotation\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "tokenizerUpdate_event": {
            "line": 90,
            "jsDoc": [
                "/**\r\n * Emitted when a background tokenizer asynchronously processes new rows.\r\n * @event tokenizerUpdate\r\n *\r\n * @param {Object} e An object containing one property, `\"data\"`, that contains information about the changing rows\r\n *\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "changeMode_event": {
            "line": 97,
            "jsDoc": [
                "/**\r\n * Emitted when the current mode changes.\r\n *\r\n * @event changeMode\r\n *\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeWrapMode_event": {
            "line": 103,
            "jsDoc": [
                "/**\r\n * Emitted when the wrap mode changes.\r\n *\r\n * @event changeWrapMode\r\n *\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeWrapLimit_event": {
            "line": 109,
            "jsDoc": [
                "/**\r\n * Emitted when the wrapping limit changes.\r\n *\r\n * @event changeWrapLimit\r\n *\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeFold_event": {
            "line": 115,
            "jsDoc": [
                "/**\r\n * Emitted when a code fold is added or removed.\r\n *\r\n * @event changeFold\r\n *\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {},
            "described": true
        },
        "changeScrollTop_event": {
            "line": 121,
            "jsDoc": [
                "/**\r\n * Emitted when the scroll top changes.\r\n * @event changeScrollTop\r\n *\r\n * @param {Number} scrollTop The new scroll top value\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "scrollTop": "Number"
            },
            "described": true
        },
        "changeScrollLeft_event": {
            "line": 127,
            "jsDoc": [
                "/**\r\n * Emitted when the scroll left changes.\r\n * @event changeScrollLeft\r\n *\r\n * @param {Number} scrollLeft The new scroll left value\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "scrollLeft": "Number"
            },
            "described": true
        },
        "setDocument": {
            "line": 195,
            "jsDoc": [
                "/**\r\n     * Sets the `EditSession` to point to a new `Document`. If a `BackgroundTokenizer` exists, it also points to `doc`.\r\n     *\r\n     * @param {Document} doc The new `Document` to use\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "doc": "Document"
            },
            "described": true
        },
        "getDocument": {
            "line": 211,
            "jsDoc": [
                "/**\r\n     * Returns the `Document` associated with this session.\r\n     * @return {Document}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Document"
            },
            "described": true
        },
        "$resetRowCache": {
            "line": 219,
            "jsDoc": [
                "/**\r\n     * @param {Number} row The row to work with\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "docRow": "any"
            },
            "described": true
        },
        "$getRowCacheIndex": {
            "line": 233,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number",
                "cacheArray": "any",
                "val": "any"
            },
            "described": true
        },
        "resetCaches": {
            "line": 252,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeFold": {
            "line": 261,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "onChange": {
            "line": 266,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "setValue": {
            "line": 295,
            "jsDoc": [
                "/**\r\n     * Sets the session text.\r\n     * @param {String} text The new text to place\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "text": "String"
            },
            "described": true
        },
        "toString": {
            "line": 318,
            "jsDoc": [
                "/**\r\n     * Returns the current [[Document `Document`]] as a string.\r\n     * @method toString\r\n     * @returns {String}\r\n     * @alias EditSession.getValue\r\n     *\r\n     **/",
                "/**\r\n     * Returns the current [[Document `Document`]] as a string.\r\n     * @method getValue\r\n     * @returns {String}\r\n     * @alias EditSession.toString\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "getValue": {
            "line": 318,
            "jsDoc": [
                "/**\r\n     * Returns the current [[Document `Document`]] as a string.\r\n     * @method toString\r\n     * @returns {String}\r\n     * @alias EditSession.getValue\r\n     *\r\n     **/",
                "/**\r\n     * Returns the current [[Document `Document`]] as a string.\r\n     * @method getValue\r\n     * @returns {String}\r\n     * @alias EditSession.toString\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "getSelection": {
            "line": 326,
            "jsDoc": [
                "/**\r\n     * Returns selection object.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getState": {
            "line": 336,
            "jsDoc": [
                "/**\r\n     * {:BackgroundTokenizer.getState}\r\n     * @param {Number} row The row to start at\r\n     *\r\n     * @related BackgroundTokenizer.getState\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "row": "Number"
            },
            "described": true
        },
        "getTokens": {
            "line": 347,
            "jsDoc": [
                "/**\r\n     * Starts tokenizing at the row indicated. Returns a list of objects of the tokenized rows.\r\n     * @param {Number} row The row to start at\r\n     *\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "row": "Number"
            },
            "described": true
        },
        "getTokenAt": {
            "line": 358,
            "jsDoc": [
                "/**\r\n     * Returns an object indicating the token at the current row. The object has two properties: `index` and `start`.\r\n     * @param {Number} row The row number to retrieve from\r\n     * @param {Number} column The column number to retrieve from\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "setUndoManager": {
            "line": 385,
            "jsDoc": [
                "/**\r\n     * Sets the undo manager.\r\n     * @param {UndoManager} undoManager The new undo manager\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "undoManager": "UndoManager"
            },
            "described": true
        },
        "$syncInformUndoManager": {
            "line": 394,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "markUndoGroup": {
            "line": 407,
            "jsDoc": [
                "/**\r\n     * starts a new group in undo history\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getUndoManager": {
            "line": 427,
            "jsDoc": [
                "/**\r\n     * Returns the current undo manager.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getTabString": {
            "line": 434,
            "jsDoc": [
                "/**\r\n     * Returns the current value for tabs. If the user is using soft tabs, this will be a series of spaces (defined by [[EditSession.getTabSize `getTabSize()`]]); otherwise it's simply `'\\t'`.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setUseSoftTabs": {
            "line": 446,
            "jsDoc": [
                "/**\r\n     * Pass `true` to enable the use of soft tabs. Soft tabs means you're using spaces instead of the tab character (`'\\t'`).\r\n     * @param {Boolean} useSoftTabs Value indicating whether or not to use soft tabs\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "val": "any"
            },
            "described": true
        },
        "getUseSoftTabs": {
            "line": 453,
            "jsDoc": [
                "/**\r\n     * Returns `true` if soft tabs are being used, `false` otherwise.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "setTabSize": {
            "line": 461,
            "jsDoc": [
                "/**\r\n     * Set the number of spaces that define a soft tab; for example, passing in `4` transforms the soft tabs to be equivalent to four spaces. This function also emits the `changeTabSize` event.\r\n     * @param {Number} tabSize The new tab size\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "tabSize": "Number"
            },
            "described": true
        },
        "getTabSize": {
            "line": 467,
            "jsDoc": [
                "/**\r\n     * Returns the current tab size.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "isTabStop": {
            "line": 476,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the character at the position is a soft tab.\r\n     * @param {Object} position The position to check\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean",
                "position": "Object"
            },
            "described": true
        },
        "setNavigateWithinSoftTabs": {
            "line": 484,
            "jsDoc": [
                "/**\r\n     * Set whether keyboard navigation of soft tabs moves the cursor within the soft tab, rather than over\r\n     * @param {Boolean} navigateWithinSoftTabs Value indicating whether or not to navigate within soft tabs\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "navigateWithinSoftTabs": "Boolean"
            },
            "described": true
        },
        "getNavigateWithinSoftTabs": {
            "line": 491,
            "jsDoc": [
                "/**\r\n     * Returns `true` if keyboard navigation moves the cursor within soft tabs, `false` if it moves the cursor over soft tabs.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setOverwrite": {
            "line": 505,
            "jsDoc": [
                "/**\r\n     * Pass in `true` to enable overwrites in your session, or `false` to disable.\r\n     *\r\n     * If overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emits the `changeOverwrite` event.\r\n     *\r\n     * @param {Boolean} overwrite Defines whether or not to set overwrites\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "overwrite": "Boolean"
            },
            "described": true
        },
        "getOverwrite": {
            "line": 512,
            "jsDoc": [
                "/**\r\n     * Returns `true` if overwrites are enabled; `false` otherwise.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "toggleOverwrite": {
            "line": 519,
            "jsDoc": [
                "/**\r\n     * Sets the value of overwrite to the opposite of whatever it currently is.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "addGutterDecoration": {
            "line": 529,
            "jsDoc": [
                "/**\r\n     * Adds `className` to the `row`, to be used for CSS stylings and whatnot.\r\n     * @param {Number} row The row number\r\n     * @param {String} className The class to add\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "row": "Number",
                "className": "String"
            },
            "described": true
        },
        "removeGutterDecoration": {
            "line": 542,
            "jsDoc": [
                "/**\r\n     * Removes `className` from the `row`.\r\n     * @param {Number} row The row number\r\n     * @param {String} className The class to add\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "row": "Number",
                "className": "String"
            },
            "described": true
        },
        "getBreakpoints": {
            "line": 551,
            "jsDoc": [
                "/**\r\n     * Returns an array of strings, indicating the breakpoint class (if any) applied to each row.\r\n     * @returns {[String]}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "[String]"
            },
            "described": true
        },
        "setBreakpoints": {
            "line": 560,
            "jsDoc": [
                "/**\r\n     * Sets a breakpoint on every row number given by `rows`. This function also emites the `'changeBreakpoint'` event.\r\n     * @param {Array} rows An array of row indices\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "rows": "Array"
            },
            "described": true
        },
        "clearBreakpoints": {
            "line": 571,
            "jsDoc": [
                "/**\r\n     * Removes all breakpoints on the rows. This function also emits the `'changeBreakpoint'` event.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setBreakpoint": {
            "line": 582,
            "jsDoc": [
                "/**\r\n     * Sets a breakpoint on the row number given by `row`. This function also emits the `'changeBreakpoint'` event.\r\n     * @param {Number} row A row index\r\n     * @param {String} className Class of the breakpoint\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "row": "Number",
                "className": "String"
            },
            "described": true
        },
        "clearBreakpoint": {
            "line": 597,
            "jsDoc": [
                "/**\r\n     * Removes a breakpoint on the row number given by `row`. This function also emits the `'changeBreakpoint'` event.\r\n     * @param {Number} row A row index\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "row": "Number"
            },
            "described": true
        },
        "addMarker": {
            "line": 611,
            "jsDoc": [
                "/**\r\n     * Adds a new marker to the given `Range`. If `inFront` is `true`, a front marker is defined, and the `'changeFrontMarker'` event fires; otherwise, the `'changeBackMarker'` event fires.\r\n     * @param {Range} range Define the range of the marker\r\n     * @param {String} clazz Set the CSS class for the marker\r\n     * @param {Function | String} type Identify the type of the marker\r\n     * @param {Boolean} inFront Set to `true` to establish a front marker\r\n     *\r\n     * @return {Number} The new marker id\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number",
                "range": "Range",
                "clazz": "String",
                "type": "Function | String",
                "inFront": "Boolean"
            },
            "described": true
        },
        "addDynamicMarker": {
            "line": 641,
            "jsDoc": [
                "/**\r\n     * Adds a dynamic marker to the session.\r\n     * @param {Object} marker object with update method\r\n     * @param {Boolean} inFront Set to `true` to establish a front marker\r\n     *\r\n     * @return {Object} The added marker\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Object",
                "marker": "Object",
                "inFront": "Boolean"
            },
            "described": true
        },
        "removeMarker": {
            "line": 664,
            "jsDoc": [
                "/**\r\n     * Removes the marker with the specified ID. If this marker was in front, the `'changeFrontMarker'` event is emitted. If the marker was in the back, the `'changeBackMarker'` event is emitted.\r\n     * @param {Number} markerId A number representing a marker\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "markerId": "Number"
            },
            "described": true
        },
        "getMarkers": {
            "line": 680,
            "jsDoc": [
                "/**\r\n     * Returns an object containing all of the markers, either front or back.\r\n     * @param {Boolean} inFront If `true`, indicates you only want front markers; `false` indicates only back markers\r\n     *\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Object",
                "inFront": "Boolean"
            },
            "described": true
        },
        "highlight": {
            "line": 684,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "re": "any"
            },
            "described": true
        },
        "highlightLines": {
            "line": 693,
            "jsDoc": [
                "/** experimental**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "startRow": "any",
                "endRow": "any",
                "clazz": "any",
                "inFront": "any"
            },
            "described": true
        },
        "setAnnotations": {
            "line": 720,
            "jsDoc": [
                "/**\r\n     * Sets annotations for the `EditSession`. This functions emits the `'changeAnnotation'` event.\r\n     * @param {Annotation[]} annotations A list of annotations\r\n     *\r\n     **/",
                "/**\r\n     * Error:\r\n     *  {\r\n     *    row: 12,\r\n     *    column: 2, //can be undefined\r\n     *    text: \"Missing argument\",\r\n     *    type: \"error\" // or \"warning\" or \"info\"\r\n     *  }\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "annotations": "Annotation[]"
            },
            "described": true
        },
        "getAnnotations": {
            "line": 729,
            "jsDoc": [
                "/**\r\n     * Returns the annotations for the `EditSession`.\r\n     * @returns {Annotation[]}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Annotation[]"
            },
            "described": true
        },
        "clearAnnotations": {
            "line": 736,
            "jsDoc": [
                "/**\r\n     * Clears all the annotations for this session. This function also triggers the `'changeAnnotation'` event.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$detectNewLine": {
            "line": 745,
            "jsDoc": [
                "/**\r\n     * If `text` contains either the newline (`\\n`) or carriage-return ('\\r') characters, `$autoNewLine` stores that value.\r\n     * @param {String} text A block of text\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "text": "String"
            },
            "described": true
        },
        "getWordRange": {
            "line": 761,
            "jsDoc": [
                "/**\r\n     * Given a starting row and column, this method returns the `Range` of the first word boundary it finds.\r\n     * @param {Number} row The row to start at\r\n     * @param {Number} column The column to start at\r\n     *\r\n     * @returns {Range}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Range",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "getAWordRange": {
            "line": 802,
            "jsDoc": [
                "/**\r\n     * Gets the range of a word, including its right whitespace.\r\n     * @param {Number} row The row number to start from\r\n     * @param {Number} column The column number to start from\r\n     *\r\n     * @return {Range}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Range",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "setNewLineMode": {
            "line": 819,
            "jsDoc": [
                "/**\r\n     * {:Document.setNewLineMode.desc}\r\n     * @param {String} newLineMode {:Document.setNewLineMode.param}\r\n     *\r\n     *\r\n     * @related Document.setNewLineMode\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "newLineMode": "String"
            },
            "described": true
        },
        "getNewLineMode": {
            "line": 829,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the current new line mode.\r\n     * @returns {String}\r\n     * @related Document.getNewLineMode\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "setUseWorker": {
            "line": 838,
            "jsDoc": [
                "/**\r\n     * Identifies if you want to use a worker for the `EditSession`.\r\n     * @param {Boolean} useWorker Set to `true` to use a worker\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "useWorker": "Boolean"
            },
            "described": true
        },
        "getUseWorker": {
            "line": 843,
            "jsDoc": [
                "/**\r\n     * Returns `true` if workers are being used.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "onReloadTokenizer": {
            "line": 848,
            "jsDoc": [
                "/**\r\n     * Reloads all the tokens on the current session. This function calls [[BackgroundTokenizer.start `BackgroundTokenizer.start ()`]] to all the rows; it also emits the `'tokenizerUpdate'` event.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "setMode": {
            "line": 864,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "mode": "any",
                "cb": "any"
            },
            "described": true
        },
        "$onChangeMode": {
            "line": 906,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "mode": "any",
                "$isPlaceholder": "any"
            },
            "described": true
        },
        "$stopWorker": {
            "line": 945,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$startWorker": {
            "line": 952,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getMode": {
            "line": 965,
            "jsDoc": [
                "/**\r\n     * Returns the current text mode.\r\n     * @returns {TextMode} The current text mode\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "TextMode"
            },
            "described": true
        },
        "setScrollTop": {
            "line": 975,
            "jsDoc": [
                "/**\r\n     * This function sets the scroll top value. It also emits the `'changeScrollTop'` event.\r\n     * @param {Number} scrollTop The new scroll top value\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "scrollTop": "Number"
            },
            "described": true
        },
        "getScrollTop": {
            "line": 988,
            "jsDoc": [
                "/**\r\n     * [Returns the value of the distance between the top of the editor and the topmost part of the visible content.]{: #EditSession.getScrollTop}\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setScrollLeft": {
            "line": 996,
            "jsDoc": [
                "/**\r\n     * [Sets the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.setScrollLeft}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "scrollLeft": "any"
            },
            "described": true
        },
        "getScrollLeft": {
            "line": 1009,
            "jsDoc": [
                "/**\r\n     * [Returns the value of the distance between the left of the editor and the leftmost part of the visible content.]{: #EditSession.getScrollLeft}\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getScreenWidth": {
            "line": 1017,
            "jsDoc": [
                "/**\r\n     * Returns the width of the screen.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getLineWidgetMaxWidth": {
            "line": 1024,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$computeWidth": {
            "line": 1034,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "force": "any"
            },
            "described": true
        },
        "getLine": {
            "line": 1074,
            "jsDoc": [
                "/**\r\n     * Returns a verbatim copy of the given line as it is in the document\r\n     * @param {Number} row The row to retrieve from\r\n     *\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "String",
                "row": "Number"
            },
            "described": true
        },
        "getLines": {
            "line": 1086,
            "jsDoc": [
                "/**\r\n     * Returns an array of strings of the rows between `firstRow` and `lastRow`. This function is inclusive of `lastRow`.\r\n     * @param {Number} firstRow The first row index to retrieve\r\n     * @param {Number} lastRow The final row index to retrieve\r\n     *\r\n     * @returns {[String]}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "[String]",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "getLength": {
            "line": 1094,
            "jsDoc": [
                "/**\r\n     * Returns the number of rows in the document.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getTextRange": {
            "line": 1104,
            "jsDoc": [
                "/**\r\n     * {:Document.getTextRange.desc}\r\n     * @param {Range} range The range to work with\r\n     *\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "String",
                "range": "Range"
            },
            "described": true
        },
        "insert": {
            "line": 1116,
            "jsDoc": [
                "/**\r\n     * Inserts a block of `text` and the indicated `position`.\r\n     * @param {Object} position The position {row, column} to start inserting at\r\n     * @param {String} text A chunk of text to insert\r\n     * @returns {Object} The position of the last line of `text`. If the length of `text` is 0, this function simply returns `position`.\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Object",
                "position": "Object",
                "text": "String"
            },
            "described": true
        },
        "remove": {
            "line": 1128,
            "jsDoc": [
                "/**\r\n     * Removes the `range` from the document.\r\n     * @param {Range} range A specified Range to remove\r\n     * @returns {Object} The new `start` property of the range, which contains `startRow` and `startColumn`. If `range` is empty, this function returns the unmodified value of `range.start`.\r\n     *\r\n     * @related Document.remove\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Object",
                "range": "Range"
            },
            "described": true
        },
        "removeFullLines": {
            "line": 1141,
            "jsDoc": [
                "/**\r\n     * Removes a range of full lines. This method also triggers the `'change'` event.\r\n     * @param {Number} firstRow The first row to be removed\r\n     * @param {Number} lastRow The last row to be removed\r\n     * @returns {[String]} Returns all the removed lines.\r\n     *\r\n     * @related Document.removeFullLines\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "[String]",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "undoChanges": {
            "line": 1152,
            "jsDoc": [
                "/**\r\n     * Reverts previous changes to your document.\r\n     * @param {Delta[]} deltas An array of previous changes\r\n     * @param {Boolean} dontSelect [If `true`, doesn't select the range of where the change occured]{: #dontSelect}\r\n     *\r\n     * @returns {Range}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "deltas": "Delta[]",
                "dontSelect": "Boolean"
            },
            "described": true
        },
        "redoChanges": {
            "line": 1181,
            "jsDoc": [
                "/**\r\n     * Re-implements a previously undone change to your document.\r\n     * @param {Delta[]} deltas An array of previous changes\r\n     * @param {Boolean} dontSelect {:dontSelect}\r\n     *\r\n     * @returns {Range}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "deltas": "Delta[]",
                "dontSelect": "Boolean"
            },
            "described": true
        },
        "setUndoSelect": {
            "line": 1207,
            "jsDoc": [
                "/**\r\n     * Enables or disables highlighting of the range where an undo occurred.\r\n     * @param {Boolean} enable If `true`, selects the range of the reinserted change\r\n     *      \r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "enable": "Boolean"
            },
            "described": true
        },
        "$getUndoSelection": {
            "line": 1211,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "deltas": "any",
                "isUndo": "any"
            },
            "described": true
        },
        "replace": {
            "line": 1263,
            "jsDoc": [
                "/**\r\n     * Replaces a range in the document with the new `text`.\r\n     *\r\n     * @param {Range} range A specified Range to replace\r\n     * @param {String} text The new text to use as a replacement\r\n     * @returns {Object} An object containing the final row and column, like this:\r\n     * ```\r\n     * {row: endRow, column: 0}\r\n     * ```\r\n     * If the text and range are empty, this function returns an object containing the current `range.start` value.\r\n     * If the text is the exact same as what currently exists, this function returns an object containing the current `range.end` value.\r\n     *\r\n     * @related Document.replace\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Object",
                "range": "Range",
                "text": "String"
            },
            "described": true
        },
        "moveText": {
            "line": 1276,
            "jsDoc": [
                "/**\r\n     * Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:\r\n     *  ```json\r\n     *    { row: newRowLocation, column: newColumnLocation }\r\n     *  ```\r\n     * @param {Range} fromRange The range of text you want moved within the document\r\n     * @param {Object} toPosition The location (row and column) where you want to move the text to\r\n     * @returns {Range} The new range where the text was moved to.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Range",
                "fromRange": "Range",
                "toPosition": "Object",
                "copy": "any"
            },
            "described": true
        },
        "indentRows": {
            "line": 1328,
            "jsDoc": [
                "/**\r\n     * Indents all the rows, from `startRow` to `endRow` (inclusive), by prefixing each row with the token in `indentString`.\r\n     *\r\n     * If `indentString` contains the `'\\t'` character, it's replaced by whatever is defined by [[EditSession.getTabString `getTabString()`]].\r\n     * @param {Number} startRow Starting row\r\n     * @param {Number} endRow Ending row\r\n     * @param {String} indentString The indent token\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "startRow": "Number",
                "endRow": "Number",
                "indentString": "String"
            },
            "described": true
        },
        "outdentRows": {
            "line": 1339,
            "jsDoc": [
                "/**\r\n     * Outdents all the rows defined by the `start` and `end` properties of `range`.\r\n     * @param {Range} range A range of rows\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "range": "Range"
            },
            "described": true
        },
        "$moveLines": {
            "line": 1363,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number",
                "firstRow": "any",
                "lastRow": "any",
                "dir": "any"
            },
            "described": true
        },
        "moveLinesUp": {
            "line": 1402,
            "jsDoc": [
                "/**\r\n     * Shifts all the lines in the document up one, starting from `firstRow` and ending at `lastRow`.\r\n     * @param {Number} firstRow The starting row to move up\r\n     * @param {Number} lastRow The final row to move up\r\n     * @returns {Number} If `firstRow` is less-than or equal to 0, this function returns 0. Otherwise, on success, it returns -1.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "moveLinesDown": {
            "line": 1412,
            "jsDoc": [
                "/**\r\n     * Shifts all the lines in the document down one, starting from `firstRow` and ending at `lastRow`.\r\n     * @param {Number} firstRow The starting row to move down\r\n     * @param {Number} lastRow The final row to move down\r\n     * @returns {Number} If `firstRow` is less-than or equal to 0, this function returns 0. Otherwise, on success, it returns -1.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "duplicateLines": {
            "line": 1424,
            "jsDoc": [
                "/**\r\n     * Duplicates all the text between `firstRow` and `lastRow`.\r\n     * @param {Number} firstRow The starting row to duplicate\r\n     * @param {Number} lastRow The final row to duplicate\r\n     * @returns {Number} Returns the number of new rows added; in other words, `lastRow - firstRow + 1`.\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "$clipRowToDocument": {
            "line": 1429,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "row": "any"
            },
            "described": true
        },
        "$clipColumnToRow": {
            "line": 1433,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "$clipPositionToDocument": {
            "line": 1440,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "{ row: any; column: any; }",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "$clipRangeToDocument": {
            "line": 1462,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "range": "any"
            },
            "described": true
        },
        "setUseWrapMode": {
            "line": 1499,
            "jsDoc": [
                "/**\r\n     * Sets whether or not line wrapping is enabled. If `useWrapMode` is different than the current value, the `'changeWrapMode'` event is emitted.\r\n     * @param {Boolean} useWrapMode Enable (or disable) wrap mode\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "useWrapMode": "Boolean"
            },
            "described": true
        },
        "getUseWrapMode": {
            "line": 1520,
            "jsDoc": [
                "/**\r\n     * Returns `true` if wrap mode is being used; `false` otherwise.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setWrapLimitRange": {
            "line": 1534,
            "jsDoc": [
                "/**\r\n     * Sets the boundaries of wrap. Either value can be `null` to have an unconstrained wrap, or, they can be the same number to pin the limit. If the wrap limits for `min` or `max` are different, this method also emits the `'changeWrapMode'` event.\r\n     * @param {Number} min The minimum wrap value (the left side wrap)\r\n     * @param {Number} max The maximum wrap value (the right side wrap)\r\n     *\r\n     **/",
                "/** Allow the wrap limit to move freely between min and max. Either**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "min": "Number",
                "max": "Number"
            },
            "described": true
        },
        "adjustWrapLimit": {
            "line": 1553,
            "jsDoc": [
                "/**\r\n     * This should generally only be called by the renderer when a resize is detected.\r\n     * @param {Number} desiredLimit The new wrap limit\r\n     * @returns {Boolean}\r\n     *\r\n     * @private\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean",
                "desiredLimit": "Number",
                "$printMargin": "any"
            },
            "described": true
        },
        "$constrainWrapLimit": {
            "line": 1571,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "wrapLimit": "any",
                "min": "any",
                "max": "any"
            },
            "described": true
        },
        "getWrapLimit": {
            "line": 1585,
            "jsDoc": [
                "/**\r\n     * Returns the value of wrap limit.\r\n     * @returns {Number} The wrap limit.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setWrapLimit": {
            "line": 1595,
            "jsDoc": [
                "/**\r\n     * Sets the line length for soft wrap in the editor. Lines will break\r\n     *  at a minimum of the given length minus 20 chars and at a maximum\r\n     *  of the given number of chars.\r\n     * @param {number} limit The maximum line length in chars, for soft wrapping lines.\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "limit": "number"
            },
            "described": true
        },
        "getWrapLimitRange": {
            "line": 1606,
            "jsDoc": [
                "/**\r\n     * Returns an object that defines the minimum and maximum of the wrap limit; it looks something like this:\r\n     *\r\n     *     { min: wrapLimitRange_min, max: wrapLimitRange_max }\r\n     *\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "{ min: any; max: any; }"
            },
            "described": true
        },
        "$updateInternalDataOnChange": {
            "line": 1614,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "delta": "any"
            },
            "described": true
        },
        "$updateRowLengthCache": {
            "line": 1722,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "firstRow": "any",
                "lastRow": "any",
                "b": "any"
            },
            "described": true
        },
        "$updateWrapData": {
            "line": 1727,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "firstRow": "any",
                "lastRow": "any"
            },
            "described": true
        },
        "$computeWrapSplits": {
            "line": 1782,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "{}",
                "tokens": "any",
                "wrapLimit": "any",
                "tabSize": "any"
            },
            "described": true
        },
        "$getDisplayTokens": {
            "line": 1937,
            "jsDoc": [
                "/**\r\n     * Given a string, returns an array of the display characters, including tabs and spaces.\r\n     * @param {String} str The string to check\r\n     * @param {Number} offset The value to start at\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "{}",
                "str": "String",
                "offset": "Number"
            },
            "described": true
        },
        "$getStringScreenWidth": {
            "line": 1978,
            "jsDoc": [
                "/**\r\n     * Calculates the width of the string `str` on the screen while assuming that the string starts at the first column on the screen.\r\n     * @param {String} str The string to calculate the screen width of\r\n     * @param {Number} maxScreenColumn\r\n     * @param {Number} screenColumn\r\n     * @returns {[Number]} Returns an `int[]` array with two elements:<br/>\r\n     * The first position indicates the number of columns for `str` on screen.<br/>\r\n     * The second value contains the position of the document column that this function read until.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "[Number]",
                "str": "String",
                "maxScreenColumn": "Number",
                "screenColumn": "Number"
            },
            "described": true
        },
        "getRowLength": {
            "line": 2013,
            "jsDoc": [
                "/**\r\n     * Returns number of screenrows in a wrapped line.\r\n     * @param {Number} row The row number to check\r\n     *\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number",
                "row": "Number"
            },
            "described": true
        },
        "getRowLineCount": {
            "line": 2023,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "row": "any"
            },
            "described": true
        },
        "getRowWrapIndent": {
            "line": 2031,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "screenRow": "any"
            },
            "described": true
        },
        "getScreenLastRowColumn": {
            "line": 2048,
            "jsDoc": [
                "/**\r\n     * Returns the position (on screen) for the last character in the provided screen row.\r\n     * @param {Number} screenRow The screen row to check\r\n     * @returns {Number}\r\n     *\r\n     * @related EditSession.documentToScreenColumn\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number",
                "screenRow": "Number"
            },
            "described": true
        },
        "getDocumentLastRowColumn": {
            "line": 2059,
            "jsDoc": [
                "/**\r\n     * For the given document row and column, this returns the column position of the last screen row.\r\n     * @param {Number} docRow\r\n     *\r\n     * @param {Number} docColumn\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "docRow": "Number",
                "docColumn": "Number"
            },
            "described": true
        },
        "getDocumentLastRowColumnPosition": {
            "line": 2070,
            "jsDoc": [
                "/**\r\n     * For the given document row and column, this returns the document position of the last row.\r\n     * @param {Number} docRow\r\n     * @param {Number} docColumn\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "docRow": "Number",
                "docColumn": "Number"
            },
            "described": true
        },
        "getRowSplitData": {
            "line": 2079,
            "jsDoc": [
                "/**\r\n     * For the given row, this returns the split data.\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "String",
                "row": "any"
            },
            "described": true
        },
        "getScreenTabSize": {
            "line": 2093,
            "jsDoc": [
                "/**\r\n     * The distance to the next tab stop at the specified screen column.\r\n     * @param {Number} screenColumn The screen column to check\r\n     *\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number",
                "screenColumn": "Number"
            },
            "described": true
        },
        "screenToDocumentRow": {
            "line": 2098,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "screenRow": "any",
                "screenColumn": "any"
            },
            "described": true
        },
        "screenToDocumentColumn": {
            "line": 2103,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "screenRow": "any",
                "screenColumn": "any"
            },
            "described": true
        },
        "screenToDocumentPosition": {
            "line": 2117,
            "jsDoc": [
                "/**\r\n     * Converts characters coordinates on the screen to characters coordinates within the document. [This takes into account code folding, word wrap, tab size, and any other visual modifications.]{: #conversionConsiderations}\r\n     * @param {Number} screenRow The screen row to check\r\n     * @param {Number} screenColumn The screen column to check\r\n     * @param {Number} offsetX screen character x-offset [optional]\r\n     *\r\n     * @returns {Object} The object returned has two properties: `row` and `column`.\r\n     *\r\n     * @related EditSession.documentToScreenPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Object",
                "screenRow": "Number",
                "screenColumn": "Number",
                "offsetX": "Number"
            },
            "described": true
        },
        "documentToScreenPosition": {
            "line": 2213,
            "jsDoc": [
                "/**\r\n     * Converts document coordinates to screen coordinates. {:conversionConsiderations}\r\n     * @param {Number} docRow The document row to check\r\n     * @param {Number} docColumn The document column to check\r\n     * @returns {Object} The object returned by this method has two properties: `row` and `column`.\r\n     *\r\n     * @related EditSession.screenToDocumentPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "{ row: number; column: any; }",
                "docRow": "Number",
                "docColumn": "Number"
            },
            "described": true
        },
        "documentToScreenColumn": {
            "line": 2315,
            "jsDoc": [
                "/**\r\n     * For the given document row and column, returns the screen column.\r\n     * @param {Number} row\r\n     * @param {Number} docColumn\r\n     * @returns {Number}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "Number",
                "row": "Number",
                "docColumn": "Number"
            },
            "described": true
        },
        "documentToScreenRow": {
            "line": 2325,
            "jsDoc": [
                "/**\r\n     * For the given document row and column, returns the screen row.\r\n     * @param {Number} docRow\r\n     * @param {Number} docColumn\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any",
                "docRow": "Number",
                "docColumn": "Number"
            },
            "described": true
        },
        "getScreenLength": {
            "line": 2333,
            "jsDoc": [
                "/**\r\n     * Returns the length of the screen.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "$setFontMetrics": {
            "line": 2374,
            "jsDoc": [
                "/**\r\n     * @private\r\n     *\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void",
                "fm": "any"
            },
            "described": true
        },
        "destroy": {
            "line": 2401,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getSelectionMarkers": {
            "line": 56,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true,
        "foldAllComments": {
            "line": 1630,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "foldToLevel": {
            "line": 1631,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 1633,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 1634,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 1635,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 1636,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 1637,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 1638,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 1639,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 1640,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 1641,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 1642,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 1643,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 1644,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 1645,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 1646,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "selection_prop": {
            "line": 1662,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "on": {
            "line": 1664,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOption": {
            "line": 1683,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOption": {
            "line": 1684,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getdocumentLastRowColumnPosition": {
            "line": 1773,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 1787,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 1788,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 1789,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 1790,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldAt": {
            "line": 1791,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldsInRange": {
            "line": 1792,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldsInRangeList": {
            "line": 1793,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getAllFolds": {
            "line": 1794,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addFold": {
            "line": 1795,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addFolds": {
            "line": 1796,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeFold": {
            "line": 1797,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeFolds": {
            "line": 1798,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "expandFold": {
            "line": 1799,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "expandFolds": {
            "line": 1800,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "foldAll": {
            "line": 1801,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOptions": {
            "line": 1802,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOptions": {
            "line": 1803,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setFontMetrics": {
            "line": 1832,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldStringAt": {
            "line": 1835,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldLine": {
            "line": 1836,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getNextFoldLine": {
            "line": 1837,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldedRowCount": {
            "line": 1838,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "$addFoldLine": {
            "line": 1839,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "unfold": {
            "line": 1840,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "isRowFolded": {
            "line": 1841,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getRowFoldEnd": {
            "line": 1842,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getRowFoldStart": {
            "line": 1843,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getFoldDisplayLine": {
            "line": 1844,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getDisplayLine": {
            "line": 1845,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "$cloneFoldData": {
            "line": 1846,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "toggleFold": {
            "line": 1847,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getCommentFoldRange": {
            "line": 1848,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setFoldStyle": {
            "line": 1849,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "$setFolding": {
            "line": 1850,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getParentFoldRangeData": {
            "line": 1851,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "onFoldWidgetClick": {
            "line": 1852,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "$toggleFoldWidget": {
            "line": 1853,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "toggleFoldWidget": {
            "line": 1854,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "updateFoldWidgets": {
            "line": 1855,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "tokenizerUpdateFoldWidgets": {
            "line": 1856,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "EditSessionOptions": {
        "wrap_prop": {
            "line": 2463,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "wrapMethod_prop": {
            "line": 2497,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "indentedSoftWrap_prop": {
            "line": 2513,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "firstLineNumber_prop": {
            "line": 2522,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "useWorker_prop": {
            "line": 2526,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "useSoftTabs_prop": {
            "line": 2536,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "tabSize_prop": {
            "line": 2537,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "navigateWithinSoftTabs_prop": {
            "line": 2550,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "foldStyle_prop": {
            "line": 2551,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "overwrite_prop": {
            "line": 2555,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "newLineMode_prop": {
            "line": 2559,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "mode_prop": {
            "line": 2564,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/edit_session.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "Editor": {
        "line": 71,
        "jsDoc": [
            "/**\r\n * The main entry point into the Ace functionality.\r\n *\r\n * The `Editor` manages the [[EditSession]] (which manages [[Document]]s), as well as the [[VirtualRenderer]], which draws everything to the screen.\r\n *\r\n * Event sessions dealing with the mouse and keyboard are bubbled up from `Document` to the `Editor`, which decides what to do with them.\r\n * @class Editor\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/editor.js",
        "construct": {
            "line": 71,
            "jsDoc": [
                "/**\r\n * Creates a new `Editor` object.\r\n *\r\n * @param {VirtualRenderer} renderer Associated `VirtualRenderer` that draws everything\r\n * @param {EditSession} session The `EditSession` to refer to\r\n *\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "renderer": "VirtualRenderer",
                "session": "EditSession"
            },
            "described": true
        },
        "$initOperationListeners": {
            "line": 121,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "startOperation": {
            "line": 147,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "commandEvent": "any"
            },
            "described": true
        },
        "endOperation": {
            "line": 167,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "$historyTracker": {
            "line": 215,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "setKeyboardHandler": {
            "line": 256,
            "jsDoc": [
                "/**\r\n     * Sets a new key handler, such as \"vim\" or \"windows\".\r\n     * @param {String} keyboardHandler The new key handler\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "keyboardHandler": "String",
                "cb": "any"
            },
            "described": true
        },
        "getKeyboardHandler": {
            "line": 278,
            "jsDoc": [
                "/**\r\n     * Returns the keyboard handler, such as \"vim\" or \"windows\".\r\n     *\r\n     * @returns {String}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "setSession": {
            "line": 294,
            "jsDoc": [
                "/**\r\n     * Sets a new editsession to use. This method also emits the `'changeSession'` event.\r\n     * @param {EditSession} session The new session to use\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "session": "EditSession"
            },
            "described": true
        },
        "changeSession_event": {
            "line": 283,
            "jsDoc": [
                "/**\r\n     * Emitted whenever the [[EditSession]] changes.\r\n     * @event changeSession\r\n     * @param {Object} e An object with two properties, `oldSession` and `session`, that represent the old and new [[EditSession]]s.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "getSession": {
            "line": 411,
            "jsDoc": [
                "/**\r\n     * Returns the current session being used.\r\n     * @returns {EditSession}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "EditSession"
            },
            "described": true
        },
        "setValue": {
            "line": 423,
            "jsDoc": [
                "/**\r\n     * Sets the current document to `val`.\r\n     * @param {String} val The new value to set for the document\r\n     * @param {Number} cursorPos Where to set the new value. `undefined` or 0 is selectAll, -1 is at the document start, and 1 is at the end\r\n     *\r\n     * @returns {String} The current document value\r\n     * @related Document.setValue\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "String",
                "val": "String",
                "cursorPos": "Number"
            },
            "described": true
        },
        "getValue": {
            "line": 442,
            "jsDoc": [
                "/**\r\n     * Returns the current session's content.\r\n     *\r\n     * @returns {String}\r\n     * @related EditSession.getValue\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "getSelection": {
            "line": 451,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the currently highlighted selection.\r\n     * @returns {Selection} The selection object\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Selection"
            },
            "described": true
        },
        "resize": {
            "line": 462,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.onResize}\r\n     * @param {Boolean} force If `true`, recomputes the size, even if the height and width haven't changed\r\n     *\r\n     *\r\n     * @related VirtualRenderer.onResize\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "force": "Boolean"
            },
            "described": true
        },
        "setTheme": {
            "line": 471,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.setTheme}\r\n     * @param {String} theme The path to a theme\r\n     * @param {Function} cb optional callback called when theme is loaded\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "theme": "String",
                "cb": "Function"
            },
            "described": true
        },
        "getTheme": {
            "line": 481,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.getTheme}\r\n     *\r\n     * @returns {String} The set theme\r\n     * @related VirtualRenderer.getTheme\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "setStyle": {
            "line": 492,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.setStyle}\r\n     * @param {String} style A class name\r\n     *\r\n     *\r\n     * @related VirtualRenderer.setStyle\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "style": "String"
            },
            "described": true
        },
        "unsetStyle": {
            "line": 500,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.unsetStyle}\r\n     * @related VirtualRenderer.unsetStyle\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "style": "any"
            },
            "described": true
        },
        "getFontSize": {
            "line": 507,
            "jsDoc": [
                "/**\r\n     * Gets the current font size of the editor text.\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setFontSize": {
            "line": 518,
            "jsDoc": [
                "/**\r\n     * Set a new font size (in pixels) for the editor text.\r\n     * @param {String} size A font size ( _e.g._ \"12px\")\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "size": "String"
            },
            "described": true
        },
        "$highlightBrackets": {
            "line": 522,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$highlightTags": {
            "line": 571,
            "jsDoc": [
                "/** todo: move to mode.getMatching**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "focus": {
            "line": 692,
            "jsDoc": [
                "/**\r\n     *\r\n     * Brings the current `textInput` into focus.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "isFocused": {
            "line": 700,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the current `textInput` is in focus.\r\n     * @return {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "blur": {
            "line": 708,
            "jsDoc": [
                "/**\r\n     *\r\n     * Blurs the current `textInput`.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onFocus": {
            "line": 718,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "focus_event": {
            "line": 712,
            "jsDoc": [
                "/**\r\n     * Emitted once the editor comes into focus.\r\n     * @event focus\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {},
            "described": true
        },
        "onBlur": {
            "line": 733,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "blur_event": {
            "line": 727,
            "jsDoc": [
                "/**\r\n     * Emitted once the editor has been blurred.\r\n     * @event blur\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {},
            "described": true
        },
        "$cursorChange": {
            "line": 742,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onDocumentChange": {
            "line": 757,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "change_event": {
            "line": 749,
            "jsDoc": [
                "/**\r\n     * Emitted whenever the document is changed.\r\n     * @event change\r\n     * @param {Object} e Contains a single property, `data`, which has the delta of changes\r\n     *\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "onTokenizerUpdate": {
            "line": 769,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "onScrollTopChange": {
            "line": 775,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onScrollLeftChange": {
            "line": 779,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onCursorChange": {
            "line": 787,
            "jsDoc": [
                "/**\r\n     * Emitted when the selection changes.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$updateHighlightActiveLine": {
            "line": 792,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onSelectionChange": {
            "line": 820,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "$getSelectionHighLightRegexp": {
            "line": 842,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "onChangeFrontMarker": {
            "line": 873,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeBackMarker": {
            "line": 877,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeBreakpoint": {
            "line": 882,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeAnnotation": {
            "line": 886,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeMode": {
            "line": 891,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "onChangeWrapLimit": {
            "line": 897,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeWrapMode": {
            "line": 901,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeFold": {
            "line": 906,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getSelectedText": {
            "line": 524,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "getCopyText": {
            "line": 933,
            "jsDoc": [
                "/**\r\n     * Returns the string of text currently highlighted.\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "copy_event": {
            "line": 923,
            "jsDoc": [
                "/**\r\n     * Emitted when text is copied.\r\n     * @event copy\r\n     * @param {String} text The copied text\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "text": "String"
            },
            "described": true
        },
        "onCopy": {
            "line": 956,
            "jsDoc": [
                "/**\r\n     * Called whenever a text \"copy\" happens.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onCut": {
            "line": 963,
            "jsDoc": [
                "/**\r\n     * Called whenever a text \"cut\" happens.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onPaste": {
            "line": 980,
            "jsDoc": [
                "/**\r\n     * Called whenever a text \"paste\" happens.\r\n     * @param {String} text The pasted text\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "text": "String",
                "event": "any"
            },
            "described": true
        },
        "paste_event": {
            "line": 967,
            "jsDoc": [
                "/**\r\n     * Emitted when text is pasted.\r\n     * @event paste\r\n     * @param {Object} an object which contains one property, `text`, that represents the text to be pasted. Editing this property will alter the text that is pasted.\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "an": "Object"
            },
            "described": true
        },
        "$handlePaste": {
            "line": 985,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "execCommand": {
            "line": 1020,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "command": "any",
                "args": "any"
            },
            "described": true
        },
        "insert": {
            "line": 1029,
            "jsDoc": [
                "/**\r\n     * Inserts `text` into wherever the cursor is pointing.\r\n     * @param {String} text The new text to add\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "text": "String",
                "pasted": "any"
            },
            "described": true
        },
        "autoIndent": {
            "line": 1104,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onTextInput": {
            "line": 1149,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "text": "any",
                "composition": "any"
            },
            "described": true
        },
        "applyComposition": {
            "line": 1162,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "text": "any",
                "composition": "any"
            },
            "described": true
        },
        "onCommandKey": {
            "line": 1185,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "e": "any",
                "hashId": "any",
                "keyCode": "any"
            },
            "described": true
        },
        "setOverwrite": {
            "line": 1196,
            "jsDoc": [
                "/**\r\n     * Pass in `true` to enable overwrites in your session, or `false` to disable. If overwrites is enabled, any text you enter will type over any text after it. If the value of `overwrite` changes, this function also emits the `changeOverwrite` event.\r\n     * @param {Boolean} overwrite Defines whether or not to set overwrites\r\n     *\r\n     *\r\n     * @related EditSession.setOverwrite\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "overwrite": "Boolean"
            },
            "described": true
        },
        "getOverwrite": {
            "line": 1205,
            "jsDoc": [
                "/**\r\n     * Returns `true` if overwrites are enabled; `false` otherwise.\r\n     * @returns {Boolean}\r\n     * @related EditSession.getOverwrite\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "toggleOverwrite": {
            "line": 1213,
            "jsDoc": [
                "/**\r\n     * Sets the value of overwrite to the opposite of whatever it currently is.\r\n     * @related EditSession.toggleOverwrite\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setScrollSpeed": {
            "line": 1221,
            "jsDoc": [
                "/**\r\n     * Sets how fast the mouse scrolling should do.\r\n     * @param {Number} speed A value indicating the new speed (in milliseconds)\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "speed": "Number"
            },
            "described": true
        },
        "getScrollSpeed": {
            "line": 1229,
            "jsDoc": [
                "/**\r\n     * Returns the value indicating how fast the mouse scroll speed is (in milliseconds).\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setDragDelay": {
            "line": 1237,
            "jsDoc": [
                "/**\r\n     * Sets the delay (in milliseconds) of the mouse drag.\r\n     * @param {Number} dragDelay A value indicating the new delay\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "dragDelay": "Number"
            },
            "described": true
        },
        "getDragDelay": {
            "line": 1245,
            "jsDoc": [
                "/**\r\n     * Returns the current mouse drag delay.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setSelectionStyle": {
            "line": 1259,
            "jsDoc": [
                "/**\r\n     * Draw selection markers spanning whole line, or only over selected text. Default value is \"line\"\r\n     * @param {String} style The new selection style \"line\"|\"text\"\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "val": "any"
            },
            "described": true
        },
        "changeSelectionStyle_event": {
            "line": 1249,
            "jsDoc": [
                "/**\r\n     * Emitted when the selection style changes, via [[Editor.setSelectionStyle]].\r\n     * @event changeSelectionStyle\r\n     * @param {Object} data Contains one property, `data`, which indicates the new selection style\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "data": "Object"
            },
            "described": true
        },
        "getSelectionStyle": {
            "line": 1267,
            "jsDoc": [
                "/**\r\n     * Returns the current selection style.\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "setHighlightActiveLine": {
            "line": 1275,
            "jsDoc": [
                "/**\r\n     * Determines whether or not the current line should be highlighted.\r\n     * @param {Boolean} shouldHighlight Set to `true` to highlight the current line\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "shouldHighlight": "Boolean"
            },
            "described": true
        },
        "getHighlightActiveLine": {
            "line": 1282,
            "jsDoc": [
                "/**\r\n     * Returns `true` if current lines are always highlighted.\r\n     * @return {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setHighlightGutterLine": {
            "line": 1285,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "shouldHighlight": "any"
            },
            "described": true
        },
        "getHighlightGutterLine": {
            "line": 1289,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setHighlightSelectedWord": {
            "line": 1298,
            "jsDoc": [
                "/**\r\n     * Determines if the currently selected word should be highlighted.\r\n     * @param {Boolean} shouldHighlight Set to `true` to highlight the currently selected word\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "shouldHighlight": "Boolean"
            },
            "described": true
        },
        "getHighlightSelectedWord": {
            "line": 1306,
            "jsDoc": [
                "/**\r\n     * Returns `true` if currently highlighted words are to be highlighted.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setAnimatedScroll": {
            "line": 1310,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "shouldAnimate": "any"
            },
            "described": true
        },
        "getAnimatedScroll": {
            "line": 1314,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setShowInvisibles": {
            "line": 1323,
            "jsDoc": [
                "/**\r\n     * If `showInvisibles` is set to `true`, invisible characters&mdash;like spaces or new lines&mdash;are show in the editor.\r\n     * @param {Boolean} showInvisibles Specifies whether or not to show invisible characters\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "showInvisibles": "Boolean"
            },
            "described": true
        },
        "getShowInvisibles": {
            "line": 1331,
            "jsDoc": [
                "/**\r\n     * Returns `true` if invisible characters are being shown.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setDisplayIndentGuides": {
            "line": 1335,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "display": "any"
            },
            "described": true
        },
        "getDisplayIndentGuides": {
            "line": 1339,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setShowPrintMargin": {
            "line": 1348,
            "jsDoc": [
                "/**\r\n     * If `showPrintMargin` is set to `true`, the print margin is shown in the editor.\r\n     * @param {Boolean} showPrintMargin Specifies whether or not to show the print margin\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "showPrintMargin": "Boolean"
            },
            "described": true
        },
        "getShowPrintMargin": {
            "line": 1356,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the print margin is being shown.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setPrintMarginColumn": {
            "line": 1365,
            "jsDoc": [
                "/**\r\n     * Sets the column defining where the print margin should be.\r\n     * @param {Number} showPrintMargin Specifies the new print margin\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "showPrintMargin": "Number"
            },
            "described": true
        },
        "getPrintMarginColumn": {
            "line": 1373,
            "jsDoc": [
                "/**\r\n     * Returns the column number of where the print margin is.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setReadOnly": {
            "line": 1382,
            "jsDoc": [
                "/**\r\n     * If `readOnly` is true, then the editor is set to read-only mode, and none of the content can change.\r\n     * @param {Boolean} readOnly Specifies whether the editor can be modified or not\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "readOnly": "Boolean"
            },
            "described": true
        },
        "getReadOnly": {
            "line": 1390,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the editor is set to read-only mode.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setBehavioursEnabled": {
            "line": 1399,
            "jsDoc": [
                "/**\r\n     * Specifies whether to use behaviors or not. [\"Behaviors\" in this case is the auto-pairing of special characters, like quotation marks, parenthesis, or brackets.]{: #BehaviorsDef}\r\n     * @param {Boolean} enabled Enables or disables behaviors\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "enabled": "Boolean"
            },
            "described": true
        },
        "getBehavioursEnabled": {
            "line": 1408,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the behaviors are currently enabled. {:BehaviorsDef}\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setWrapBehavioursEnabled": {
            "line": 1418,
            "jsDoc": [
                "/**\r\n     * Specifies whether to use wrapping behaviors or not, i.e. automatically wrapping the selection with characters such as brackets\r\n     * when such a character is typed in.\r\n     * @param {Boolean} enabled Enables or disables wrapping behaviors\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "enabled": "Boolean"
            },
            "described": true
        },
        "getWrapBehavioursEnabled": {
            "line": 1425,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the wrapping behaviors are currently enabled.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setShowFoldWidgets": {
            "line": 1433,
            "jsDoc": [
                "/**\r\n     * Indicates whether the fold widgets should be shown or not.\r\n     * @param {Boolean} show Specifies whether the fold widgets are shown\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "show": "Boolean"
            },
            "described": true
        },
        "getShowFoldWidgets": {
            "line": 1441,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the fold widgets are shown.\r\n     * @return {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setFadeFoldWidgets": {
            "line": 1445,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "fade": "any"
            },
            "described": true
        },
        "getFadeFoldWidgets": {
            "line": 1449,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "remove": {
            "line": 1458,
            "jsDoc": [
                "/**\r\n     * Removes the current selection or one character.\r\n     * @param {String} dir The direction of the deletion to occur, either \"left\" or \"right\"\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "dir": "String"
            },
            "described": true
        },
        "removeWordRight": {
            "line": 1492,
            "jsDoc": [
                "/**\r\n     * Removes the word directly to the right of the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "removeWordLeft": {
            "line": 1503,
            "jsDoc": [
                "/**\r\n     * Removes the word directly to the left of the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "removeToLineStart": {
            "line": 1514,
            "jsDoc": [
                "/**\r\n     * Removes all the words to the left of the current selection, until the start of the line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "removeToLineEnd": {
            "line": 1526,
            "jsDoc": [
                "/**\r\n     * Removes all the words to the right of the current selection, until the end of the line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "splitLine": {
            "line": 1543,
            "jsDoc": [
                "/**\r\n     * Splits the line at the current selection (by inserting an `'\\n'`).\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "transposeLetters": {
            "line": 1557,
            "jsDoc": [
                "/**\r\n     * Transposes current line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "toLowerCase": {
            "line": 1584,
            "jsDoc": [
                "/**\r\n     * Converts the current selection entirely into lowercase.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "toUpperCase": {
            "line": 1599,
            "jsDoc": [
                "/**\r\n     * Converts the current selection entirely into uppercase.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "indent": {
            "line": 1616,
            "jsDoc": [
                "/**\r\n     * Inserts an indentation into the current cursor position or indents the selected lines.\r\n     *\r\n     * @related EditSession.indentRows\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "blockIndent": {
            "line": 1657,
            "jsDoc": [
                "/**\r\n     * Indents the current line.\r\n     * @related EditSession.indentRows\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "blockOutdent": {
            "line": 1666,
            "jsDoc": [
                "/**\r\n     * Outdents the current line.\r\n     * @related EditSession.outdentRows\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "sortLines": {
            "line": 1672,
            "jsDoc": [
                "/** TODO: move out of core when we have good mechanism for managing extensions**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "toggleCommentLines": {
            "line": 1699,
            "jsDoc": [
                "/**\r\n     * Given the currently selected range, this function either comments all the lines, or uncomments all of them.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "toggleBlockComment": {
            "line": 1705,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getNumberAt": {
            "line": 1716,
            "jsDoc": [
                "/**\r\n     * Works like [[EditSession.getTokenAt]], except it returns a number.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "{ value: any; start: any; end: any; }",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "modifyNumber": {
            "line": 1740,
            "jsDoc": [
                "/**\r\n     * If the character before the cursor is a number, this functions changes its value by `amount`.\r\n     * @param {Number} amount The value to change the numeral by (can be negative to decrease value)\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "amount": "Number"
            },
            "described": true
        },
        "toggleWord": {
            "line": 1810,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "removeLines": {
            "line": 1865,
            "jsDoc": [
                "/**\r\n     * Removes all the lines in the current selection\r\n     * @related EditSession.remove\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "duplicateSelection": {
            "line": 1871,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveLinesDown": {
            "line": 1895,
            "jsDoc": [
                "/**\r\n     * Shifts all the selected lines down one row.\r\n     *\r\n     * @returns {Number} On success, it returns -1.\r\n     * @related EditSession.moveLinesUp\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveLinesUp": {
            "line": 1904,
            "jsDoc": [
                "/**\r\n     * Shifts all the selected lines up one row.\r\n     * @returns {Number} On success, it returns -1.\r\n     * @related EditSession.moveLinesDown\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveText": {
            "line": 1919,
            "jsDoc": [
                "/**\r\n     * Moves a range of text from the given range to the given position. `toPosition` is an object that looks like this:\r\n     * ```json\r\n     *    { row: newRowLocation, column: newColumnLocation }\r\n     * ```\r\n     * @param {Range} fromRange The range of text you want moved within the document\r\n     * @param {Object} toPosition The location (row and column) where you want to move the text to\r\n     *\r\n     * @returns {Range} The new range where the text was moved to.\r\n     * @related EditSession.moveText\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Range",
                "range": "any",
                "toPosition": "Object",
                "copy": "any"
            },
            "described": true
        },
        "copyLinesUp": {
            "line": 1928,
            "jsDoc": [
                "/**\r\n     * Copies all the selected lines up one row.\r\n     * @returns {Number} On success, returns 0.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "copyLinesDown": {
            "line": 1938,
            "jsDoc": [
                "/**\r\n     * Copies all the selected lines down one row.\r\n     * @returns {Number} On success, returns the number of new rows added; in other words, `lastRow - firstRow + 1`.\r\n     * @related EditSession.duplicateLines\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$moveLines": {
            "line": 1947,
            "jsDoc": [
                "/**\r\n     * for internal use\r\n     * @ignore\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "dir": "any",
                "copy": "any"
            },
            "described": true
        },
        "$getSelectedRows": {
            "line": 2006,
            "jsDoc": [
                "/**\r\n     * Returns an object indicating the currently selected rows. The object looks like this:\r\n     *\r\n     * ```json\r\n     * { first: range.start.row, last: range.end.row }\r\n     * ```\r\n     *\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "{ first: any; last: any; }",
                "range": "any"
            },
            "described": true
        },
        "onCompositionStart": {
            "line": 2015,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "compositionState": "any"
            },
            "described": true
        },
        "onCompositionUpdate": {
            "line": 2019,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "text": "any"
            },
            "described": true
        },
        "onCompositionEnd": {
            "line": 2023,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getFirstVisibleRow": {
            "line": 2033,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.getFirstVisibleRow}\r\n     *\r\n     * @returns {Number}\r\n     * @related VirtualRenderer.getFirstVisibleRow\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getLastVisibleRow": {
            "line": 2043,
            "jsDoc": [
                "/**\r\n     * {:VirtualRenderer.getLastVisibleRow}\r\n     *\r\n     * @returns {Number}\r\n     * @related VirtualRenderer.getLastVisibleRow\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "isRowVisible": {
            "line": 2053,
            "jsDoc": [
                "/**\r\n     * Indicates if the row is currently visible on the screen.\r\n     * @param {Number} row The row to check\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean",
                "row": "Number"
            },
            "described": true
        },
        "isRowFullyVisible": {
            "line": 2064,
            "jsDoc": [
                "/**\r\n     * Indicates if the entire row is currently visible on the screen.\r\n     * @param {Number} row The row to check\r\n     *\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean",
                "row": "Number"
            },
            "described": true
        },
        "$getVisibleRowCount": {
            "line": 2072,
            "jsDoc": [
                "/**\r\n     * Returns the number of currently visible rows.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "$moveByPage": {
            "line": 2076,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "dir": "any",
                "select": "any"
            },
            "described": true
        },
        "selectPageDown": {
            "line": 2102,
            "jsDoc": [
                "/**\r\n     * Selects the text from the current position of the document until where a \"page down\" finishes.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectPageUp": {
            "line": 2109,
            "jsDoc": [
                "/**\r\n     * Selects the text from the current position of the document until where a \"page up\" finishes.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "gotoPageDown": {
            "line": 2116,
            "jsDoc": [
                "/**\r\n     * Shifts the document to wherever \"page down\" is, as well as moving the cursor position.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "gotoPageUp": {
            "line": 2123,
            "jsDoc": [
                "/**\r\n     * Shifts the document to wherever \"page up\" is, as well as moving the cursor position.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollPageDown": {
            "line": 2130,
            "jsDoc": [
                "/**\r\n     * Scrolls the document to wherever \"page down\" is, without changing the cursor position.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollPageUp": {
            "line": 2137,
            "jsDoc": [
                "/**\r\n     * Scrolls the document to wherever \"page up\" is, without changing the cursor position.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollToRow": {
            "line": 2145,
            "jsDoc": [
                "/**\r\n     * Moves the editor to the specified row.\r\n     * @related VirtualRenderer.scrollToRow\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "row": "any"
            },
            "described": true
        },
        "scrollToLine": {
            "line": 2159,
            "jsDoc": [
                "/**\r\n     * Scrolls to a line. If `center` is `true`, it puts the line in middle of screen (or attempts to).\r\n     * @param {Number} line The line to scroll to\r\n     * @param {Boolean} center If `true`\r\n     * @param {Boolean} animate If `true` animates scrolling\r\n     * @param {Function} callback Function to be called when the animation has finished\r\n     *\r\n     *\r\n     * @related VirtualRenderer.scrollToLine\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "line": "Number",
                "center": "Boolean",
                "animate": "Boolean",
                "callback": "Function"
            },
            "described": true
        },
        "centerSelection": {
            "line": 2166,
            "jsDoc": [
                "/**\r\n     * Attempts to center the current selection on the screen.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getCursorPosition": {
            "line": 2185,
            "jsDoc": [
                "/**\r\n     * Gets the current position of the cursor.\r\n     * @returns {Object} An object that looks something like this:\r\n     *\r\n     * ```json\r\n     * { row: currRow, column: currCol }\r\n     * ```\r\n     *\r\n     * @related Selection.getCursor\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "getCursorPositionScreen": {
            "line": 2194,
            "jsDoc": [
                "/**\r\n     * Returns the screen position of the cursor.\r\n     * @returns {Number}\r\n     * @related EditSession.documentToScreenPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getSelectionRange": {
            "line": 2203,
            "jsDoc": [
                "/**\r\n     * {:Selection.getRange}\r\n     * @returns {Range}\r\n     * @related Selection.getRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Range"
            },
            "described": true
        },
        "selectAll": {
            "line": 2212,
            "jsDoc": [
                "/**\r\n     * Selects all the text in editor.\r\n     * @related Selection.selectAll\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "clearSelection": {
            "line": 2220,
            "jsDoc": [
                "/**\r\n     * {:Selection.clearSelection}\r\n     * @related Selection.clearSelection\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorTo": {
            "line": 2232,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the specified row and column. Note that this does not de-select the current selection.\r\n     * @param {Number} row The new row number\r\n     * @param {Number} column The new column number\r\n     *\r\n     *\r\n     * @related Selection.moveCursorTo\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "moveCursorToPosition": {
            "line": 2243,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the position indicated by `pos.row` and `pos.column`.\r\n     * @param {Object} pos An object with two properties, row and column\r\n     *\r\n     *\r\n     * @related Selection.moveCursorToPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "pos": "Object"
            },
            "described": true
        },
        "jumpToMatching": {
            "line": 2251,
            "jsDoc": [
                "/**\r\n     * Moves the cursor's row and column to the next matching bracket or HTML tag.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "select": "any",
                "expand": "any"
            },
            "described": true
        },
        "gotoLine": {
            "line": 2421,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the specified line number, and also into the indicated column.\r\n     * @param {Number} lineNumber The line number to go to\r\n     * @param {Number} column A column number to go to\r\n     * @param {Boolean} animate If `true` animates scolling\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "lineNumber": "Number",
                "column": "Number",
                "animate": "Boolean"
            },
            "described": true
        },
        "navigateTo": {
            "line": 2441,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the specified row and column. Note that this does de-select the current selection.\r\n     * @param {Number} row The new row number\r\n     * @param {Number} column The new column number\r\n     *\r\n     *\r\n     * @related Editor.moveCursorTo\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "navigateUp": {
            "line": 2451,
            "jsDoc": [
                "/**\r\n     * Moves the cursor up in the document the specified number of times. Note that this does de-select the current selection.\r\n     * @param {Number} times The number of times to change navigation\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "times": "Number"
            },
            "described": true
        },
        "navigateDown": {
            "line": 2466,
            "jsDoc": [
                "/**\r\n     * Moves the cursor down in the document the specified number of times. Note that this does de-select the current selection.\r\n     * @param {Number} times The number of times to change navigation\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "times": "Number"
            },
            "described": true
        },
        "navigateLeft": {
            "line": 2481,
            "jsDoc": [
                "/**\r\n     * Moves the cursor left in the document the specified number of times. Note that this does de-select the current selection.\r\n     * @param {Number} times The number of times to change navigation\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "times": "Number"
            },
            "described": true
        },
        "navigateRight": {
            "line": 2501,
            "jsDoc": [
                "/**\r\n     * Moves the cursor right in the document the specified number of times. Note that this does de-select the current selection.\r\n     * @param {Number} times The number of times to change navigation\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "times": "Number"
            },
            "described": true
        },
        "navigateLineStart": {
            "line": 2519,
            "jsDoc": [
                "/**\r\n     *\r\n     * Moves the cursor to the start of the current line. Note that this does de-select the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "navigateLineEnd": {
            "line": 2528,
            "jsDoc": [
                "/**\r\n     *\r\n     * Moves the cursor to the end of the current line. Note that this does de-select the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "navigateFileEnd": {
            "line": 2537,
            "jsDoc": [
                "/**\r\n     *\r\n     * Moves the cursor to the end of the current file. Note that this does de-select the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "navigateFileStart": {
            "line": 2546,
            "jsDoc": [
                "/**\r\n     *\r\n     * Moves the cursor to the start of the current file. Note that this does de-select the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "navigateWordRight": {
            "line": 2555,
            "jsDoc": [
                "/**\r\n     *\r\n     * Moves the cursor to the word immediately to the right of the current position. Note that this does de-select the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "navigateWordLeft": {
            "line": 2564,
            "jsDoc": [
                "/**\r\n     *\r\n     * Moves the cursor to the word immediately to the left of the current position. Note that this does de-select the current selection.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "replace": {
            "line": 2576,
            "jsDoc": [
                "/**\r\n     * Replaces the first occurrence of `options.needle` with the value in `replacement`.\r\n     * @param {String} replacement The text to replace with\r\n     * @param {Object} options The [[Search `Search`]] options to use\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "number",
                "replacement": "String",
                "options": "Object"
            },
            "described": true
        },
        "replaceAll": {
            "line": 2602,
            "jsDoc": [
                "/**\r\n     * Replaces all occurrences of `options.needle` with the value in `replacement`.\r\n     * @param {String} replacement The text to replace with\r\n     * @param {Object} options The [[Search `Search`]] options to use\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "number",
                "replacement": "String",
                "options": "Object"
            },
            "described": true
        },
        "$tryReplace": {
            "line": 2626,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "range": "any",
                "replacement": "any"
            },
            "described": true
        },
        "getLastSearchOptions": {
            "line": 2642,
            "jsDoc": [
                "/**\r\n     * {:Search.getOptions} For more information on `options`, see [[Search `Search`]].\r\n     * @related Search.getOptions\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "find": {
            "line": 2655,
            "jsDoc": [
                "/**\r\n     * Attempts to find `needle` within the document. For more information on `options`, see [[Search `Search`]].\r\n     * @param {String} needle The text to search for (optional)\r\n     * @param {Object} options An object defining various search properties\r\n     * @param {Boolean} animate If `true` animate scrolling\r\n     *\r\n     *\r\n     * @related Search.find\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any",
                "needle": "String",
                "options": "Object",
                "animate": "Boolean"
            },
            "described": true
        },
        "findNext": {
            "line": 2702,
            "jsDoc": [
                "/**\r\n     * Performs another search for `needle` in the document. For more information on `options`, see [[Search `Search`]].\r\n     * @param {Object} options search options\r\n     * @param {Boolean} animate If `true` animate scrolling\r\n     *\r\n     *\r\n     * @related Editor.find\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "options": "Object",
                "animate": "Boolean"
            },
            "described": true
        },
        "findPrevious": {
            "line": 2714,
            "jsDoc": [
                "/**\r\n     * Performs a search for `needle` backwards. For more information on `options`, see [[Search `Search`]].\r\n     * @param {Object} options search options\r\n     * @param {Boolean} animate If `true` animate scrolling\r\n     *\r\n     *\r\n     * @related Editor.find\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "options": "Object",
                "animate": "Boolean"
            },
            "described": true
        },
        "revealRange": {
            "line": 2718,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "range": "any",
                "animate": "any"
            },
            "described": true
        },
        "undo": {
            "line": 2732,
            "jsDoc": [
                "/**\r\n     * {:UndoManager.undo}\r\n     * @related UndoManager.undo\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "redo": {
            "line": 2741,
            "jsDoc": [
                "/**\r\n     * {:UndoManager.redo}\r\n     * @related UndoManager.redo\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "destroy": {
            "line": 2750,
            "jsDoc": [
                "/**\r\n     *\r\n     * Cleans up the entire editor.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setAutoScrollEditorIntoView": {
            "line": 2772,
            "jsDoc": [
                "/**\r\n     * Enables automatic scrolling of the cursor into view when editor itself is inside scrollable element\r\n     * @param {Boolean} enable default true\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "enable": "Boolean"
            },
            "described": true
        },
        "$resetCursorStyle": {
            "line": 2827,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "prompt": {
            "line": 2840,
            "jsDoc": [
                "/**\r\n     * opens a prompt displaying message\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "void",
                "message": "any",
                "options": "any",
                "callback": "any"
            },
            "described": true
        },
        "showKeyboardShortcuts": {
            "line": 74,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/keybinding_menu.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "showSettingsMenu": {
            "line": 76,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/settings_menu.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateSelectionMarkers": {
            "line": 345,
            "jsDoc": [
                "/** \r\n     * \r\n     * Updates the cursor and marker layers.\r\n     * @method Editor.updateSelectionMarkers\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "addSelectionMarker": {
            "line": 356,
            "jsDoc": [
                "/** \r\n     * Adds the selection and cursor.\r\n     * @param {Range} orientedRange A range containing a cursor\r\n     * @returns {Range}\r\n     * @method Editor.addSelectionMarker\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "Range",
                "orientedRange": "Range"
            },
            "described": true
        },
        "removeSelectionMarker": {
            "line": 373,
            "jsDoc": [
                "/** \r\n     * Removes the selection marker.\r\n     * @param {Range} range The selection range added with [[Editor.addSelectionMarker `addSelectionMarker()`]].\r\n     * @method Editor.removeSelectionMarker\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "range": "Range"
            },
            "described": true
        },
        "removeSelectionMarkers": {
            "line": 383,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "ranges": "any"
            },
            "described": true
        },
        "$onAddRange": {
            "line": 397,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "$onRemoveRange": {
            "line": 403,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "$onMultiSelect": {
            "line": 409,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "$onSingleSelect": {
            "line": 422,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "$onMultiSelectExec": {
            "line": 436,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "forEachSelection": {
            "line": 464,
            "jsDoc": [
                "/** \r\n     * Executes a command for each selection range.\r\n     * @param {Object} cmd The command to execute\r\n     * @param {String} args Any arguments for the command\r\n     * @method Editor.forEachSelection\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any",
                "cmd": "Object",
                "args": "String",
                "options": "any"
            },
            "described": true
        },
        "exitMultiSelectMode": {
            "line": 518,
            "jsDoc": [
                "/** \r\n    * Removes all the selections except the last added one.\r\n    * @method Editor.exitMultiSelectMode\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$checkMultiselectChange": {
            "line": 542,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "e": "any",
                "anchor": "any"
            },
            "described": true
        },
        "findAll": {
            "line": 567,
            "jsDoc": [
                "/**\r\n     * Finds and selects all the occurrences of `needle`.\r\n     * @param {String} The text to find\r\n     * @param {Object} The search options\r\n     * @param {Boolean} keeps\r\n     *\r\n     * @returns {Number} The cumulative count of all found matches \r\n     * @method Editor.findAll\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "Number",
                "needle": "any",
                "options": "any",
                "additive": "any"
            },
            "described": true
        },
        "selectMoreLines": {
            "line": 605,
            "jsDoc": [
                "/**\r\n     * Adds a cursor above or below the active cursor.\r\n     * \r\n     * @param {Number} dir The direction of lines to select: -1 for up, 1 for down\r\n     * @param {Boolean} skip If `true`, removes the active selection range\r\n     *\r\n     * @method Editor.selectMoreLines \r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "dir": "Number",
                "skip": "Boolean"
            },
            "described": true
        },
        "transposeSelections": {
            "line": 648,
            "jsDoc": [
                "/** \r\n     * Transposes the selected ranges.\r\n     * @param {Number} dir The direction to rotate selections\r\n     * @method Editor.transposeSelections\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "dir": "Number"
            },
            "described": true
        },
        "selectMore": {
            "line": 692,
            "jsDoc": [
                "/** \r\n     * Finds the next occurrence of text in an active selection and adds it to the selections.\r\n     * @param {Number} dir The direction of lines to select: -1 for up, 1 for down\r\n     * @param {Boolean} skip If `true`, removes the active selection range\r\n     * @method Editor.selectMore\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "dir": "Number",
                "skip": "Boolean",
                "stopAtFirst": "any"
            },
            "described": true
        },
        "alignCursors": {
            "line": 721,
            "jsDoc": [
                "/** \r\n     * Aligns the cursors or selected text.\r\n     * @method Editor.alignCursors\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$reAlignText": {
            "line": 797,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any",
                "lines": "any",
                "forceLeft": "any"
            },
            "described": true
        },
        "insertSnippet": {
            "line": 1045,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "content": "any",
                "options": "any"
            },
            "described": true
        },
        "expandSnippet": {
            "line": 1048,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "options": "any"
            },
            "described": true
        },
        "described": true,
        "container_prop": {
            "line": 2197,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "renderer_prop": {
            "line": 2198,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "id_prop": {
            "line": 2199,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "commands_prop": {
            "line": 2200,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "keyBinding_prop": {
            "line": 2201,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "session_prop": {
            "line": 2202,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "selection_prop": {
            "line": 2203,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "on": {
            "line": 2205,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOption": {
            "line": 2214,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOption": {
            "line": 2215,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "flur": {
            "line": 2233,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeLineToEnd": {
            "line": 2276,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 2338,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 2339,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 2340,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 2342,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOptions": {
            "line": 2343,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOptions": {
            "line": 2344,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 2415,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 2417,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 2419,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 2421,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 2423,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 2425,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 2427,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 2429,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 2431,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 2433,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 2435,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 2437,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 2439,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 2441,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "EditorOptions": {
        "selectionStyle_prop": {
            "line": 2852,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "highlightActiveLine_prop": {
            "line": 2859,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "highlightSelectedWord_prop": {
            "line": 2863,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "readOnly_prop": {
            "line": 2867,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "copyWithEmptySelection_prop": {
            "line": 2874,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "cursorStyle_prop": {
            "line": 2880,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "mergeUndoDeltas_prop": {
            "line": 2885,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "behavioursEnabled_prop": {
            "line": 2889,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "wrapBehavioursEnabled_prop": {
            "line": 2890,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "enableAutoIndent_prop": {
            "line": 2891,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "autoScrollEditorIntoView_prop": {
            "line": 2892,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "keyboardHandler_prop": {
            "line": 2895,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "value_prop": {
            "line": 2900,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "session_prop": {
            "line": 2906,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "showLineNumbers_prop": {
            "line": 2913,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "relativeLineNumbers_prop": {
            "line": 2924,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "placeholder_prop": {
            "line": 2932,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/editor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableCodeLens_prop": {
            "line": 232,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/code_lens.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "useElasticTabstops_prop": {
            "line": 301,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableEmmet_prop": {
            "line": 452,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/emmet.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "hardWrap_prop": {
            "line": 134,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/hardwrap.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableBasicAutocompletion_prop": {
            "line": 183,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/language_tools.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableLiveAutocompletion_prop": {
            "line": 199,
            "jsDoc": [
                "/**\r\n     * Enable live autocomplete. If the value is an array, it is assumed to be an array of completers\r\n     * and will use them instead of the default completers.\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/ext/language_tools.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableSnippets_prop": {
            "line": 212,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/language_tools.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableLinking_prop": {
            "line": 36,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/linking.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "rtlText_prop": {
            "line": 22,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/rtl.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "rtl_prop": {
            "line": 41,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/rtl.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "spellcheck_prop": {
            "line": 54,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/spellcheck.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "useIncrementalSearch_prop": {
            "line": 302,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableMultiselect_prop": {
            "line": 948,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "enableBlockSelect_prop": {
            "line": 961,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "ElasticTabstopsLite": {
        "line": 34,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
        "processRows": {
            "line": 58,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "void",
                "rows": "any"
            },
            "described": true
        },
        "$findCellWidthsForBlock": {
            "line": 82,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "{ cellWidths: {}; firstRow: any; }",
                "row": "any"
            },
            "described": true
        },
        "$cellWidthsForRow": {
            "line": 114,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "any",
                "row": "any"
            },
            "described": true
        },
        "$selectionColumnsForRow": {
            "line": 134,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "{}",
                "row": "any"
            },
            "described": true
        },
        "$setBlockCellWidthsToMax": {
            "line": 145,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "any",
                "cellWidths": "any"
            },
            "described": true
        },
        "$rightmostSelectionInCell": {
            "line": 183,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "number",
                "selectionColumns": "any",
                "cellRightEdge": "any"
            },
            "described": true
        },
        "$tabsForRow": {
            "line": 200,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "{}",
                "row": "any"
            },
            "described": true
        },
        "$adjustRow": {
            "line": 211,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "void",
                "row": "any",
                "widths": "any"
            },
            "described": true
        },
        "$izip_longest": {
            "line": 252,
            "jsDoc": [
                "/** the is a (naive) Python port--but works for these purposes**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "{}",
                "iterables": "any"
            },
            "described": true
        },
        "$izip": {
            "line": 283,
            "jsDoc": [
                "/** an even more (naive) Python port**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/ext/elastic_tabstops_lite.js",
            "params": {
                "return": "{}",
                "widths": "any",
                "tabs": "any"
            },
            "described": true
        },
        "described": true
    },
    "AceEmmetEditor": {
        "line": 43,
        "jsDoc": [
            "/**\r\n * Implementation of {@link IEmmetEditor} interface for Ace\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/ext/emmet.js"
    },
    "Mode": {
        "line": 50,
        "jsDoc": [
            "/** Make life easier, don't do these right now \r\nvar SweaveBackgroundHighlighter = require(\"mode/sweave_background_highlighter\").SweaveBackgroundHighlighter;\r\nvar RCodeModel = require(\"mode/r_code_model\").RCodeModel;\r\n**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/rhtml.js",
        "supportsFile": {
            "line": 40,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/modelist.js",
            "params": {
                "return": "any",
                "filename": "any"
            },
            "described": true
        },
        "getNextLineIndent": {
            "line": 53,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml.js",
            "params": {
                "return": "any",
                "state": "any",
                "line": "any",
                "tab": "any"
            },
            "described": true
        },
        "checkOutdent": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml.js",
            "params": {
                "return": "any",
                "state": "any",
                "line": "any",
                "input": "any"
            },
            "described": true
        },
        "autoOutdent": {
            "line": 70,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml.js",
            "params": {
                "return": "void",
                "state": "any",
                "doc": "any",
                "row": "any"
            },
            "described": true
        },
        "$toIndent": {
            "line": 56,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/scheme.js",
            "params": {
                "return": "any",
                "str": "any"
            },
            "described": true
        },
        "$calculateIndent": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/scheme.js",
            "params": {
                "return": "any",
                "line": "any",
                "tab": "any"
            },
            "described": true
        },
        "createWorker": {
            "line": 74,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml.js",
            "params": {
                "return": "any",
                "session": "any"
            },
            "described": true
        },
        "getCompletions": {
            "line": 375,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/text.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "toggleCommentLines": {
            "line": 94,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery.js",
            "params": {
                "return": "void",
                "state": "any",
                "doc": "any",
                "startRow": "any",
                "endRow": "any"
            },
            "described": true
        },
        "removeMarkers": {
            "line": 149,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "addMarkers": {
            "line": 163,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery.js",
            "params": {
                "return": "void",
                "annos": "any",
                "mySession": "any"
            },
            "described": true
        },
        "getMatching": {
            "line": 146,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/vbscript.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any",
                "tokenRange": "any"
            },
            "described": true
        },
        "getLanguageMode": {
            "line": 73,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/rhtml.js",
            "params": {
                "return": "\"R\" | \"HTML\"",
                "position": "any"
            },
            "described": true
        },
        "allowAutoInsert": {
            "line": 63,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/tex.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "$delegator": {
            "line": 298,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/text.js",
            "params": {
                "return": "any",
                "method": "any",
                "args": "any",
                "defaultHandler": "any"
            },
            "described": true
        },
        "transformAction": {
            "line": 324,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/text.js",
            "params": {
                "return": "any",
                "state": "any",
                "action": "any",
                "editor": "any",
                "session": "any",
                "param": "any"
            },
            "described": true
        },
        "getKeywords": {
            "line": 338,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/text.js",
            "params": {
                "return": "any",
                "append": "any"
            },
            "described": true
        },
        "$createKeywordList": {
            "line": 369,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/text.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true,
        "$id_prop": {
            "line": 1531,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "tokenRe_prop": {
            "line": 1532,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "nonTokenRe_prop": {
            "line": 1533,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "$defaultBehaviour_prop": {
            "line": 1534,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "lineCommentStart_prop": {
            "line": 1535,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "blockComment_prop": {
            "line": 1536,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "$getIndent": {
            "line": 1537,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getTokenizer": {
            "line": 1540,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "toggleBlockComment": {
            "line": 1545,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "createModeDelegates": {
            "line": 1554,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "OptionPanel": {
        "line": 197,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/ext/options.js",
        "add": {
            "line": 208,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "render": {
            "line": 215,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "renderOptionGroup": {
            "line": 228,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "any",
                "group": "any"
            },
            "described": true
        },
        "renderOptionControl": {
            "line": 243,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "any",
                "key": "any",
                "option": "any"
            },
            "described": true
        },
        "renderOption": {
            "line": 329,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "{}",
                "key": "any",
                "option": "any"
            },
            "described": true
        },
        "setOption": {
            "line": 342,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "void",
                "option": "any",
                "value": "any"
            },
            "described": true
        },
        "getOption": {
            "line": 358,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/options.js",
            "params": {
                "return": "any",
                "option": "any"
            },
            "described": true
        },
        "described": true
    },
    "SearchBox": {
        "line": 45,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
        "setEditor": {
            "line": 80,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "setSession": {
            "line": 86,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "$initElements": {
            "line": 91,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "sb": "any"
            },
            "described": true
        },
        "$init": {
            "line": 104,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setSearchRange": {
            "line": 243,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "range": "any"
            },
            "described": true
        },
        "$syncOptions": {
            "line": 253,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "preventScroll": "any"
            },
            "described": true
        },
        "highlight": {
            "line": 266,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "re": "any"
            },
            "described": true
        },
        "find": {
            "line": 270,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "skipCurrent": "any",
                "backwards": "any",
                "preventScroll": "any"
            },
            "described": true
        },
        "updateCounter": {
            "line": 287,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "findNext": {
            "line": 319,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "findPrev": {
            "line": 322,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "findAll": {
            "line": 325,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "replace": {
            "line": 337,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "replaceAndFindNext": {
            "line": 341,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "replaceAll": {
            "line": 347,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "hide": {
            "line": 352,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "show": {
            "line": 361,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "void",
                "value": "any",
                "isReplace": "any"
            },
            "described": true
        },
        "isFocused": {
            "line": 378,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/searchbox.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "described": true
    },
    "SimpleTextLayer": {
        "line": 91,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/ext/static_highlight.js"
    },
    "StatusBar": {
        "line": 7,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/ext/statusbar.js",
        "updateStatus": {
            "line": 23,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/ext/statusbar.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "described": true
    },
    "ISearchKbd": {
        "line": 39,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/incremental_search.js"
    },
    "IncrementalSearch": {
        "line": 60,
        "jsDoc": [
            "/**\r\n * @class IncrementalSearch\r\n *\r\n * Implements immediate searching while the user is typing. When incremental\r\n * search is activated, keystrokes into the editor will be used for composing\r\n * a search term. Immediately after every keystroke the search is updated:\r\n * - so-far-matching characters are highlighted\r\n * - the cursor is moved to the next match\r\n *\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
        "construct": {
            "line": 60,
            "jsDoc": [
                "/**\r\n *\r\n *\r\n * Creates a new `IncrementalSearch` object.\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {},
            "described": true
        },
        "activate": {
            "line": 97,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "editor": "any",
                "backwards": "any"
            },
            "described": true
        },
        "deactivate": {
            "line": 111,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "reset": "any"
            },
            "described": true
        },
        "selectionFix": {
            "line": 123,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "highlight": {
            "line": 134,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "regexp": "any"
            },
            "described": true
        },
        "cancelSearch": {
            "line": 142,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any",
                "reset": "any"
            },
            "described": true
        },
        "highlightAndFindWithNeedle": {
            "line": 156,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any",
                "moveToNext": "any",
                "needleUpdateFunc": "any"
            },
            "described": true
        },
        "addString": {
            "line": 188,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any",
                "s": "any"
            },
            "described": true
        },
        "removeChar": {
            "line": 198,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any",
                "c": "any"
            },
            "described": true
        },
        "next": {
            "line": 208,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any",
                "options": "any"
            },
            "described": true
        },
        "onMouseDown": {
            "line": 221,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "boolean",
                "evt": "any"
            },
            "described": true
        },
        "onPaste": {
            "line": 227,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "text": "any"
            },
            "described": true
        },
        "convertNeedleToRegExp": {
            "line": 231,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "convertNeedleToString": {
            "line": 237,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "statusMessage": {
            "line": 243,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "found": "any"
            },
            "described": true
        },
        "message": {
            "line": 251,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/incremental_search.js",
            "params": {
                "return": "void",
                "msg": "any"
            },
            "described": true
        },
        "described": true
    },
    "HashHandler": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
        "addCommand": {
            "line": 56,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "command": "any"
            },
            "described": true
        },
        "removeCommand": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "command": "any",
                "keepCommand": "any"
            },
            "described": true
        },
        "bindKey": {
            "line": 90,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "any",
                "key": "any",
                "command": "any",
                "position": "any"
            },
            "described": true
        },
        "_addCommandToBinding": {
            "line": 125,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "keyId": "any",
                "command": "any",
                "position": "any"
            },
            "described": true
        },
        "addCommands": {
            "line": 153,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "commands": "any"
            },
            "described": true
        },
        "removeCommands": {
            "line": 175,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "commands": "any"
            },
            "described": true
        },
        "bindKeys": {
            "line": 181,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "keyList": "any"
            },
            "described": true
        },
        "_buildKeyHash": {
            "line": 187,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "void",
                "command": "any"
            },
            "described": true
        },
        "parseKeys": {
            "line": 193,
            "jsDoc": [
                "/** accepts keys in the form ctrl+Enter or ctrl-Enter**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "false | { key: any; hashId: number; }",
                "keys": "any"
            },
            "described": true
        },
        "findKeyCommand": {
            "line": 218,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "any",
                "hashId": "any",
                "keyString": "any"
            },
            "described": true
        },
        "handleKeyboard": {
            "line": 223,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "{ command: any; }",
                "data": "any",
                "hashId": "any",
                "keyString": "any",
                "keyCode": "any"
            },
            "described": true
        },
        "getStatusText": {
            "line": 248,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js",
            "params": {
                "return": "any",
                "editor": "any",
                "data": "any"
            },
            "described": true
        },
        "described": true
    },
    "MultiHashHandler": {
        "line": 46,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/keyboard/hash_handler.js"
    },
    "KeyBinding": {
        "line": 37,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
        "setDefaultHandler": {
            "line": 45,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "void",
                "kb": "any"
            },
            "described": true
        },
        "setKeyboardHandler": {
            "line": 51,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "void",
                "kb": "any"
            },
            "described": true
        },
        "addKeyboardHandler": {
            "line": 62,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "void",
                "kb": "any",
                "pos": "any"
            },
            "described": true
        },
        "removeKeyboardHandler": {
            "line": 80,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "boolean",
                "kb": "any"
            },
            "described": true
        },
        "getKeyboardHandler": {
            "line": 89,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getStatusText": {
            "line": 93,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$callKeyboardHandlers": {
            "line": 101,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "boolean",
                "hashId": "any",
                "keyString": "any",
                "keyCode": "any",
                "e": "any"
            },
            "described": true
        },
        "onCommandKey": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "any",
                "e": "any",
                "hashId": "any",
                "keyCode": "any"
            },
            "described": true
        },
        "onTextInput": {
            "line": 145,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/keyboard/keybinding.js",
            "params": {
                "return": "any",
                "text": "any"
            },
            "described": true
        },
        "described": true
    },
    "TextInput": {
        "line": 50,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/keyboard/textinput.js"
    },
    "Cursor": {
        "line": 36,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
        "$updateOpacity": {
            "line": 54,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "val": "any"
            },
            "described": true
        },
        "$startCssAnimation": {
            "line": 60,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$stopCssAnimation": {
            "line": 73,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setPadding": {
            "line": 79,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "padding": "any"
            },
            "described": true
        },
        "setSession": {
            "line": 83,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "setBlinking": {
            "line": 87,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "blinking": "any"
            },
            "described": true
        },
        "setBlinkInterval": {
            "line": 94,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "blinkInterval": "any"
            },
            "described": true
        },
        "setSmoothBlinking": {
            "line": 101,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "smoothBlinking": "any"
            },
            "described": true
        },
        "addCursor": {
            "line": 110,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "removeCursor": {
            "line": 118,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "hideCursor": {
            "line": 126,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "showCursor": {
            "line": 132,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "restartTimer": {
            "line": 138,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getPixelPosition": {
            "line": 182,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "{ left: any; top: number; }",
                "position": "any",
                "onScreen": "any"
            },
            "described": true
        },
        "isCursorInView": {
            "line": 199,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "boolean",
                "pixelPos": "any",
                "config": "any"
            },
            "described": true
        },
        "update": {
            "line": 203,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "$setOverwrite": {
            "line": 249,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void",
                "overwrite": "any"
            },
            "described": true
        },
        "destroy": {
            "line": 259,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/cursor.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "FontMetrics": {
        "line": 44,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
        "$setMeasureNodeStyles": {
            "line": 76,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "void",
                "style": "any",
                "isRoot": "any"
            },
            "described": true
        },
        "checkForSizeChanges": {
            "line": 91,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "void",
                "size": "any"
            },
            "described": true
        },
        "$addObserver": {
            "line": 105,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$pollSizeChanges": {
            "line": 114,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setPolling": {
            "line": 125,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "void",
                "val": "any"
            },
            "described": true
        },
        "$measureSizes": {
            "line": 134,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "{ height: any; width: number; }",
                "node": "any"
            },
            "described": true
        },
        "$measureCharWidth": {
            "line": 147,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "number",
                "ch": "any"
            },
            "described": true
        },
        "getCharacterWidth": {
            "line": 153,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "any",
                "ch": "any"
            },
            "described": true
        },
        "destroy": {
            "line": 161,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$getZoom": {
            "line": 170,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "any",
                "element": "any"
            },
            "described": true
        },
        "$initTransformMeasureNodes": {
            "line": 174,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "transformCoordinates": {
            "line": 188,
            "jsDoc": [
                "/** general transforms from element coordinates x to screen coordinates u have the form**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/layer/font_metrics.js",
            "params": {
                "return": "{}",
                "clientPos": "any",
                "elPos": "any"
            },
            "described": true
        },
        "described": true
    },
    "Gutter": {
        "line": 40,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
        "setSession": {
            "line": 59,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "addGutterDecoration": {
            "line": 67,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "row": "any",
                "className": "any"
            },
            "described": true
        },
        "removeGutterDecoration": {
            "line": 73,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "row": "any",
                "className": "any"
            },
            "described": true
        },
        "setAnnotations": {
            "line": 79,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "annotations": "any"
            },
            "described": true
        },
        "$updateAnnotations": {
            "line": 108,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "update": {
            "line": 124,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "$updateGutterWidth": {
            "line": 174,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "$updateCursorRow": {
            "line": 199,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateLineHighlight": {
            "line": 210,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollLines": {
            "line": 239,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "any",
                "config": "any"
            },
            "described": true
        },
        "$renderLines": {
            "line": 282,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "{}",
                "config": "any",
                "firstRow": "any",
                "lastRow": "any"
            },
            "described": true
        },
        "$renderCell": {
            "line": 306,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "any",
                "cell": "any",
                "config": "any",
                "fold": "any",
                "row": "any"
            },
            "described": true
        },
        "setHighlightGutterLine": {
            "line": 387,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "highlightGutterLine": "any"
            },
            "described": true
        },
        "setShowLineNumbers": {
            "line": 393,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "show": "any"
            },
            "described": true
        },
        "getShowLineNumbers": {
            "line": 400,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setShowFoldWidgets": {
            "line": 405,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "void",
                "show": "any"
            },
            "described": true
        },
        "getShowFoldWidgets": {
            "line": 415,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$computePadding": {
            "line": 419,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getRegion": {
            "line": 431,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/gutter.js",
            "params": {
                "return": "\"markers\" | \"foldWidgets\"",
                "point": "any"
            },
            "described": true
        },
        "described": true
    },
    "Lines": {
        "line": 36,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
        "moveContainer": {
            "line": 48,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "pageChanged": {
            "line": 52,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "boolean",
                "oldConfig": "any",
                "newConfig": "any"
            },
            "described": true
        },
        "computeLineTop": {
            "line": 59,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "number",
                "row": "any",
                "config": "any",
                "session": "any"
            },
            "described": true
        },
        "computeLineHeight": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "number",
                "row": "any",
                "config": "any",
                "session": "any"
            },
            "described": true
        },
        "getLength": {
            "line": 70,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "get": {
            "line": 74,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "any",
                "index": "any"
            },
            "described": true
        },
        "shift": {
            "line": 78,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "pop": {
            "line": 82,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "push": {
            "line": 86,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "void",
                "cell": "any"
            },
            "described": true
        },
        "unshift": {
            "line": 100,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "void",
                "cell": "any"
            },
            "described": true
        },
        "last": {
            "line": 117,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$cacheCell": {
            "line": 124,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "void",
                "cell": "any"
            },
            "described": true
        },
        "createCell": {
            "line": 132,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/lines.js",
            "params": {
                "return": "any",
                "row": "any",
                "config": "any",
                "session": "any",
                "initElement": "any"
            },
            "described": true
        },
        "described": true
    },
    "Marker": {
        "line": 1474,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
        "setPadding": {
            "line": 47,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "padding": "any"
            },
            "described": true
        },
        "setSession": {
            "line": 50,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "setMarkers": {
            "line": 54,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "markers": "any"
            },
            "described": true
        },
        "elt": {
            "line": 58,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "className": "any",
                "css": "any"
            },
            "described": true
        },
        "update": {
            "line": 71,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "$getTop": {
            "line": 113,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "number",
                "row": "any",
                "layerConfig": "any"
            },
            "described": true
        },
        "drawTextMarker": {
            "line": 121,
            "jsDoc": [
                "/** Draws a marker, which spans a range of text on multiple lines **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "stringBuilder": "any",
                "range": "any",
                "clazz": "any",
                "layerConfig": "any",
                "extraStyle": "any"
            },
            "described": true
        },
        "drawMultiLineMarker": {
            "line": 145,
            "jsDoc": [
                "/** Draws a multi line marker, where lines span the full width**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "stringBuilder": "any",
                "range": "any",
                "clazz": "any",
                "config": "any",
                "extraStyle": "any"
            },
            "described": true
        },
        "drawSingleLineMarker": {
            "line": 200,
            "jsDoc": [
                "/** Draws a marker which covers part or whole width of a single screen line**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "any",
                "stringBuilder": "any",
                "range": "any",
                "clazz": "any",
                "config": "any",
                "extraLength": "any",
                "extraStyle": "any"
            },
            "described": true
        },
        "drawBidiSingleLineMarker": {
            "line": 219,
            "jsDoc": [
                "/** Draws Bidi marker which covers part or whole width of a single screen line**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "stringBuilder": "any",
                "range": "any",
                "clazz": "any",
                "config": "any",
                "extraLength": "any",
                "extraStyle": "any"
            },
            "described": true
        },
        "drawFullLineMarker": {
            "line": 234,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "stringBuilder": "any",
                "range": "any",
                "clazz": "any",
                "config": "any",
                "extraStyle": "any"
            },
            "described": true
        },
        "drawScreenLineMarker": {
            "line": 248,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/marker.js",
            "params": {
                "return": "void",
                "stringBuilder": "any",
                "range": "any",
                "clazz": "any",
                "config": "any",
                "extraStyle": "any"
            },
            "described": true
        },
        "complete": {
            "line": 1492,
            "jsDoc": [
                "/** Complete the location data stored in the `Marker` by adding the location**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "bless": {
            "line": 1502,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void",
                "node": "any"
            },
            "described": true
        },
        "described": true
    },
    "Text": {
        "line": 838,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
        "$updateEolChar": {
            "line": 62,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "setPadding": {
            "line": 72,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "padding": "any"
            },
            "described": true
        },
        "getLineHeight": {
            "line": 77,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getCharacterWidth": {
            "line": 81,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$setFontMetrics": {
            "line": 85,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "measure": "any"
            },
            "described": true
        },
        "checkForSizeChanges": {
            "line": 93,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$pollSizeChanges": {
            "line": 96,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setSession": {
            "line": 99,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "setShowInvisibles": {
            "line": 109,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "boolean",
                "showInvisibles": "any"
            },
            "described": true
        },
        "setDisplayIndentGuides": {
            "line": 126,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "boolean",
                "display": "any"
            },
            "described": true
        },
        "$computeTabString": {
            "line": 136,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeTabSize": {
            "line": 136,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateLines": {
            "line": 176,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any",
                "config": "any",
                "firstRow": "any",
                "lastRow": "any"
            },
            "described": true
        },
        "scrollLines": {
            "line": 245,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any",
                "config": "any"
            },
            "described": true
        },
        "$renderLinesFragment": {
            "line": 286,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "{}",
                "config": "any",
                "firstRow": "any",
                "lastRow": "any"
            },
            "described": true
        },
        "update": {
            "line": 324,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "config": "any"
            },
            "described": true
        },
        "$renderToken": {
            "line": 345,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any",
                "parent": "any",
                "screenColumn": "any",
                "token": "any",
                "value": "any"
            },
            "described": true
        },
        "renderIndentGuide": {
            "line": 428,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any",
                "parent": "any",
                "value": "any",
                "max": "any"
            },
            "described": true
        },
        "$createLineElement": {
            "line": 448,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any",
                "parent": "any"
            },
            "described": true
        },
        "$renderWrappedLine": {
            "line": 456,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "parent": "any",
                "tokens": "any",
                "splits": "any"
            },
            "described": true
        },
        "$renderSimpleLine": {
            "line": 510,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any",
                "parent": "any",
                "tokens": "any"
            },
            "described": true
        },
        "$renderOverflowMessage": {
            "line": 527,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "parent": "any",
                "screenColumn": "any",
                "token": "any",
                "value": "any",
                "hide": "any"
            },
            "described": true
        },
        "$renderLine": {
            "line": 539,
            "jsDoc": [
                "/** row is either first row of foldline or not in fold**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void",
                "parent": "any",
                "row": "any",
                "foldLine": "any"
            },
            "described": true
        },
        "$getFoldLineTokens": {
            "line": 579,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "{}",
                "row": "any",
                "foldLine": "any"
            },
            "described": true
        },
        "$useLineGroups": {
            "line": 640,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "destroy": {
            "line": 649,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/layer/text.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "AppConfig": {
        "line": 98,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/lib/app_config.js",
        "defineOptions": {
            "line": 108,
            "jsDoc": [
                "/**\r\n     * option {name, value, initialValue, setterName, set, get }\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/lib/app_config.js",
            "params": {
                "return": "any",
                "obj": "any",
                "path": "any",
                "options": "any"
            },
            "described": true
        },
        "resetOptions": {
            "line": 129,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/app_config.js",
            "params": {
                "return": "void",
                "obj": "any"
            },
            "described": true
        },
        "setDefaultValue": {
            "line": 137,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/app_config.js",
            "params": {
                "return": "boolean",
                "path": "any",
                "name": "any",
                "value": "any"
            },
            "described": true
        },
        "setDefaultValues": {
            "line": 154,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/app_config.js",
            "params": {
                "return": "void",
                "path": "any",
                "optionHash": "any"
            },
            "described": true
        },
        "described": true
    },
    "ArabicAlefBetIntervalsBegine": {
        "line": 34,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/lib/bidiutil.js"
    },
    "ArabicAlefBetIntervalsEnd": {
        "line": 35,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/lib/bidiutil.js"
    },
    "UnicodeTBL00": {
        "line": 79,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/lib/bidiutil.js"
    },
    "UnicodeTBL20": {
        "line": 94,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/lib/bidiutil.js"
    },
    "Object": {
        "assign": {
            "line": 50,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/es6-shim.js",
            "params": {
                "return": "any",
                "target": "any"
            },
            "described": true
        },
        "values": {
            "line": 68,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/es6-shim.js",
            "params": {
                "return": "any",
                "o": "any"
            },
            "described": true
        },
        "described": true
    },
    "EventListener": {
        "line": 58,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/lib/event.js",
        "destroy": {
            "line": 63,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/event.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "EventEmitter": {
        "line": 18011,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
        "_emit": {
            "line": 38,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/event_emitter.js",
            "params": {
                "return": "any",
                "eventName": "any",
                "e": "any"
            },
            "described": true
        },
        "_signal": {
            "line": 70,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/event_emitter.js",
            "params": {
                "return": "void",
                "eventName": "any",
                "e": "any"
            },
            "described": true
        },
        "once": {
            "line": 18297,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any",
                "listener": "any"
            },
            "described": true
        },
        "setDefaultHandler": {
            "line": 94,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/event_emitter.js",
            "params": {
                "return": "void",
                "eventName": "any",
                "callback": "any"
            },
            "described": true
        },
        "removeDefaultHandler": {
            "line": 111,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/event_emitter.js",
            "params": {
                "return": "void",
                "eventName": "any",
                "callback": "any"
            },
            "described": true
        },
        "on": {
            "line": 127,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/lib/event_emitter.js",
            "params": {
                "return": "any",
                "eventName": "any",
                "callback": "any",
                "capturing": "any"
            },
            "described": true
        },
        "removeAllListeners": {
            "line": 18365,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any"
            },
            "described": true
        },
        "setMaxListeners": {
            "line": 18057,
            "jsDoc": [
                "/** Obviously not all Emitters should be limited to 10. This function allows**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "n": "any"
            },
            "described": true
        },
        "emit": {
            "line": 18131,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "boolean",
                "type": "any"
            },
            "described": true
        },
        "addListener": {
            "line": 18255,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any",
                "listener": "any"
            },
            "described": true
        },
        "removeListener": {
            "line": 18313,
            "jsDoc": [
                "/** Emits a 'removeListener' event if and only if the listener was removed.**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any",
                "listener": "any"
            },
            "described": true
        },
        "listeners": {
            "line": 18432,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any"
            },
            "described": true
        },
        "listenerCount": {
            "line": 18440,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "emitter": "any",
                "type": "any"
            },
            "described": true
        },
        "getMaxListeners": {
            "line": 18070,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "prependListener": {
            "line": 18261,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any",
                "listener": "any"
            },
            "described": true
        },
        "prependOnceListener": {
            "line": 18304,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any",
                "listener": "any"
            },
            "described": true
        },
        "rawListeners": {
            "line": 18436,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any",
                "type": "any"
            },
            "described": true
        },
        "eventNames": {
            "line": 18465,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true,
        "off": {
            "line": 1428,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Keys": {
        "line": 42,
        "jsDoc": [
            "/**\r\n * Helper functions and hashes for key handling.\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/lib/keys.js"
    },
    "LineWidgets": {
        "line": 36,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
        "getRowLength": {
            "line": 53,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "any",
                "row": "any"
            },
            "described": true
        },
        "$getWidgetScreenLength": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "$onChangeEditor": {
            "line": 75,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "attach": {
            "line": 79,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "detach": {
            "line": 95,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "updateOnFold": {
            "line": 114,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "e": "any",
                "session": "any"
            },
            "described": true
        },
        "updateOnChange": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "$updateRows": {
            "line": 170,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$registerLineWidget": {
            "line": 188,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "any",
                "w": "any"
            },
            "described": true
        },
        "addLineWidget": {
            "line": 205,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "any",
                "w": "any"
            },
            "described": true
        },
        "removeLineWidget": {
            "line": 252,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "w": "any"
            },
            "described": true
        },
        "getWidgetsAtRow": {
            "line": 280,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "{}",
                "row": "any"
            },
            "described": true
        },
        "onWidgetChanged": {
            "line": 291,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "w": "any"
            },
            "described": true
        },
        "measureWidgets": {
            "line": 296,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "e": "any",
                "renderer": "any"
            },
            "described": true
        },
        "renderWidgets": {
            "line": 339,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/line_widgets.js",
            "params": {
                "return": "void",
                "e": "any",
                "renderer": "any"
            },
            "described": true
        },
        "described": true
    },
    "ApexMode": {
        "line": 12,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/apex.js"
    },
    "CssBehaviour": {
        "line": 39,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour/css.js"
    },
    "CstyleBehaviour": {
        "line": 81,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
        "isSaneInsertion": {
            "line": 330,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "any",
                "editor": "any",
                "session": "any"
            },
            "described": true
        },
        "$matchTokenType": {
            "line": 350,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "boolean",
                "token": "any",
                "types": "any"
            },
            "described": true
        },
        "recordAutoInsert": {
            "line": 354,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "void",
                "editor": "any",
                "session": "any",
                "bracket": "any"
            },
            "described": true
        },
        "recordMaybeInsert": {
            "line": 365,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "void",
                "editor": "any",
                "session": "any",
                "bracket": "any"
            },
            "described": true
        },
        "isAutoInsertedClosing": {
            "line": 376,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "boolean",
                "cursor": "any",
                "line": "any",
                "bracket": "any"
            },
            "described": true
        },
        "isMaybeInsertedClosing": {
            "line": 383,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "boolean",
                "cursor": "any",
                "line": "any"
            },
            "described": true
        },
        "popAutoInsertedClosing": {
            "line": 390,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "clearMaybeInsertedClosing": {
            "line": 395,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour/cstyle.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "HtmlBehaviour": {
        "line": 37,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour/html.js"
    },
    "LiquidBehaviour": {
        "line": 44,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour/liquid.js"
    },
    "XmlBehaviour": {
        "line": 43,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour/xml.js"
    },
    "XQueryBehaviour": {
        "line": 52,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour/xquery.js"
    },
    "Behaviour": {
        "line": 34,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/behaviour.js",
        "add": {
            "line": 40,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour.js",
            "params": {
                "return": "void",
                "name": "any",
                "action": "any",
                "callback": "any"
            },
            "described": true
        },
        "addBehaviours": {
            "line": 50,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour.js",
            "params": {
                "return": "void",
                "behaviours": "any"
            },
            "described": true
        },
        "remove": {
            "line": 58,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour.js",
            "params": {
                "return": "void",
                "name": "any"
            },
            "described": true
        },
        "inherit": {
            "line": 64,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour.js",
            "params": {
                "return": "void",
                "mode": "any",
                "filter": "any"
            },
            "described": true
        },
        "getBehaviours": {
            "line": 73,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/behaviour.js",
            "params": {
                "return": "any",
                "filter": "any"
            },
            "described": true
        },
        "described": true
    },
    "Worker": {
        "line": 39,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml_worker.js",
        "onUpdate": {
            "line": 53,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml_worker.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setInfoRules": {
            "line": 53,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css_worker.js",
            "params": {
                "return": "void",
                "ruleNames": "any"
            },
            "described": true
        },
        "setDisabledRules": {
            "line": 60,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css_worker.js",
            "params": {
                "return": "void",
                "ruleNames": "any"
            },
            "described": true
        },
        "setOptions": {
            "line": 49,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml_worker.js",
            "params": {
                "return": "void",
                "options": "any"
            },
            "described": true
        },
        "described": true
    },
    "Colors": {
        "line": 60,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "described": true
    },
    "Combinator": {
        "line": 263,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 263,
            "jsDoc": [
                "/**\r\n * Represents a selector combinator (whitespace, +, >).\r\n * @namespace parserlib.css\r\n * @class Combinator\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {String} text The text representation of the unit.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "text": "String",
                "line": "Number",
                "col": "Number"
            },
            "described": true
        },
        "described": true
    },
    "Matcher": {
        "line": 304,
        "jsDoc": [
            "/**\r\n * This class implements a combinator library for matcher functions.\r\n * The combinators are described at:\r\n * https://developer.mozilla.org/en-US/docs/Web/CSS/Value_definition_syntax#Component_value_combinators\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "match": {
            "line": 305,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "expression": "any"
            },
            "described": true
        },
        "parse": {
            "line": 333,
            "jsDoc": [
                "/** Simple recursive-descent grammar to build matchers from strings. */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "str": "any"
            },
            "described": true
        },
        "cast": {
            "line": 417,
            "jsDoc": [
                "/**\r\n * Convert a string to a matcher (parsing simple alternations),\r\n * or do nothing if the argument is already a matcher.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "m": "any"
            },
            "described": true
        },
        "fromType": {
            "line": 427,
            "jsDoc": [
                "/**\r\n * Create a matcher for a single type.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "type": "any"
            },
            "described": true
        },
        "seq": {
            "line": 439,
            "jsDoc": [
                "/**\r\n * Create a matcher for one or more juxtaposed words, which all must\r\n * occur, in the given order.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "alt": {
            "line": 466,
            "jsDoc": [
                "/**\r\n * Create a matcher for one or more alternatives, where exactly one\r\n * must occur.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "many": {
            "line": 496,
            "jsDoc": [
                "/**\r\n * Create a matcher for two or more options.  This implements the\r\n * double bar (||) and double ampersand (&&) operators, as well as\r\n * variants of && where some of the alternatives are optional.\r\n * This will backtrack through even successful matches to try to\r\n * maximize the number of items matched.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "required": "any"
            },
            "described": true
        },
        "andand": {
            "line": 587,
            "jsDoc": [
                "/**\r\n * Create a matcher for two or more options, where all options are\r\n * mandatory but they may appear in any order.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "oror": {
            "line": 598,
            "jsDoc": [
                "/**\r\n * Create a matcher for two or more options, where options are\r\n * optional and may appear in any order, but at least one must be\r\n * present.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "MediaFeature": {
        "line": 686,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 686,
            "jsDoc": [
                "/**\r\n * Represents a media feature, such as max-width:500.\r\n * @namespace parserlib.css\r\n * @class MediaFeature\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {SyntaxUnit} name The name of the feature.\r\n * @param {SyntaxUnit} value The value of the feature or null if none.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "name": "SyntaxUnit",
                "value": "SyntaxUnit"
            }
        },
        "described": true
    },
    "MediaQuery": {
        "line": 730,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 730,
            "jsDoc": [
                "/**\r\n * Represents an individual media query.\r\n * @namespace parserlib.css\r\n * @class MediaQuery\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {String} modifier The modifier \"not\" or \"only\" (or null).\r\n * @param {String} mediaType The type of media (i.e., \"print\").\r\n * @param {any[]} parts Array of selectors parts making up this selector.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "modifier": "String",
                "mediaType": "String",
                "parts": "any[]",
                "line": "Number",
                "col": "Number"
            }
        },
        "described": true
    },
    "Parser": {
        "line": 795,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 795,
            "jsDoc": [
                "/**\r\n * A CSS3 parser.\r\n * @namespace parserlib.css\r\n * @class Parser\r\n * @constructor\r\n * @param {Object} options (Optional) Various options for the parser:\r\n *      starHack (true|false) to allow IE6 star hack as valid,\r\n *      underscoreHack (true|false) to interpret leading underscores\r\n *      as IE6-7 targeting for known properties, ieFilters (true|false)\r\n *      to indicate that IE < 8 filters should be accepted and not throw\r\n *      syntax errors.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "options": "Object"
            },
            "described": true
        },
        "described": true
    },
    "Properties": {
        "line": 3336,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js"
    },
    "PropertyName": {
        "line": 3852,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 3852,
            "jsDoc": [
                "/**\r\n * Represents a selector combinator (whitespace, +, >).\r\n * @namespace parserlib.css\r\n * @class PropertyName\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {String} text The text representation of the unit.\r\n * @param {String} hack The type of IE hack applied (\"*\", \"_\", or null).\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "text": "String",
                "hack": "String",
                "line": "Number",
                "col": "Number"
            },
            "described": true
        },
        "toString": {
            "line": 3867,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "PropertyValue": {
        "line": 3892,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 3892,
            "jsDoc": [
                "/**\r\n * Represents a single part of a CSS property value, meaning that it represents\r\n * just everything single part between \":\" and \";\". If there are multiple values\r\n * separated by commas, this type represents just one of the values.\r\n * @param {String[]} parts An array of value parts making up this value.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n * @namespace parserlib.css\r\n * @class PropertyValue\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "parts": "String[]",
                "line": "Number",
                "col": "Number"
            },
            "described": true
        },
        "described": true
    },
    "PropertyValueIterator": {
        "line": 3922,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 3922,
            "jsDoc": [
                "/**\r\n * A utility class that allows for easy iteration over the various parts of a\r\n * property value.\r\n * @param {parserlib.css.PropertyValue} value The property value to iterate over.\r\n * @namespace parserlib.css\r\n * @class PropertyValueIterator\r\n * @constructor\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "value": "parserlib.css.PropertyValue"
            }
        },
        "count": {
            "line": 3962,
            "jsDoc": [
                "/**\r\n * Returns the total number of parts in the value.\r\n * @return {Number} The total number of parts in the value.\r\n * @method count\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "Number"
            }
        },
        "isFirst": {
            "line": 3971,
            "jsDoc": [
                "/**\r\n * Indicates if the iterator is positioned at the first item.\r\n * @return {Boolean} True if positioned at first item, false if not.\r\n * @method isFirst\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "boolean"
            }
        },
        "hasNext": {
            "line": 3980,
            "jsDoc": [
                "/**\r\n * Indicates if there are more parts of the property value.\r\n * @return {Boolean} True if there are more parts, false if not.\r\n * @method hasNext\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "boolean"
            }
        },
        "mark": {
            "line": 3990,
            "jsDoc": [
                "/**\r\n * Marks the current spot in the iteration so it can be restored to\r\n * later on.\r\n * @return {void}\r\n * @method mark\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "void"
            }
        },
        "peek": {
            "line": 4001,
            "jsDoc": [
                "/**\r\n * Returns the next part of the property value or null if there is no next\r\n * part. Does not move the internal counter forward.\r\n * @return {parserlib.css.PropertyValuePart} The next part of the property value or null if there is no next\r\n * part.\r\n * @method peek\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "parserlib.css.PropertyValuePart",
                "count": "any"
            }
        },
        "next": {
            "line": 4012,
            "jsDoc": [
                "/**\r\n * Returns the next part of the property value or null if there is no next\r\n * part.\r\n * @return {parserlib.css.PropertyValuePart} The next part of the property value or null if there is no next\r\n * part.\r\n * @method next\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "parserlib.css.PropertyValuePart"
            }
        },
        "previous": {
            "line": 4023,
            "jsDoc": [
                "/**\r\n * Returns the previous part of the property value or null if there is no\r\n * previous part.\r\n * @return {parserlib.css.PropertyValuePart} The previous part of the\r\n * property value or null if there is no previous part.\r\n * @method previous\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "parserlib.css.PropertyValuePart"
            }
        },
        "restore": {
            "line": 4032,
            "jsDoc": [
                "/**\r\n * Restores the last saved bookmark.\r\n * @return {void}\r\n * @method restore\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "void"
            }
        },
        "drop": {
            "line": 4043,
            "jsDoc": [
                "/**\r\n * Drops the last saved bookmark.\r\n * @return {void}\r\n * @method drop\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "void"
            }
        },
        "described": true
    },
    "PropertyValuePart": {
        "line": 4069,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 4069,
            "jsDoc": [
                "/**\r\n * Represents a single part of a CSS property value, meaning that it represents\r\n * just one part of the data between \":\" and \";\".\r\n * @param {String} text The text representation of the unit.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n * @namespace parserlib.css\r\n * @class PropertyValuePart\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "text": "String",
                "line": "Number",
                "col": "Number"
            }
        },
        "parseString": {
            "line": 4238,
            "jsDoc": [
                "/**\r\n * Helper method to parse a CSS string.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "str": "any"
            }
        },
        "serializeString": {
            "line": 4263,
            "jsDoc": [
                "/**\r\n * Helper method to serialize a CSS string.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "string",
                "value": "any"
            }
        },
        "fromToken": {
            "line": 4286,
            "jsDoc": [
                "/**\r\n * Create a new syntax unit based solely on the given token.\r\n * Convenience method for creating a new syntax unit when\r\n * it represents a single token instead of multiple.\r\n * @param {Object} token The token object to represent.\r\n * @return {parserlib.css.PropertyValuePart} The object representing the token.\r\n * @static\r\n * @method fromToken\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "parserlib.css.PropertyValuePart",
                "token": "Object"
            }
        },
        "described": true
    },
    "Pseudos": {
        "line": 4299,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "isElement": {
            "line": 4310,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "boolean",
                "pseudo": "any"
            },
            "described": true
        },
        "described": true
    },
    "Selector": {
        "line": 4335,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 4335,
            "jsDoc": [
                "/**\r\n * Represents an entire single selector, including all parts but not\r\n * including multiple selectors (those separated by commas).\r\n * @namespace parserlib.css\r\n * @class Selector\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {any[]} parts Array of selectors parts making up this selector.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "parts": "any[]",
                "line": "Number",
                "col": "Number"
            }
        },
        "described": true
    },
    "SelectorPart": {
        "line": 4384,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 4384,
            "jsDoc": [
                "/**\r\n * Represents a single part of a selector string, meaning a single set of\r\n * element name and modifiers. This does not include combinators such as\r\n * spaces, +, >, etc.\r\n * @namespace parserlib.css\r\n * @class SelectorPart\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {String} elementName The element name in the selector or null\r\n *      if there is no element name.\r\n * @param {any[]} modifiers Array of individual modifiers for the element.\r\n *      May be empty if there are none.\r\n * @param {String} text The text representation of the unit.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "elementName": "String",
                "modifiers": "any[]",
                "text": "String",
                "line": "Number",
                "col": "Number"
            }
        },
        "described": true
    },
    "SelectorSubPart": {
        "line": 4431,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 4431,
            "jsDoc": [
                "/**\r\n * Represents a selector modifier string, meaning a class name, element name,\r\n * element ID, pseudo rule, etc.\r\n * @namespace parserlib.css\r\n * @class SelectorSubPart\r\n * @extends parserlib.util.SyntaxUnit\r\n * @constructor\r\n * @param {String} text The text representation of the unit.\r\n * @param {String} type The type of selector modifier.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "text": "String",
                "type": "String",
                "line": "Number",
                "col": "Number"
            },
            "described": true
        },
        "described": true
    },
    "Specificity": {
        "line": 4473,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 4473,
            "jsDoc": [
                "/**\r\n * Represents a selector's specificity.\r\n * @namespace parserlib.css\r\n * @class Specificity\r\n * @constructor\r\n * @param {Number} a Should be 1 for inline styles, zero for stylesheet styles\r\n * @param {Number} b Number of ID selectors\r\n * @param {Number} c Number of classes and pseudo classes\r\n * @param {Number} d Number of element names and pseudo elements\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "a": "Number",
                "b": "Number",
                "c": "Number",
                "d": "Number"
            }
        },
        "calculate": {
            "line": 4531,
            "jsDoc": [
                "/**\r\n * Calculates the specificity of the given selector.\r\n * @param {parserlib.css.Selector} The selector to calculate specificity for.\r\n * @return {parserlib.css.Specificity} The specificity of the selector.\r\n * @static\r\n * @method calculate\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "parserlib.css.Specificity",
                "selector": "any"
            }
        },
        "described": true
    },
    "TokenStream": {
        "line": 4668,
        "jsDoc": [
            "/**-----------------------------------------------------------------------------**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 4668,
            "jsDoc": [
                "/**\r\n * A token stream that produces CSS tokens.\r\n * @param {String|Reader} input The source of text to tokenize.\r\n * @constructor\r\n * @class TokenStream\r\n * @namespace parserlib.css\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "input": "String|Reader"
            },
            "described": true
        },
        "described": true
    },
    "Tokens": {
        "line": 5682,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "name": {
            "line": 5881,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "tt": "any"
            },
            "described": true
        },
        "type": {
            "line": 5885,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any",
                "c": "any"
            },
            "described": true
        },
        "described": true
    },
    "Validation": {
        "line": 5901,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "described": true
    },
    "ValidationError": {
        "line": 5972,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 5972,
            "jsDoc": [
                "/**\r\n * Type to use when a validation error occurs.\r\n * @class ValidationError\r\n * @namespace parserlib.util\r\n * @constructor\r\n * @param {String} message The error message.\r\n * @param {Number} line The line at which the error occurred.\r\n * @param {Number} col The column at which the error occurred.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "message": "String",
                "line": "Number",
                "col": "Number"
            },
            "described": true
        },
        "described": true
    },
    "ValidationTypes": {
        "line": 6003,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "described": true
    },
    "EventTarget": {
        "line": 6523,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 6523,
            "jsDoc": [
                "/**\r\n * A generic base to inherit from for any object\r\n * that needs event handling.\r\n * @class EventTarget\r\n * @constructor\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {},
            "described": true
        },
        "described": true
    },
    "StringReader": {
        "line": 6617,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 6617,
            "jsDoc": [
                "/**\r\n * Convenient way to read through strings.\r\n * @namespace parserlib.util\r\n * @class StringReader\r\n * @constructor\r\n * @param {String} text The text to read.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "text": "String"
            },
            "described": true
        },
        "described": true
    },
    "SyntaxError": {
        "line": 6904,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 6904,
            "jsDoc": [
                "/**\r\n * Type to use when a syntax error occurs.\r\n * @class SyntaxError\r\n * @namespace parserlib.util\r\n * @constructor\r\n * @param {String} message The error message.\r\n * @param {Number} line The line at which the error occurred.\r\n * @param {Number} col The column at which the error occurred.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "message": "String",
                "line": "Number",
                "col": "Number"
            },
            "described": true
        },
        "described": true
    },
    "SyntaxUnit": {
        "line": 6949,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 6949,
            "jsDoc": [
                "/**\r\n * Base type to represent a single syntactic unit.\r\n * @class SyntaxUnit\r\n * @namespace parserlib.util\r\n * @constructor\r\n * @param {String} text The text of the unit.\r\n * @param {Number} line The line of text on which the unit resides.\r\n * @param {Number} col The column of text on which the unit resides.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "text": "String",
                "line": "Number",
                "col": "Number"
            }
        },
        "fromToken": {
            "line": 6990,
            "jsDoc": [
                "/**\r\n * Create a new syntax unit based solely on the given token.\r\n * Convenience method for creating a new syntax unit when\r\n * it represents a single token instead of multiple.\r\n * @param {Object} token The token object to represent.\r\n * @return {parserlib.util.SyntaxUnit} The object representing the token.\r\n * @static\r\n * @method fromToken\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "parserlib.util.SyntaxUnit",
                "token": "Object"
            }
        },
        "described": true
    },
    "TokenStreamBase": {
        "line": 7035,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 7035,
            "jsDoc": [
                "/**\r\n * Generic TokenStream providing base functionality.\r\n * @class TokenStreamBase\r\n * @namespace parserlib.util\r\n * @constructor\r\n * @param {String|StringReader} input The text to tokenize or a reader from\r\n *      which to read the input.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "input": "String|StringReader"
            }
        },
        "createTokenData": {
            "line": 7089,
            "jsDoc": [
                "/**\r\n * Accepts an array of token information and outputs\r\n * an array of token data containing key-value mappings\r\n * and matching functions that the TokenStream needs.\r\n * @param {any[]} tokens An array of token descriptors.\r\n * @return {any[]} An array of processed token data.\r\n * @method createTokenData\r\n * @static\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "return": "any[]",
                "tokens": "any[]"
            }
        },
        "described": true
    },
    "CSSLint": {
        "line": 7712,
        "jsDoc": [
            "/**\r\n * Main CSSLint object.\r\n * @class CSSLint\r\n * @static\r\n * @extends parserlib.util.EventTarget\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "described": true
    },
    "Reporter": {
        "line": 8003,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
        "construct": {
            "line": 8003,
            "jsDoc": [
                "/**\r\n * An instance of Report is used to report results of the\r\n * verification back to the main API.\r\n * @class Reporter\r\n * @constructor\r\n * @param {String[]} lines The text lines of the source.\r\n * @param {Object} ruleset The set of rules to work with, including if\r\n *      they are errors or warnings.\r\n * @param {Object} explicitly allowed lines\r\n * @param {[][]} ignore list of line ranges to be ignored\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/css/csslint.js",
            "params": {
                "lines": "String[]",
                "ruleset": "Object",
                "explicitly": "Object",
                "ignore": "[][]"
            },
            "described": true
        },
        "described": true
    },
    "CssCompletions": {
        "line": 125,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/css_completions.js",
        "defineCompletions": {
            "line": 133,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css_completions.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getCompletions": {
            "line": 154,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getPropertyCompletions": {
            "line": 174,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getPropertyValueCompletions": {
            "line": 186,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/css_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "described": true
    },
    "DjangoHighlightRules": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/django.js"
    },
    "DjangoHtmlHighlightRules": {
        "line": 63,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/django.js"
    },
    "EjsHighlightRules": {
        "line": 39,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/ejs.js"
    },
    "FoldMode": {
        "line": 40,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
        "getFoldWidget": {
            "line": 64,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "any",
                "session": "any",
                "foldStyle": "any",
                "row": "any"
            },
            "described": true
        },
        "getFoldWidgetRange": {
            "line": 210,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "any",
                "session": "any",
                "foldStyle": "any",
                "row": "any"
            },
            "described": true
        },
        "getUsingStatementBlock": {
            "line": 86,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/csharp.js",
            "params": {
                "return": "any",
                "session": "any",
                "line": "any",
                "row": "any"
            },
            "described": true
        },
        "getRegionBlock": {
            "line": 108,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/csharp.js",
            "params": {
                "return": "any",
                "session": "any",
                "line": "any",
                "row": "any"
            },
            "described": true
        },
        "getSectionRange": {
            "line": 131,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/cstyle.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any"
            },
            "described": true
        },
        "getCommentRegionBlock": {
            "line": 167,
            "jsDoc": [
                "/**\r\n     * gets comment region block with end region assumed to be start of comment in any cstyle mode or SQL mode (--) which inherits from this.\r\n     * There may optionally be a pound symbol before the region/endregion statement\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/cstyle.js",
            "params": {
                "return": "any",
                "session": "any",
                "line": "any",
                "row": "any"
            },
            "described": true
        },
        "indentationBlock": {
            "line": 59,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/fold_mode.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "openingBracketBlock": {
            "line": 92,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/fold_mode.js",
            "params": {
                "return": "any",
                "session": "any",
                "bracket": "any",
                "row": "any",
                "column": "any",
                "typeRe": "any"
            },
            "described": true
        },
        "closingBracketBlock": {
            "line": 109,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/fold_mode.js",
            "params": {
                "return": "any",
                "session": "any",
                "bracket": "any",
                "row": "any",
                "column": "any",
                "typeRe": "any"
            },
            "described": true
        },
        "isHeading": {
            "line": 48,
            "jsDoc": [
                "/**\r\n  is the row a heading?\r\n  */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/haskell_cabal.js",
            "params": {
                "return": "boolean",
                "session": "any",
                "row": "any"
            },
            "described": true
        },
        "latexBlock": {
            "line": 81,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/latex.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any",
                "returnRange": "any"
            },
            "described": true
        },
        "latexSection": {
            "line": 141,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/latex.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "luaBlock": {
            "line": 111,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/lua.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any",
                "tokenRange": "any"
            },
            "described": true
        },
        "$getMode": {
            "line": 46,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/mixed.js",
            "params": {
                "return": "any",
                "state": "any"
            },
            "described": true
        },
        "$tryMode": {
            "line": 56,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/mixed.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "foldStyle": "any",
                "row": "any"
            },
            "described": true
        },
        "rubyBlock": {
            "line": 142,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/ruby.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any",
                "tokenRange": "any"
            },
            "described": true
        },
        "getBeginEndBlock": {
            "line": 84,
            "jsDoc": [
                "/**\r\n     * @returns {range} folding block for sequence that starts with 'CASE' or 'BEGIN' and ends with 'END'\r\n     * @param {string} matchSequence - the sequence of charaters that started the fold widget, which should remain visible when the fold widget is folded\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/sqlserver.js",
            "params": {
                "return": "range",
                "session": "any",
                "row": "any",
                "column": "any",
                "matchSequence": "string"
            },
            "described": true
        },
        "vbsBlock": {
            "line": 103,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/vbscript.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any",
                "column": "any",
                "tokenRange": "any"
            },
            "described": true
        },
        "getCommentFoldWidget": {
            "line": 82,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "\"\" | \"start\"",
                "session": "any",
                "row": "any"
            },
            "described": true
        },
        "_getFirstTagInLine": {
            "line": 91,
            "jsDoc": [
                "/**\r\n     * returns a first tag (or a fragment) in a line\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "any",
                "session": "any",
                "row": "any"
            },
            "described": true
        },
        "_findEndTagInLine": {
            "line": 124,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "boolean",
                "session": "any",
                "row": "any",
                "tagName": "any",
                "startColumn": "any"
            },
            "described": true
        },
        "_readTagForward": {
            "line": 144,
            "jsDoc": [
                "/**\r\n     * reads a full tag and places the iterator after the tag\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "any",
                "iterator": "any"
            },
            "described": true
        },
        "_readTagBackward": {
            "line": 169,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "any",
                "iterator": "any"
            },
            "described": true
        },
        "_pop": {
            "line": 194,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js",
            "params": {
                "return": "any",
                "stack": "any",
                "tag": "any"
            },
            "described": true
        },
        "described": true
    },
    "Tag": {
        "line": 50,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/folding/xml.js"
    },
    "ElementStack": {
        "line": 2362,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js"
    },
    "InputStream": {
        "line": 787,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js"
    },
    "EntityParser": {
        "line": 788,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js"
    },
    "SpecialElements": {
        "line": 604,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js"
    },
    "StackItem": {
        "line": 2363,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js"
    },
    "Tokenizer": {
        "line": 48,
        "jsDoc": [
            "/**\r\n * This class takes a set of highlighting rules, and creates a tokenizer out of them. For more information, see [the wiki on extending highlighters](https://github.com/ajaxorg/ace/wiki/Creating-or-Extending-an-Edit-Mode#wiki-extendingTheHighlighter).\r\n * @class Tokenizer\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
        "construct": {
            "line": 48,
            "jsDoc": [
                "/**\r\n * Constructs a new tokenizer based on the given rules and flags.\r\n * @param {Object} rules The highlighting rules\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "rules": "Object"
            },
            "described": true
        },
        "$setMaxTokenCount": {
            "line": 138,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "return": "void",
                "m": "any"
            },
            "described": true
        },
        "$applyToken": {
            "line": 142,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "return": "{}",
                "str": "any"
            },
            "described": true
        },
        "$arrayTokens": {
            "line": 161,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "return": "{}",
                "str": "any"
            },
            "described": true
        },
        "removeCapturingGroups": {
            "line": 179,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "return": "any",
                "src": "any"
            },
            "described": true
        },
        "createSplitterRegexp": {
            "line": 187,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "return": "any",
                "src": "any",
                "flag": "any"
            },
            "described": true
        },
        "getLineTokens": {
            "line": 230,
            "jsDoc": [
                "/**\r\n     * Returns an object containing two properties: `tokens`, which contains all the tokens; and `state`, the current state.\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tokenizer.js",
            "params": {
                "return": "{ tokens: {}; state: any; }",
                "line": "any",
                "startState": "any"
            },
            "described": true
        },
        "described": true
    },
    "CharacterBuffer": {
        "line": 2403,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "skipAtMostOneLeadingNewline": {
            "line": 2409,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "skipLeadingWhitespace": {
            "line": 2414,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "skipLeadingNonWhitespace": {
            "line": 2421,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "takeRemaining": {
            "line": 2428,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "takeLeadingWhitespace": {
            "line": 2432,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "TreeBuilder": {
        "line": 5884,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "described": true
    },
    "SAXTreeBuilder": {
        "line": 5886,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "start": {
            "line": 5892,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "tokenizer": "any"
            },
            "described": true
        },
        "end": {
            "line": 5896,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "insertDoctype": {
            "line": 5900,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "name": "any",
                "publicId": "any",
                "systemId": "any"
            },
            "described": true
        },
        "createElement": {
            "line": 5906,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any",
                "namespaceURI": "any",
                "localName": "any",
                "attributes": "any"
            },
            "described": true
        },
        "insertComment": {
            "line": 5911,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "data": "any",
                "parent": "any"
            },
            "described": true
        },
        "appendCharacters": {
            "line": 5918,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "parent": "any",
                "data": "any"
            },
            "described": true
        },
        "insertText": {
            "line": 5923,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any",
                "data": "any"
            },
            "described": true
        },
        "attachNode": {
            "line": 5944,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "node": "any",
                "parent": "any"
            },
            "described": true
        },
        "attachNodeToFosterParent": {
            "line": 5948,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "child": "any",
                "table": "any",
                "stackParent": "any"
            },
            "described": true
        },
        "detachFromParent": {
            "line": 5956,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "element": "any"
            },
            "described": true
        },
        "reparentChildren": {
            "line": 5960,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "oldParent": "any",
                "newParent": "any"
            },
            "described": true
        },
        "getFragment": {
            "line": 5964,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "addAttributesToElement": {
            "line": 5978,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "element": "any",
                "attributes": "any"
            },
            "described": true
        },
        "described": true
    },
    "TreeParser": {
        "line": 6596,
        "jsDoc": [
            "/**\r\n * A tree visitor that replays a tree as SAX events.\r\n * @version $Id$\r\n * @author hsivonen\r\n */",
            "/**\r\n * The constructor.\r\n * \r\n * @param contentHandler\r\n *            must not be <code>null</code>\r\n * @param lexicalHandler\r\n *            may be <code>null</code>\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "parse": {
            "line": 6633,
            "jsDoc": [
                "/**\r\n * Causes SAX events for the tree rooted at the argument to be emitted.\r\n * <code>startDocument()</code> and <code>endDocument()</code> are only\r\n * emitted for a <code>Document</code> node.\r\n * \r\n * @param node\r\n *            the root\r\n * @throws SAXException\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "node": "any"
            },
            "described": true
        },
        "characters": {
            "line": 6660,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#characters(char[], int, int)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "ch": "any",
                "start": "any",
                "length": "any",
                "locator": "any"
            },
            "described": true
        },
        "endDocument": {
            "line": 6668,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#endDocument()\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "locator": "any"
            },
            "described": true
        },
        "endElement": {
            "line": 6677,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#endElement(java.lang.String,\r\n *      java.lang.String, java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "uri": "any",
                "localName": "any",
                "qName": "any",
                "locator": "any"
            },
            "described": true
        },
        "endPrefixMapping": {
            "line": 6685,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#endPrefixMapping(java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "prefix": "any",
                "locator": "any"
            },
            "described": true
        },
        "ignorableWhitespace": {
            "line": 6693,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#ignorableWhitespace(char[], int, int)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "ch": "any",
                "start": "any",
                "length": "any",
                "locator": "any"
            },
            "described": true
        },
        "processingInstruction": {
            "line": 6702,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#processingInstruction(java.lang.String,\r\n *      java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "target": "any",
                "data": "any",
                "locator": "any"
            },
            "described": true
        },
        "skippedEntity": {
            "line": 6710,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#skippedEntity(java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "name": "any",
                "locator": "any"
            },
            "described": true
        },
        "startDocument": {
            "line": 6718,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#startDocument()\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "locator": "any"
            },
            "described": true
        },
        "startElement": {
            "line": 6727,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#startElement(java.lang.String,\r\n *      java.lang.String, java.lang.String, org.xml.sax.Attributes)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "uri": "any",
                "localName": "any",
                "qName": "any",
                "atts": "any",
                "locator": "any"
            },
            "described": true
        },
        "startPrefixMapping": {
            "line": 6736,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ContentHandler#startPrefixMapping(java.lang.String,\r\n *      java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "prefix": "any",
                "uri": "any",
                "locator": "any"
            },
            "described": true
        },
        "comment": {
            "line": 6744,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#comment(char[], int, int)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "ch": "any",
                "start": "any",
                "length": "any",
                "locator": "any"
            },
            "described": true
        },
        "endCDATA": {
            "line": 6752,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#endCDATA()\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "locator": "any"
            },
            "described": true
        },
        "endDTD": {
            "line": 6760,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#endDTD()\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "locator": "any"
            },
            "described": true
        },
        "endEntity": {
            "line": 6768,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#endEntity(java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "name": "any",
                "locator": "any"
            },
            "described": true
        },
        "startCDATA": {
            "line": 6776,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#startCDATA()\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "locator": "any"
            },
            "described": true
        },
        "startDTD": {
            "line": 6785,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#startDTD(java.lang.String,\r\n *      java.lang.String, java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "name": "any",
                "publicId": "any",
                "systemId": "any",
                "locator": "any"
            },
            "described": true
        },
        "startEntity": {
            "line": 6793,
            "jsDoc": [
                "/**\r\n * @see org.xml.sax.ext.LexicalHandler#startEntity(java.lang.String)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "name": "any",
                "locator": "any"
            },
            "described": true
        },
        "described": true
    },
    "SAXParser": {
        "line": 5830,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "parse": {
            "line": 5838,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "source": "any",
                "context": "any"
            },
            "described": true
        },
        "parseFragment": {
            "line": 5849,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "source": "any",
                "context": "any"
            },
            "described": true
        },
        "described": true
    },
    "NodeType": {
        "line": 41,
        "jsDoc": [
            "/** Node Types**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
        "described": true
    },
    "Node": {
        "line": 6037,
        "jsDoc": [
            "/**\r\n * The common node superclass.\r\n * @version $Id$\r\n * @author hsivonen\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6056,
            "jsDoc": [
                "/**\r\n * Visit the node.\r\n * \r\n * @param treeParser the visitor\r\n * @throws SAXException if stuff goes wrong\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "never",
                "treeParser": "any"
            },
            "described": true
        },
        "revisit": {
            "line": 6066,
            "jsDoc": [
                "/**\r\n * Revisit the node.\r\n * \r\n * @param treeParser the visitor\r\n * @throws SAXException if stuff goes wrong\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "detach": {
            "line": 6077,
            "jsDoc": [
                "/**\r\n * Detach this node from its parent.\r\n */",
                "/** Subclass-specific accessors that are hoisted here to **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "toString": {
            "line": 911,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "cloneNode": {
            "line": 113,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "recursive": "any"
            },
            "described": true
        },
        "appendChild": {
            "line": 125,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "node": "any"
            },
            "described": true
        },
        "removeChild": {
            "line": 128,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "node": "any"
            },
            "described": true
        },
        "remove": {
            "line": 137,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "replaceChild": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "node": "any",
                "oldNode": "any"
            },
            "described": true
        },
        "insertBefore": {
            "line": 145,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "node": "any",
                "before": "any"
            },
            "described": true
        },
        "before": {
            "line": 168,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "node": "any"
            },
            "described": true
        },
        "hasChildNodes": {
            "line": 171,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "hasAttributes": {
            "line": 177,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "querySelectorAll": {
            "line": 180,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "{}",
                "selector": "any"
            },
            "described": true
        },
        "querySelector": {
            "line": 199,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "s": "any"
            },
            "described": true
        },
        "getElementsByTagName": {
            "line": 202,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "{}",
                "s": "any"
            },
            "described": true
        },
        "getElementById": {
            "line": 210,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "s": "any"
            },
            "described": true
        },
        "matches": {
            "line": 217,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "boolean",
                "selector": "any"
            },
            "described": true
        },
        "closest": {
            "line": 233,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "s": "any"
            },
            "described": true
        },
        "removeAttribute": {
            "line": 241,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "a": "any"
            },
            "described": true
        },
        "setAttribute": {
            "line": 244,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "a": "any",
                "v": "any"
            },
            "described": true
        },
        "getAttribute": {
            "line": 247,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "a": "any",
                "v": "any"
            },
            "described": true
        },
        "___format": {
            "line": 315,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "string",
                "indent": "any"
            }
        },
        "insertAdjacentHTML": {
            "line": 330,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "position": "any",
                "markup": "any"
            },
            "described": true
        },
        "insertAdjacentElement": {
            "line": 335,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "position": "any",
                "element": "any"
            },
            "described": true
        },
        "getBoundingClientRect": {
            "line": 342,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "{ top: number; left: number; width: number; height: number; right: number; bottom: number; }",
                "v": "any"
            },
            "described": true
        },
        "addEventListener": {
            "line": 421,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "name": "any",
                "listener": "any",
                "capturing": "any"
            },
            "described": true
        },
        "removeEventListener": {
            "line": 432,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "name": "any",
                "listener": "any"
            },
            "described": true
        },
        "createEvent": {
            "line": 439,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any",
                "v": "any"
            },
            "described": true
        },
        "dispatchEvent": {
            "line": 442,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "contains": {
            "line": 458,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "boolean",
                "node": "any"
            },
            "described": true
        },
        "focus": {
            "line": 464,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "blur": {
            "line": 472,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true,
        "____format": {
            "line": 549,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "ParentNode": {
        "line": 6099,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "insertBefore": {
            "line": 6113,
            "jsDoc": [
                "/**\r\n * Insert a new child before a pre-existing child and return the newly inserted child.\r\n * @param child the new child\r\n * @param sibling the existing child before which to insert (must be a child of this node) or <code>null</code> to append\r\n * @return <code>child</code>\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any",
                "child": "any",
                "sibling": "any"
            },
            "described": true
        },
        "insertBetween": {
            "line": 6136,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any",
                "child": "any",
                "prev": "any",
                "next": "any"
            },
            "described": true
        },
        "appendChild": {
            "line": 6162,
            "jsDoc": [
                "/**\r\n * Append a child to this node and return the child.\r\n * \r\n * @param child the child to append.\r\n * @return <code>child</code>\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any",
                "child": "any"
            },
            "described": true
        },
        "appendChildren": {
            "line": 6178,
            "jsDoc": [
                "/**\r\n * Append the children of another node to this node removing them from the other node .\r\n * @param parent the other node whose children to append to this one\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "parent": "any"
            },
            "described": true
        },
        "removeChild": {
            "line": 6201,
            "jsDoc": [
                "/**\r\n * Remove a child from this node.\r\n * @param node the child to remove\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "any",
                "node": "any"
            },
            "described": true
        },
        "described": true
    },
    "DocumentFragment": {
        "line": 6273,
        "jsDoc": [
            "/**\r\n * A document fragment.\r\n * \r\n * @version $Id$\r\n * @author hsivonen\r\n */",
            "/**\r\n * The constructor.\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6283,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true
    },
    "Characters": {
        "line": 6337,
        "jsDoc": [
            "/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param {String} data the buffer\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6349,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true
    },
    "IgnorableWhitespace": {
        "line": 6359,
        "jsDoc": [
            "/**\r\n * The constructor.\r\n * @param buf the buffer\r\n * @param start the offset\r\n * @param length the length\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6371,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true
    },
    "Comment": {
        "line": 6389,
        "jsDoc": [
            "/**\r\n * A comment.\r\n * \r\n * @version $Id$\r\n * @author hsivonen\r\n */",
            "/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param buf the buffer\r\n * @param start the offset\r\n * @param length the length\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6401,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true
    },
    "Entity": {
        "line": 6448,
        "jsDoc": [
            "/**\r\n * An entity.\r\n * @version $Id$\r\n * @author hsivonen\r\n */",
            "/**\r\n * The constructor.\r\n * @param locator the locator\r\n * @param name the name\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6460,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "revisit": {
            "line": 6467,
            "jsDoc": [
                "/**\r\n * @see nu.validator.saxtree.Node#revisit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true
    },
    "SkippedEntity": {
        "line": 6483,
        "jsDoc": [
            "/**\r\n * A skipped entity.\r\n * @version $Id$\r\n * @author hsivonen\r\n */",
            "/**\r\n * Constructor.\r\n * @param locator the locator\r\n * @param name the name\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6495,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "described": true
    },
    "ProcessingInstruction": {
        "line": 6521,
        "jsDoc": [
            "/**\r\n * A processing instruction.\r\n * @version $Id$\r\n * @author hsivonen\r\n */",
            "/**\r\n * PI target.\r\n */",
            "/**\r\n * PI data.\r\n */",
            "/**\r\n * Constructor.\r\n * @param locator the locator\r\n * @param target PI target\r\n * @param data PI data\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "visit": {
            "line": 6533,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#visit(nu.validator.saxtree.TreeParser)\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void",
                "treeParser": "any"
            },
            "described": true
        },
        "getNodeType": {
            "line": 6541,
            "jsDoc": [
                "/**\r\n * \r\n * @see nu.validator.saxtree.Node#getNodeType()\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "described": true
    },
    "NullLexicalHandler": {
        "line": 6822,
        "jsDoc": [
            "/**\r\n * A lexical handler that does nothing.\r\n * @version $Id$\r\n * @author hsivonen\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
        "comment": {
            "line": 6826,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "endCDATA": {
            "line": 6827,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "endDTD": {
            "line": 6828,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "endEntity": {
            "line": 6829,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "startCDATA": {
            "line": 6830,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "startDTD": {
            "line": 6831,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "startEntity": {
            "line": 6832,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html/saxparser.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "TempCtor": {
        "line": 17381,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "HtmlCompletions": {
        "line": 263,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/html_completions.js",
        "getCompletions": {
            "line": 269,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getTagCompletions": {
            "line": 295,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getAttributeCompletions": {
            "line": 305,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getAttributeValueCompletions": {
            "line": 323,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getHTMLEntityCompletions": {
            "line": 343,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/html_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "described": true
    },
    "Buffer": {
        "line": 487,
        "jsDoc": [
            "/** Built-in value references. */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "DataView": {
        "line": 501,
        "jsDoc": [
            "/** Built-in method references that are verified to be native. **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "Hash": {
        "line": 4248,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "construct": {
            "line": 4248,
            "jsDoc": [
                "/**\r\n * Creates a hash object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {any[]} entries The key-value pairs to cache.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "entries": "any[]"
            }
        }
    },
    "ListCache": {
        "line": 4350,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "construct": {
            "line": 4350,
            "jsDoc": [
                "/**\r\n * Creates an list cache object.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {any[]} entries The key-value pairs to cache.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "entries": "any[]"
            }
        }
    },
    "MapCache": {
        "line": 88564,
        "jsDoc": [
            "/**\r\n     * Creates a cache object to store key/value pairs.\r\n     *\r\n     * @private\r\n     * @static\r\n     * @name Cache\r\n     * @memberOf _.memoize\r\n     */",
            "/**------------------------------------------------------------------------**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "Stack": {
        "line": 4566,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "construct": {
            "line": 4566,
            "jsDoc": [
                "/**\r\n * Creates a stack cache object to store key-value pairs.\r\n *\r\n * @private\r\n * @constructor\r\n * @param {any[]} entries The key-value pairs to cache.\r\n */"
            ],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "entries": "any[]"
            }
        }
    },
    "Ctor": {
        "line": 2437,
        "jsDoc": [
            "/** Naked function reference for surrogate-prototype-swapping.**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "ArrayProto": {
        "line": 2417,
        "jsDoc": [
            "/** Save bytes in the minified (but not gzipped) version:**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "SymbolProto": {
        "line": 2418,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "Lexer": {
        "line": 10952,
        "jsDoc": [
            "/**\r\n * Lexer for JSHint.\r\n *\r\n * This object does a char-by-char scan of the provided source code\r\n * and produces a sequence of tokens.\r\n *\r\n *   var lex = new Lexer(\"var i = 0;\");\r\n *   lex.start();\r\n *   lex.token(); // returns the next token\r\n *\r\n * You have to use the token() method to move the lexer forward\r\n * but you don't have to use its return value to get tokens. In addition\r\n * to token() method returning the next token, the Lexer object also\r\n * emits events.\r\n *\r\n *   lex.on(\"Identifier\", function(data) {\r\n *     if (data.name.indexOf(\"_\") >= 0) {\r\n *       // Produce a warning.\r\n *     }\r\n *   });\r\n *\r\n * Note that the token() method returns tokens in a JSLint-compatible\r\n * format while the event emitter uses a slightly modified version of\r\n * Mozilla's JavaScript Parser API. Eventually, we will move away from\r\n * JSLint format.\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "FutureReservedWord": {
        "line": 5532,
        "jsDoc": [
            "/**\r\n   * Convenience function for defining JSHint symbols for keywords that are\r\n   * only reserved in some circumstances.\r\n   *\r\n   * @param {string} name - the name of the symbol\r\n   * @param {object} [meta] - a collection of optional arguments\r\n   * @param {function} [meta.nud] -the null denotation function for the symbol;\r\n   *                   see the `expression` function for more detail\r\n   * @param {boolean} [meta.es5] - `true` if the identifier is reserved\r\n   *                               in ECMAScript 5 or later\r\n   * @param {boolean} [meta.strictOnly] - `true` if the identifier is only\r\n   *                                      reserved in strict mode code.\r\n   *\r\n   * @returns {object} - the object describing the JSHint symbol (provided to\r\n   *                     support cases where further refinement is necessary)\r\n   */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "CompArray": {
        "line": 10297,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "Token": {
        "line": 10878,
        "jsDoc": [
            "/** Some of these token types are from JavaScript Parser API**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
        "described": true,
        "type_prop": {
            "line": 1484,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "value_prop": {
            "line": 1485,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "index_prop": {
            "line": 1486,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "start_prop": {
            "line": 1487,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Context": {
        "line": 10892,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "NameStack": {
        "line": 15708,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js"
    },
    "Item": {
        "line": 18750,
        "jsDoc": [
            "/** v8 likes predictible objects**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
        "run": {
            "line": 18754,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript/jshint.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "JavaScriptWorker": {
        "line": 69,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/javascript_worker.js",
        "setOptions": {
            "line": 78,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript_worker.js",
            "params": {
                "return": "void",
                "options": "any"
            },
            "described": true
        },
        "changeOptions": {
            "line": 100,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript_worker.js",
            "params": {
                "return": "void",
                "newOptions": "any"
            },
            "described": true
        },
        "onUpdate": {
            "line": 105,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/javascript_worker.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "JsonWorker": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/json_worker.js",
        "onUpdate": {
            "line": 47,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/json_worker.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "FullFlowContext": {
        "line": 1538,
        "jsDoc": [
            "/** Control flow tracking**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
        "isInLoop": {
            "line": 1543,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "pushScope": {
            "line": 1552,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void",
                "isLoop": "any"
            },
            "described": true
        },
        "popScope": {
            "line": 1562,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "addGoto": {
            "line": 1573,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void",
                "target": "any",
                "token": "any"
            },
            "described": true
        },
        "addLabel": {
            "line": 1591,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void",
                "name": "any",
                "token": "any"
            },
            "described": true
        },
        "addLocal": {
            "line": 1621,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void",
                "name": "any",
                "token": "any"
            },
            "described": true
        },
        "currentScope": {
            "line": 1628,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "raiseDeferredErrors": {
            "line": 1632,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "LoopFlowContext": {
        "line": 1646,
        "jsDoc": [
            "/** Simplified context that only checks the validity of loop breaks.**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
        "isInLoop": {
            "line": 1651,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "pushScope": {
            "line": 1655,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void",
                "isLoop": "any"
            },
            "described": true
        },
        "popScope": {
            "line": 1661,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "addGoto": {
            "line": 1671,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "never"
            },
            "described": true
        },
        "addLocal": {
            "line": 1676,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/lua/luaparse.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "MatchingBraceOutdent": {
        "line": 36,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/matching_brace_outdent.js",
        "checkOutdent": {
            "line": 40,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/matching_brace_outdent.js",
            "params": {
                "return": "any",
                "line": "any",
                "input": "any"
            },
            "described": true
        },
        "autoOutdent": {
            "line": 47,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/matching_brace_outdent.js",
            "params": {
                "return": "number",
                "doc": "any",
                "row": "any"
            },
            "described": true
        },
        "$getIndent": {
            "line": 62,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/matching_brace_outdent.js",
            "params": {
                "return": "any",
                "line": "any"
            },
            "described": true
        },
        "described": true
    },
    "MatchingParensOutdent": {
        "line": 36,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/matching_parens_outdent.js",
        "checkOutdent": {
            "line": 40,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/matching_parens_outdent.js",
            "params": {
                "return": "any",
                "line": "any",
                "input": "any"
            },
            "described": true
        },
        "autoOutdent": {
            "line": 47,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/matching_parens_outdent.js",
            "params": {
                "return": "number",
                "doc": "any",
                "row": "any"
            },
            "described": true
        },
        "$getIndent": {
            "line": 62,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/matching_parens_outdent.js",
            "params": {
                "return": "any",
                "line": "any"
            },
            "described": true
        },
        "described": true
    },
    "PhpMode": {
        "line": 49,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/php.js",
        "getNextLineIndent": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php.js",
            "params": {
                "return": "any",
                "state": "any",
                "line": "any",
                "tab": "any"
            },
            "described": true
        },
        "checkOutdent": {
            "line": 98,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php.js",
            "params": {
                "return": "any",
                "state": "any",
                "line": "any",
                "input": "any"
            },
            "described": true
        },
        "autoOutdent": {
            "line": 102,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php.js",
            "params": {
                "return": "void",
                "state": "any",
                "doc": "any",
                "row": "any"
            },
            "described": true
        },
        "getCompletions": {
            "line": 106,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "described": true
    },
    "PhpCompletions": {
        "line": 10358,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/php_completions.js",
        "getCompletions": {
            "line": 10364,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getTagCompletions": {
            "line": 10396,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_completions.js",
            "params": {
                "return": "{}",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getFunctionCompletions": {
            "line": 10410,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getVariableCompletions": {
            "line": 10423,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getArrayKeyCompletions": {
            "line": 10435,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "described": true
    },
    "PhpWorker": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/php_worker.js",
        "setOptions": {
            "line": 46,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_worker.js",
            "params": {
                "return": "void",
                "opts": "any"
            },
            "described": true
        },
        "onUpdate": {
            "line": 50,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/php_worker.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "RazorCompletions": {
        "line": 62,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/razor_completions.js",
        "getCompletions": {
            "line": 68,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/razor_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getShortStartCompletions": {
            "line": 88,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/razor_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "getKeywordCompletions": {
            "line": 98,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/razor_completions.js",
            "params": {
                "return": "any",
                "state": "any",
                "session": "any",
                "pos": "any",
                "prefix": "any"
            },
            "described": true
        },
        "described": true
    },
    "SnippetHighlightRules": {
        "line": 8,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/snippets.js"
    },
    "SnippetGroupHighlightRules": {
        "line": 68,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/snippets.js"
    },
    "VisualforceMode": {
        "line": 12,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/visualforce.js"
    },
    "DOMParser": {
        "line": 7,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom-parser.js",
        "parseFromString": {
            "line": 11,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml/dom-parser.js",
            "params": {
                "return": "any",
                "source": "any",
                "mimeType": "any"
            },
            "described": true
        },
        "described": true
    },
    "DOMHandler": {
        "line": 79,
        "jsDoc": [
            "/**\r\n * +ContentHandler+ErrorHandler\r\n * +LexicalHandler+EntityResolver2\r\n * -DeclHandler-DTDHandler \r\n * \r\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\r\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\r\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom-parser.js",
        "DOMHandler": {
            "line": 244,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml/dom-parser.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "ExceptionCode": {
        "line": 56,
        "jsDoc": [
            "/** ExceptionCode**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "ExceptionMessage": {
        "line": 57,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "DOMException": {
        "line": 76,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "NodeList": {
        "line": 96,
        "jsDoc": [
            "/**\r\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\r\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\r\n * The items in the NodeList are accessible via an integral index, starting from 0.\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "LiveNodeList": {
        "line": 116,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
        "item": {
            "line": 131,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
            "params": {
                "return": "any",
                "i": "any"
            },
            "described": true
        },
        "described": true
    },
    "NamedNodeMap": {
        "line": 143,
        "jsDoc": [
            "/**\r\n *\r\n * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.\r\n * NamedNodeMap objects in the DOM are live.\r\n * used for attributes or DocumentType entities\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "DOMImplementation": {
        "line": 251,
        "jsDoc": [
            "/**\r\n * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "Attr": {
        "line": 53,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/test/mockdom.js"
    },
    "CharacterData": {
        "line": 805,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "CDATASection": {
        "line": 865,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "DocumentType": {
        "line": 874,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "Notation": {
        "line": 879,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "EntityReference": {
        "line": 889,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js"
    },
    "XMLSerializer": {
        "line": 905,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
        "serializeToString": {
            "line": 906,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xml/dom.js",
            "params": {
                "return": "any",
                "node": "any"
            },
            "described": true
        },
        "described": true
    },
    "XMLReader": {
        "line": 23,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/sax.js"
    },
    "ElementAttributes": {
        "line": 529,
        "jsDoc": [
            "/**\r\n * @param source\r\n */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xml/sax.js"
    },
    "JSONiqTokenizer": {
        "line": 10140,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "Rules": {
        "line": 4318,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xquery_lexer.js",
        "exports": {
            "line": 4435,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xquery_lexer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "TokenHandler": {
        "line": 4201,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xquery_lexer.js"
    },
    "StaticError": {
        "line": 762,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "StaticWarning": {
        "line": 763,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "TreeOps": {
        "line": 87331,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "Errors": {
        "line": 761,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "SchemaPrefixHandler": {
        "line": 125,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "EQNameHandler": {
        "line": 191,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "SchemaBuiltinTypes": {
        "line": 245,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "StaticContext": {
        "line": 87334,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "Handlers": {
        "line": 767,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "XQueryTokenizer": {
        "line": 4302,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xquery_lexer.js"
    },
    "JSONiqParser": {
        "line": 87324,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "XQueryParser": {
        "line": 87325,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "JSONParseTreeHandler": {
        "line": 87326,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "Translator": {
        "line": 87327,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "StyleChecker": {
        "line": 87328,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "XQDoc": {
        "line": 87329,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "ArrayBuffer": {
        "line": 88192,
        "jsDoc": [
            "/** Native method references. */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "LodashWrapper": {
        "line": 88364,
        "jsDoc": [
            "/**\r\n     * The base constructor for creating `lodash` wrapper objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to wrap.\r\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\r\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\r\n     */"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "LazyWrapper": {
        "line": 88448,
        "jsDoc": [
            "/**\r\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to wrap.\r\n     */",
            "/**------------------------------------------------------------------------**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
        "LazyWrapper": {
            "line": 99607,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "compact": {
            "line": 99622,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "reject": {
            "line": 99626,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
            "params": {
                "return": "any",
                "predicate": "any",
                "thisArg": "any"
            },
            "described": true
        },
        "slice": {
            "line": 99633,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
            "params": {
                "return": "any",
                "start": "any",
                "end": "any"
            },
            "described": true
        },
        "takeRightWhile": {
            "line": 99652,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
            "params": {
                "return": "any",
                "predicate": "any",
                "thisArg": "any"
            },
            "described": true
        },
        "toArray": {
            "line": 99656,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "SetCache": {
        "line": 88633,
        "jsDoc": [
            "/**\r\n     *\r\n     * Creates a cache object to store unique values.\r\n     *\r\n     * @private\r\n     * @param {Array} [values] The values to cache.\r\n     */",
            "/**------------------------------------------------------------------------**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery/xqlint.js"
    },
    "XQLint": {
        "line": 37,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery_worker.js"
    },
    "XQueryWorker": {
        "line": 64,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/xquery_worker.js",
        "onUpdate": {
            "line": 96,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/xquery_worker.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "State": {
        "line": 1144,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "described": true
    },
    "YAMLException": {
        "line": 974,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "toString": {
            "line": 999,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "return": "string",
                "compact": "any"
            },
            "described": true
        },
        "described": true
    },
    "Mark": {
        "line": 2621,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "getSnippet": {
            "line": 2630,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "return": "string",
                "indent": "any",
                "maxLength": "any"
            },
            "described": true
        },
        "toString": {
            "line": 2669,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "return": "string",
                "compact": "any"
            },
            "described": true
        },
        "described": true
    },
    "Schema": {
        "line": 2744,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
        "create": {
            "line": 2764,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "NodeBuffer": {
        "line": 2993,
        "jsDoc": [
            "/**eslint-disable no-bitwise**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js"
    },
    "Map": {
        "line": 4214,
        "jsDoc": [
            "/** Built-in method references that are verified to be native. **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml/yaml-lint.js"
    },
    "YamlWorker": {
        "line": 8,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mode/yaml_worker.js",
        "setOptions": {
            "line": 17,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml_worker.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "changeOptions": {
            "line": 21,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml_worker.js",
            "params": {
                "return": "void",
                "newOptions": "any"
            },
            "described": true
        },
        "onUpdate": {
            "line": 26,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mode/yaml_worker.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "GutterHandler": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mouse/default_gutter_handler.js",
        "described": true
    },
    "GutterTooltip": {
        "line": 160,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mouse/default_gutter_handler.js",
        "setPosition": {
            "line": 167,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_gutter_handler.js",
            "params": {
                "return": "void",
                "x": "any",
                "y": "any"
            },
            "described": true
        },
        "described": true
    },
    "DefaultHandlers": {
        "line": 39,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
        "onMouseDown": {
            "line": 62,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "any",
                "ev": "any"
            },
            "described": true
        },
        "startSelect": {
            "line": 102,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void",
                "pos": "any",
                "waitForClickSelection": "any"
            },
            "described": true
        },
        "select": {
            "line": 120,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "extendSelectionBy": {
            "line": 141,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void",
                "unitName": "any"
            },
            "described": true
        },
        "selectByLinesEnd": {
            "line": 173,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectAllEnd": {
            "line": 173,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "focusWait": {
            "line": 182,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onDoubleClick": {
            "line": 190,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void",
                "ev": "any"
            },
            "described": true
        },
        "onTripleClick": {
            "line": 210,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void",
                "ev": "any"
            },
            "described": true
        },
        "onQuadClick": {
            "line": 225,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "void",
                "ev": "any"
            },
            "described": true
        },
        "onMouseWheel": {
            "line": 233,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/default_handlers.js",
            "params": {
                "return": "any",
                "ev": "any"
            },
            "described": true
        },
        "described": true
    },
    "DragdropHandler": {
        "line": 42,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
        "onDragStart": {
            "line": 67,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "onDragEnd": {
            "line": 95,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "onDragEnter": {
            "line": 110,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "onDragOver": {
            "line": 123,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "onDragLeave": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "onDrop": {
            "line": 149,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "any",
                "e": "any"
            },
            "described": true
        },
        "dragWait": {
            "line": 327,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "dragWaitEnd": {
            "line": 333,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "dragReadyEnd": {
            "line": 340,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "startDrag": {
            "line": 347,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onMouseDrag": {
            "line": 359,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "onMouseDown": {
            "line": 376,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/dragdrop_handler.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "described": true
    },
    "FoldHandler": {
        "line": 35,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mouse/fold_handler.js",
        "described": true
    },
    "MouseEvent": {
        "line": 40,
        "jsDoc": [
            "/**\r\n * Custom Ace mouse event\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
        "stopPropagation": {
            "line": 56,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "preventDefault": {
            "line": 61,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "stop": {
            "line": 66,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getDocumentPosition": {
            "line": 76,
            "jsDoc": [
                "/**\r\n     * Get the document position below the mouse cursor\r\n     * \r\n     * @return {Object} 'row' and 'column' of the document position\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "inSelection": {
            "line": 89,
            "jsDoc": [
                "/**\r\n     * Check if the mouse cursor is inside of the text selection\r\n     * \r\n     * @return {Boolean} whether the mouse cursor is inside of the selection\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getButton": {
            "line": 112,
            "jsDoc": [
                "/**\r\n     * Get the clicked mouse button\r\n     * \r\n     * @return {Number} 0 for left button, 1 for middle button, 2 for right button\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getShiftKey": {
            "line": 119,
            "jsDoc": [
                "/**\r\n     * @return {Boolean} whether the shift key was pressed when the event was emitted\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_event.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "MouseHandler": {
        "line": 43,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
        "onMouseEvent": {
            "line": 107,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "void",
                "name": "any",
                "e": "any"
            },
            "described": true
        },
        "onMouseMove": {
            "line": 112,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "void",
                "name": "any",
                "e": "any"
            },
            "described": true
        },
        "onMouseWheel": {
            "line": 121,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "void",
                "name": "any",
                "e": "any"
            },
            "described": true
        },
        "setState": {
            "line": 130,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "void",
                "state": "any"
            },
            "described": true
        },
        "captureMouse": {
            "line": 134,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "any",
                "ev": "any",
                "mouseMoveHandler": "any"
            },
            "described": true
        },
        "cancelContextMenu": {
            "line": 202,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "destroy": {
            "line": 213,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "MouseHandlerOptions": {
        "scrollSpeed_prop": {
            "line": 219,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "dragDelay_prop": {
            "line": 220,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "dragEnabled_prop": {
            "line": 221,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "focusTimeout_prop": {
            "line": 222,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "tooltipFollowsMouse_prop": {
            "line": 223,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/mouse/mouse_handler.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "described": true
    },
    "Selection": {
        "addRange": {
            "line": 75,
            "jsDoc": [
                "/** \r\n     * Adds a range to a selection by entering multiselect mode, if necessary.\r\n     * @param {Range} range The new range to add\r\n     * @param {Boolean} $blockChangeEvents Whether or not to block changing events\r\n     * @method Selection.addRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any",
                "range": "Range",
                "$blockChangeEvents": "Boolean"
            },
            "described": true
        },
        "toSingleRange": {
            "line": 115,
            "jsDoc": [
                "/**\r\n     * @method Selection.toSingleRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "range": "any"
            },
            "described": true
        },
        "substractPoint": {
            "line": 129,
            "jsDoc": [
                "/**\r\n     * Removes a Range containing pos (if it exists).\r\n     * @param {Range} pos The position to remove, as a `{row, column}` object\r\n     * @method Selection.substractPoint\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "any",
                "pos": "Range"
            },
            "described": true
        },
        "mergeOverlappingRanges": {
            "line": 141,
            "jsDoc": [
                "/**\r\n     * Merges overlapping ranges ensuring consistency after changes\r\n     * @method Selection.mergeOverlappingRanges\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$onAddRange": {
            "line": 147,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "range": "any"
            },
            "described": true
        },
        "$onRemoveRange": {
            "line": 153,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void",
                "removed": "any"
            },
            "described": true
        },
        "$initRangeList": {
            "line": 181,
            "jsDoc": [
                "/** adds multicursor support to selection**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getAllRanges": {
            "line": 195,
            "jsDoc": [
                "/**\r\n     * Returns a concatenation of all the ranges.\r\n     * @returns {Range[]}\r\n     * @method Selection.getAllRanges\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "Range[]"
            },
            "described": true
        },
        "splitIntoLines": {
            "line": 203,
            "jsDoc": [
                "/**\r\n     * Splits all the ranges into lines.\r\n     * @method Selection.splitIntoLines\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "joinSelections": {
            "line": 226,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "toggleBlockSelection": {
            "line": 238,
            "jsDoc": [
                "/**\r\n     * @method Selection.toggleBlockSelection\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "rectangularRangeBlock": {
            "line": 265,
            "jsDoc": [
                "/**\r\n     * \r\n     * Gets list of ranges composing rectangular block on the screen\r\n     * \r\n     * @param {Cursor} screenCursor The cursor to use\r\n     * @param {Anchor} screenAnchor The anchor to use\r\n     * @param {Boolean} includeEmptyLines If true, this includes ranges inside the block which are empty due to clipping\r\n     * @returns {Range}\r\n     * @method Selection.rectangularRangeBlock\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/multi_select.js",
            "params": {
                "return": "Range",
                "screenCursor": "Cursor",
                "screenAnchor": "Anchor",
                "includeEmptyLines": "Boolean"
            },
            "described": true
        },
        "line": 63,
        "jsDoc": [
            "/**\r\n * Contains the cursor position and the text selection of an edit session.\r\n *\r\n * The row/columns used in the selection are in document coordinates representing the coordinates as they appear in the document before applying soft wrap and folding.\r\n * @class Selection\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/selection.js",
        "construct": {
            "line": 63,
            "jsDoc": [
                "/**\r\n * Creates a new `Selection` object.\r\n * @param {EditSession} session The session to use\r\n * \r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "session": "EditSession"
            },
            "described": true
        },
        "changeCursor_event": {
            "line": 47,
            "jsDoc": [
                "/**\r\n * Emitted when the cursor position changes.\r\n * @event changeCursor\r\n *\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {},
            "described": true
        },
        "changeSelection_event": {
            "line": 52,
            "jsDoc": [
                "/**\r\n * Emitted when the cursor selection changes.\r\n * \r\n *  @event changeSelection\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {},
            "described": true
        },
        "isEmpty": {
            "line": 98,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the selection is empty.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "isMultiLine": {
            "line": 109,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the selection is a multi-line.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "getCursor": {
            "line": 117,
            "jsDoc": [
                "/**\r\n     * Returns an object containing the `row` and `column` current position of the cursor.\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "setSelectionAnchor": {
            "line": 127,
            "jsDoc": [
                "/**\r\n     * Sets the row and column position of the anchor. This function also emits the `'changeSelection'` event.\r\n     * @param {Number} row The new row\r\n     * @param {Number} column The new column\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "getSelectionAnchor": {
            "line": 138,
            "jsDoc": [
                "/**\r\n     * Returns an object containing the `row` and `column` of the calling selection anchor.\r\n     *\r\n     * @returns {Object}\r\n     * @related Anchor.getPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "getAnchor": {
            "line": 138,
            "jsDoc": [
                "/**\r\n     * Returns an object containing the `row` and `column` of the calling selection anchor.\r\n     *\r\n     * @returns {Object}\r\n     * @related Anchor.getPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "getSelectionLead": {
            "line": 150,
            "jsDoc": [
                "/**\r\n     * Returns an object containing the `row` and `column` of the calling selection lead.\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "isBackwards": {
            "line": 158,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the selection is going backwards in the document.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "getRange": {
            "line": 168,
            "jsDoc": [
                "/**\r\n     * [Returns the [[Range]] for the selected text.]{: #Selection.getRange}\r\n     * @returns {Range}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Range"
            },
            "described": true
        },
        "clearSelection": {
            "line": 183,
            "jsDoc": [
                "/**\r\n     * [Empties the selection (by de-selecting it). This function also emits the `'changeSelection'` event.]{: #Selection.clearSelection}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectAll": {
            "line": 193,
            "jsDoc": [
                "/**\r\n     * Selects all the text in the document.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setSelectionRange": {
            "line": 205,
            "jsDoc": [
                "/**\r\n     * Sets the selection to the provided range.\r\n     * @param {Range} range The range of text to select\r\n     * @param {Boolean} reverse Indicates if the range should go backwards (`true`) or not\r\n     *\r\n     * @method setSelectionRange\r\n     * @alias setRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "range": "Range",
                "reverse": "Boolean"
            },
            "described": true
        },
        "setRange": {
            "line": 205,
            "jsDoc": [
                "/**\r\n     * Sets the selection to the provided range.\r\n     * @param {Range} range The range of text to select\r\n     * @param {Boolean} reverse Indicates if the range should go backwards (`true`) or not\r\n     *\r\n     * @method setSelectionRange\r\n     * @alias setRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "range": "Range",
                "reverse": "Boolean"
            },
            "described": true
        },
        "$setSelection": {
            "line": 212,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "anchorRow": "any",
                "anchorColumn": "any",
                "cursorRow": "any",
                "cursorColumn": "any"
            },
            "described": true
        },
        "$moveSelection": {
            "line": 229,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "mover": "any"
            },
            "described": true
        },
        "selectTo": {
            "line": 242,
            "jsDoc": [
                "/**\r\n     * Moves the selection cursor to the indicated row and column.\r\n     * @param {Number} row The row to select to\r\n     * @param {Number} column The column to select to\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "selectToPosition": {
            "line": 252,
            "jsDoc": [
                "/**\r\n     * Moves the selection cursor to the row and column indicated by `pos`.\r\n     * @param {Object} pos An object containing the row and column\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "pos": "Object"
            },
            "described": true
        },
        "moveTo": {
            "line": 264,
            "jsDoc": [
                "/**\r\n     * Moves the selection cursor to the indicated row and column.\r\n     * @param {Number} row The row to select to\r\n     * @param {Number} column The column to select to\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "moveToPosition": {
            "line": 273,
            "jsDoc": [
                "/**\r\n     * Moves the selection cursor to the row and column indicated by `pos`.\r\n     * @param {Object} pos An object containing the row and column\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "pos": "Object"
            },
            "described": true
        },
        "selectUp": {
            "line": 282,
            "jsDoc": [
                "/**\r\n     * Moves the selection up one row.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectDown": {
            "line": 289,
            "jsDoc": [
                "/**\r\n     * Moves the selection down one row.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectRight": {
            "line": 296,
            "jsDoc": [
                "/**\r\n     * Moves the selection right one column.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectLeft": {
            "line": 303,
            "jsDoc": [
                "/**\r\n     * Moves the selection left one column.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectLineStart": {
            "line": 310,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the beginning of the current line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectLineEnd": {
            "line": 317,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the end of the current line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectFileEnd": {
            "line": 324,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the end of the file.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectFileStart": {
            "line": 331,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the start of the file.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectWordRight": {
            "line": 338,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the first word on the right.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectWordLeft": {
            "line": 345,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the first word on the left.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getWordRange": {
            "line": 353,
            "jsDoc": [
                "/**\r\n     * Moves the selection to highlight the entire word.\r\n     * @related EditSession.getWordRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "selectWord": {
            "line": 365,
            "jsDoc": [
                "/**\r\n     * Selects an entire word boundary.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "selectAWord": {
            "line": 373,
            "jsDoc": [
                "/**\r\n     * Selects a word, including its right whitespace.\r\n     * @related EditSession.getAWordRange\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getLineRange": {
            "line": 379,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any",
                "row": "any",
                "excludeLastChar": "any"
            },
            "described": true
        },
        "selectLine": {
            "line": 399,
            "jsDoc": [
                "/**\r\n     * Selects the entire line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorUp": {
            "line": 406,
            "jsDoc": [
                "/**\r\n     * Moves the cursor up one row.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorDown": {
            "line": 413,
            "jsDoc": [
                "/**\r\n     * Moves the cursor down one row.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "wouldMoveIntoSoftTab": {
            "line": 424,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns `true` if moving the character next to the cursor in the specified direction is a soft tab.\r\n     * @param {Object} cursor the current cursor position\r\n     * @param {Number} tabSize the tab size\r\n     * @param {Number} direction 1 for right, -1 for left\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "boolean",
                "cursor": "Object",
                "tabSize": "Number",
                "direction": "Number"
            },
            "described": true
        },
        "moveCursorLeft": {
            "line": 438,
            "jsDoc": [
                "/**\r\n     * Moves the cursor left one column.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorRight": {
            "line": 463,
            "jsDoc": [
                "/**\r\n     * Moves the cursor right one column.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorLineStart": {
            "line": 488,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the start of the line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorLineEnd": {
            "line": 512,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the end of the line.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorFileEnd": {
            "line": 530,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the end of the file.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorFileStart": {
            "line": 539,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the start of the file.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorLongWordRight": {
            "line": 546,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the word on the right.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorLongWordLeft": {
            "line": 591,
            "jsDoc": [
                "/**\r\n    *\r\n    * Moves the cursor to the word on the left.\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$shortWordEndIndex": {
            "line": 636,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "number",
                "rightOfCursor": "any"
            },
            "described": true
        },
        "moveCursorShortWordRight": {
            "line": 672,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "moveCursorShortWordLeft": {
            "line": 699,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "moveCursorWordRight": {
            "line": 725,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorWordLeft": {
            "line": 732,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveCursorBy": {
            "line": 746,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to position indicated by the parameters. Negative numbers move the cursor backwards in the document.\r\n     * @param {Number} rows The number of rows to move by\r\n     * @param {Number} chars The number of characters to move by\r\n     *\r\n     * @related EditSession.documentToScreenPosition\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "rows": "Number",
                "chars": "Number"
            },
            "described": true
        },
        "moveCursorToPosition": {
            "line": 792,
            "jsDoc": [
                "/**\r\n     * Moves the selection to the position indicated by its `row` and `column`.\r\n     * @param {Object} position The position to move to\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "position": "Object"
            },
            "described": true
        },
        "moveCursorTo": {
            "line": 803,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the row and column provided. [If `preventUpdateDesiredColumn` is `true`, then the cursor stays in the same column position as its original point.]{: #preventUpdateBoolDesc}\r\n     * @param {Number} row The row to move to\r\n     * @param {Number} column The column to move to\r\n     * @param {Boolean} keepDesiredColumn [If `true`, the cursor move does not respect the previous column]{: #preventUpdateBool}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number",
                "keepDesiredColumn": "Boolean"
            },
            "described": true
        },
        "moveCursorToScreen": {
            "line": 834,
            "jsDoc": [
                "/**\r\n     * Moves the cursor to the screen position indicated by row and column. {:preventUpdateBoolDesc}\r\n     * @param {Number} row The row to move to\r\n     * @param {Number} column The column to move to\r\n     * @param {Boolean} keepDesiredColumn {:preventUpdateBool}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number",
                "keepDesiredColumn": "Boolean"
            },
            "described": true
        },
        "detach": {
            "line": 840,
            "jsDoc": [
                "/** remove listeners from document**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "fromOrientedRange": {
            "line": 845,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "range": "any"
            },
            "described": true
        },
        "toOrientedRange": {
            "line": 850,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any",
                "range": "any"
            },
            "described": true
        },
        "getRangeOfMovements": {
            "line": 874,
            "jsDoc": [
                "/**\r\n     * Saves the current cursor position and calls `func` that can change the cursor\r\n     * postion. The result is the range of the starting and eventual cursor position.\r\n     * Will reset the cursor position.\r\n     * @param {Function} The callback that should change the cursor position\r\n     * @returns {Range}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "Range",
                "func": "any"
            },
            "described": true
        },
        "toJSON": {
            "line": 887,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "fromJSON": {
            "line": 901,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "void",
                "data": "any"
            },
            "described": true
        },
        "isEqual": {
            "line": 921,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/selection.js",
            "params": {
                "return": "any",
                "data": "any"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 2080,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setCursor": {
            "line": 2090,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setAnchor": {
            "line": 2091,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 2129,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 2130,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 2131,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 2133,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 2162,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 2164,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 2166,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 2168,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 2170,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 2172,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 2174,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 2176,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 2178,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 2180,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 2182,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 2184,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 2186,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 2188,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "MultiSelect": {
        "line": 897,
        "jsDoc": [
            "/** MultiSelect(editor)**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/multi_select.js",
        "described": true
    },
    "Occur": {
        "line": 55,
        "jsDoc": [
            "/**\r\n * @class Occur\r\n *\r\n * Finds all lines matching a search term in the current [[Document\r\n * `Document`]] and displays them instead of the original `Document`. Keeps\r\n * track of the mapping between the occur doc and the original doc.\r\n *\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/occur.js",
        "construct": {
            "line": 55,
            "jsDoc": [
                "/**\r\n * Creates a new `Occur` object.\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {},
            "described": true
        },
        "enter": {
            "line": 72,
            "jsDoc": [
                "/**\r\n     * Enables occur mode. expects that `options.needle` is a search term.\r\n     * This search term is used to filter out all the lines that include it\r\n     * and these are then used as the content of a new [[Document\r\n     * `Document`]]. The current cursor position of editor will be translated\r\n     * so that the cursor is on the matching row/column as it was before.\r\n     * @param {Editor} editor\r\n     * @param {Object} options options.needle should be a String\r\n     * @return {Boolean} Whether occur activation was successful\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "boolean",
                "editor": "Editor",
                "options": "Object"
            },
            "described": true
        },
        "exit": {
            "line": 90,
            "jsDoc": [
                "/**\r\n     * Disables occur mode. Resets the [[Sessions `EditSession`]] [[Document\r\n     * `Document`]] back to the original doc. If options.translatePosition is\r\n     * truthy also maps the [[Editors `Editor`]] cursor position accordingly.\r\n     * @param {Editor} editor\r\n     * @param {Object} options options.translatePosition\r\n     * @return {Boolean} Whether occur deactivation was successful\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "boolean",
                "editor": "Editor",
                "options": "Object"
            },
            "described": true
        },
        "highlight": {
            "line": 99,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "void",
                "sess": "any",
                "regexp": "any"
            },
            "described": true
        },
        "displayOccurContent": {
            "line": 106,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "void",
                "editor": "any",
                "options": "any"
            },
            "described": true
        },
        "displayOriginalContent": {
            "line": 121,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "originalToOccurPosition": {
            "line": 134,
            "jsDoc": [
                "/**\r\n    * Translates the position from the original document to the occur lines in\r\n    * the document or the beginning if the doc {row: 0, column: 0} if not\r\n    * found.\r\n    * @param {EditSession} session The occur session\r\n    * @param {Object} pos The position in the original document\r\n    * @return {Object} position in occur doc\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "{ row: number; column: any; }",
                "session": "EditSession",
                "pos": "Object"
            },
            "described": true
        },
        "occurToOriginalPosition": {
            "line": 152,
            "jsDoc": [
                "/**\r\n    * Translates the position from the occur document to the original document\r\n    * or `pos` if not found.\r\n    * @param {EditSession} session The occur session\r\n    * @param {Object} pos The position in the occur session document\r\n    * @return {Object} position\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "Object",
                "session": "EditSession",
                "pos": "Object"
            },
            "described": true
        },
        "matchingLines": {
            "line": 159,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/occur.js",
            "params": {
                "return": "any",
                "session": "any",
                "options": "any"
            },
            "described": true
        },
        "described": true
    },
    "PlaceHolder": {
        "line": 53,
        "jsDoc": [
            "/**\r\n * @class PlaceHolder\r\n *\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/placeholder.js",
        "construct": {
            "line": 53,
            "jsDoc": [
                "/**\r\n * - session (Document): The document to associate with the anchor\r\n * - length (Number): The starting row position\r\n * - pos (Number): The starting column position\r\n * - others (String):\r\n * - mainClass (String):\r\n * - othersClass (String):\r\n * \r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {},
            "described": true
        },
        "setup": {
            "line": 89,
            "jsDoc": [
                "/**\r\n     * PlaceHolder.setup()\r\n     *\r\n     * TODO\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "showOtherMarkers": {
            "line": 119,
            "jsDoc": [
                "/**\r\n     * PlaceHolder.showOtherMarkers()\r\n     *\r\n     * TODO\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "hideOtherMarkers": {
            "line": 135,
            "jsDoc": [
                "/**\r\n     * PlaceHolder.hideOtherMarkers()\r\n     *\r\n     * Hides all over markers in the [[EditSession `EditSession`]] that are not the currently selected one.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onUpdate": {
            "line": 149,
            "jsDoc": [
                "/**\r\n     * PlaceHolder@onUpdate(e)\r\n     * \r\n     * Emitted when the place holder updates.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "any",
                "delta": "any"
            },
            "described": true
        },
        "updateAnchors": {
            "line": 186,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "updateMarkers": {
            "line": 193,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onCursorChange": {
            "line": 214,
            "jsDoc": [
                "/**\r\n     * PlaceHolder@onCursorChange(e)\r\n     * \r\n     * Emitted when the cursor changes.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void",
                "event": "any"
            },
            "described": true
        },
        "detach": {
            "line": 232,
            "jsDoc": [
                "/**\r\n     * PlaceHolder.detach()\r\n     * \r\n     * TODO\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "cancel": {
            "line": 247,
            "jsDoc": [
                "/**\r\n     * PlaceHolder.cancel()\r\n     * \r\n     * TODO\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/placeholder.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "Range": {
        "line": 50,
        "jsDoc": [
            "/**\r\n * This object is used in various places to indicate a region within the editor. To better visualize how this works, imagine a rectangle. Each quadrant of the rectangle is analogous to a range, as ranges contain a starting row and starting column, and an ending row, and ending column.\r\n * @class Range\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/range.js",
        "construct": {
            "line": 50,
            "jsDoc": [
                "/**\r\n * Creates a new `Range` object with the given starting and ending row and column points.\r\n * @param {Number} startRow The starting row\r\n * @param {Number} startColumn The starting column\r\n * @param {Number} endRow The ending row\r\n * @param {Number} endColumn The ending column\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "startRow": "Number",
                "startColumn": "Number",
                "endRow": "Number",
                "endColumn": "Number"
            },
            "described": true
        },
        "isEqual": {
            "line": 69,
            "jsDoc": [
                "/**\r\n     * Returns `true` if and only if the starting row and column, and ending row and column, are equivalent to those given by `range`.\r\n     * @param {Range} range A range to check against\r\n     *\r\n     * @return {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "range": "Range"
            },
            "described": true
        },
        "toString": {
            "line": 84,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns a string containing the range's row and column information, given like this:\r\n     * ```\r\n     *    [start.row/start.column] -> [end.row/end.column]\r\n     * ```\r\n     * @return {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "contains": {
            "line": 102,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns `true` if the `row` and `column` provided are within the given range. This can better be expressed as returning `true` if:\r\n     * ```javascript\r\n     *    this.start.row <= row <= this.end.row &&\r\n     *    this.start.column <= column <= this.end.column\r\n     * ```\r\n     * @param {Number} row A row to check for\r\n     * @param {Number} column A column to check for\r\n     * @returns {Boolean}\r\n     * @related Range.compare\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "compareRange": {
            "line": 120,
            "jsDoc": [
                "/**\r\n     * Compares `this` range (A) with another range (B).\r\n     * @param {Range} range A range to compare with\r\n     *\r\n     * @related Range.compare\r\n     * @returns {Number} This method returns one of the following numbers:<br/>\r\n     * <br/>\r\n     * * `-2`: (B) is in front of (A), and doesn't intersect with (A)<br/>\r\n     * * `-1`: (B) begins before (A) but ends inside of (A)<br/>\r\n     * * `0`: (B) is completely inside of (A) OR (A) is completely inside of (B)<br/>\r\n     * * `+1`: (B) begins inside of (A) but ends outside of (A)<br/>\r\n     * * `+2`: (B) is after (A) and doesn't intersect with (A)<br/>\r\n     * * `42`: FTW state: (B) ends in (A) but starts outside of (A)\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "0 | 2 | 1 | -2 | -1 | 42",
                "range": "Range"
            },
            "described": true
        },
        "comparePoint": {
            "line": 168,
            "jsDoc": [
                "/**\r\n     * Checks the row and column points of `p` with the row and column points of the calling range.\r\n     *\r\n     * @param {Range} p A point to compare with\r\n     *\r\n     * @related Range.compare\r\n     * @returns {Number} This method returns one of the following numbers:<br/>\r\n     * * `0` if the two points are exactly equal<br/>\r\n     * * `-1` if `p.row` is less then the calling range<br/>\r\n     * * `1` if `p.row` is greater than the calling range<br/>\r\n     * <br/>\r\n     * If the starting row of the calling range is equal to `p.row`, and:<br/>\r\n     * * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\r\n     * * Otherwise, it returns -1<br/>\r\n     *<br/>\r\n     * If the ending row of the calling range is equal to `p.row`, and:<br/>\r\n     * * `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>\r\n     * * Otherwise, it returns 1<br/>\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Number",
                "p": "Range"
            },
            "described": true
        },
        "containsRange": {
            "line": 179,
            "jsDoc": [
                "/**\r\n     * Checks the start and end points of `range` and compares them to the calling range. Returns `true` if the `range` is contained within the caller's range.\r\n     * @param {Range} range A range to compare with\r\n     *\r\n     * @returns {Boolean}\r\n     * @related Range.comparePoint\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "range": "Range"
            },
            "described": true
        },
        "intersects": {
            "line": 189,
            "jsDoc": [
                "/**\r\n     * Returns `true` if passed in `range` intersects with the one calling this method.\r\n     * @param {Range} range A range to compare with\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "range": "Range"
            },
            "described": true
        },
        "isEnd": {
            "line": 201,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the caller's ending row point is the same as `row`, and if the caller's ending column is the same as `column`.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "isStart": {
            "line": 212,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the caller's starting row point is the same as `row`, and if the caller's starting column is the same as `column`.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "setStart": {
            "line": 222,
            "jsDoc": [
                "/**\r\n     * Sets the starting row and column for the range.\r\n     * @param {Number} row A row point to set\r\n     * @param {Number} column A column point to set\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "setEnd": {
            "line": 238,
            "jsDoc": [
                "/**\r\n     * Sets the starting row and column for the range.\r\n     * @param {Number} row A row point to set\r\n     * @param {Number} column A column point to set\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "void",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "inside": {
            "line": 257,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the `row` and `column` are within the given range.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     *\r\n     * @returns {Boolean}\r\n     * @related Range.compare\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "insideStart": {
            "line": 276,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the `row` and `column` are within the given range's starting points.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     * @returns {Boolean}\r\n     * @related Range.compare\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "insideEnd": {
            "line": 296,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the `row` and `column` are within the given range's ending points.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     * @returns {Boolean}\r\n     * @related Range.compare\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "compare": {
            "line": 326,
            "jsDoc": [
                "/**\r\n     * Checks the row and column points with the row and column points of the calling range.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     *\r\n     * @returns {Number} This method returns one of the following numbers:<br/>\r\n     * `0` if the two points are exactly equal <br/>\r\n     * `-1` if `p.row` is less then the calling range <br/>\r\n     * `1` if `p.row` is greater than the calling range <br/>\r\n     *  <br/>\r\n     * If the starting row of the calling range is equal to `p.row`, and: <br/>\r\n     * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\r\n     * Otherwise, it returns -1<br/>\r\n     * <br/>\r\n     * If the ending row of the calling range is equal to `p.row`, and: <br/>\r\n     * `p.column` is less than or equal to the calling range's ending column, this returns `0` <br/>\r\n     * Otherwise, it returns 1\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "0 | 1 | -1",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "compareStart": {
            "line": 368,
            "jsDoc": [
                "/**\r\n     * Checks the row and column points with the row and column points of the calling range.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     * @returns {Number} This method returns one of the following numbers:<br/>\r\n     * <br/>\r\n     * `0` if the two points are exactly equal<br/>\r\n     * `-1` if `p.row` is less then the calling range<br/>\r\n     * `1` if `p.row` is greater than the calling range, or if `isStart` is `true`.<br/>\r\n     * <br/>\r\n     * If the starting row of the calling range is equal to `p.row`, and:<br/>\r\n     * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\r\n     * Otherwise, it returns -1<br/>\r\n     * <br/>\r\n     * If the ending row of the calling range is equal to `p.row`, and:<br/>\r\n     * `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>\r\n     * Otherwise, it returns 1\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Number",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "compareEnd": {
            "line": 395,
            "jsDoc": [
                "/**\r\n     * Checks the row and column points with the row and column points of the calling range.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     *\r\n     * @returns {Number} This method returns one of the following numbers:<br/>\r\n     * `0` if the two points are exactly equal<br/>\r\n     * `-1` if `p.row` is less then the calling range<br/>\r\n     * `1` if `p.row` is greater than the calling range, or if `isEnd` is `true.<br/>\r\n     * <br/>\r\n     * If the starting row of the calling range is equal to `p.row`, and:<br/>\r\n     * `p.column` is greater than or equal to the calling range's starting column, this returns `0`<br/>\r\n     * Otherwise, it returns -1<br/>\r\n     *<br/>\r\n     * If the ending row of the calling range is equal to `p.row`, and:<br/>\r\n     * `p.column` is less than or equal to the calling range's ending column, this returns `0`<br/>\r\n     * Otherwise, it returns 1\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Number",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "compareInside": {
            "line": 416,
            "jsDoc": [
                "/**\r\n     * Checks the row and column points with the row and column points of the calling range.\r\n     * @param {Number} row A row point to compare with\r\n     * @param {Number} column A column point to compare with\r\n     *\r\n     *\r\n     * @returns {Number} This method returns one of the following numbers:<br/>\r\n     * * `1` if the ending row of the calling range is equal to `row`, and the ending column of the calling range is equal to `column`<br/>\r\n     * * `-1` if the starting row of the calling range is equal to `row`, and the starting column of the calling range is equal to `column`<br/>\r\n     * <br/>\r\n     * Otherwise, it returns the value after calling [[Range.compare `compare()`]].\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Number",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "clipRows": {
            "line": 434,
            "jsDoc": [
                "/**\r\n     * Returns the part of the current `Range` that occurs within the boundaries of `firstRow` and `lastRow` as a new `Range` object.\r\n     * @param {Number} firstRow The starting row\r\n     * @param {Number} lastRow The ending row\r\n     *\r\n     *\r\n     * @returns {Range}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Range",
                "firstRow": "Number",
                "lastRow": "Number"
            },
            "described": true
        },
        "extend": {
            "line": 456,
            "jsDoc": [
                "/**\r\n     * Changes the row and column points for the calling range for both the starting and ending points.\r\n     * @param {Number} row A new row to extend to\r\n     * @param {Number} column A new column to extend to\r\n     *\r\n     *\r\n     * @returns {Range} The original range with the new row\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Range",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "isEmpty": {
            "line": 469,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "isMultiLine": {
            "line": 478,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns `true` if the range spans across multiple lines.\r\n     * @returns {Boolean}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "clone": {
            "line": 487,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns a duplicate of the calling range.\r\n     * @returns {Range}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Range"
            },
            "described": true
        },
        "collapseRows": {
            "line": 496,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns a range containing the starting and ending rows of the original range, but with a column value of `0`.\r\n     * @returns {Range}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Range"
            },
            "described": true
        },
        "toScreenRange": {
            "line": 510,
            "jsDoc": [
                "/**\r\n     * Given the current `Range`, this function converts those starting and ending points into screen positions, and then returns a new `Range` object.\r\n     * @param {EditSession} session The `EditSession` to retrieve coordinates from\r\n     *\r\n     *\r\n     * @returns {Range}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Range",
                "session": "EditSession"
            },
            "described": true
        },
        "moveBy": {
            "line": 522,
            "jsDoc": [
                "/** experimental **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "void",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "fromPoints": {
            "line": 538,
            "jsDoc": [
                "/**\r\n * Creates and returns a new `Range` based on the row and column of the given parameters.\r\n * @param {Range} start A starting point to use\r\n * @param {Range} end An ending point to use\r\n *\r\n * @returns {Range}\r\n**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "Range",
                "start": "Range",
                "end": "Range"
            },
            "described": true
        },
        "comparePoints": {
            "line": 543,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range.js",
            "params": {
                "return": "number",
                "p1": "any",
                "p2": "any"
            },
            "described": true
        },
        "described": true,
        "start_prop": {
            "line": 1279,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "end_prop": {
            "line": 1280,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "RangeList": {
        "line": 36,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/range_list.js",
        "pointIndex": {
            "line": 44,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "any",
                "pos": "any",
                "excludeEdges": "any",
                "startIndex": "any"
            },
            "described": true
        },
        "add": {
            "line": 63,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "any",
                "range": "any"
            },
            "described": true
        },
        "addList": {
            "line": 78,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "{}",
                "list": "any"
            },
            "described": true
        },
        "substractPoint": {
            "line": 86,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "any",
                "pos": "any"
            },
            "described": true
        },
        "merge": {
            "line": 94,
            "jsDoc": [
                "/** merge overlapping ranges**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "{}"
            },
            "described": true
        },
        "contains": {
            "line": 129,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "boolean",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "containsPoint": {
            "line": 133,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "boolean",
                "pos": "any"
            },
            "described": true
        },
        "rangeAtPoint": {
            "line": 137,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "any",
                "pos": "any"
            },
            "described": true
        },
        "clipRows": {
            "line": 144,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "{}",
                "startRow": "any",
                "endRow": "any"
            },
            "described": true
        },
        "removeAll": {
            "line": 163,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "attach": {
            "line": 167,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "detach": {
            "line": 177,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$onChange": {
            "line": 184,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/range_list.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "described": true
    },
    "RenderLoop": {
        "line": 44,
        "jsDoc": [
            "/** \r\n *\r\n *\r\n * Batches changes (that force something to be redrawn) in the background.\r\n * @class RenderLoop\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/renderloop.js",
        "schedule": {
            "line": 72,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/renderloop.js",
            "params": {
                "return": "void",
                "change": "any"
            },
            "described": true
        },
        "clear": {
            "line": 80,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/renderloop.js",
            "params": {
                "return": "any",
                "change": "any"
            },
            "described": true
        },
        "described": true
    },
    "ScrollBar": {
        "line": 54,
        "jsDoc": [
            "/**\r\n * An abstract class representing a native scrollbar control.\r\n * @class ScrollBar\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
        "construct": {
            "line": 54,
            "jsDoc": [
                "/**\r\n * Creates a new `ScrollBar`. `parent` is the owner of the scroll bar.\r\n * @param {DOMElement} parent A DOM element \r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "parent": "DOMElement"
            },
            "described": true
        },
        "setVisible": {
            "line": 76,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "isVisible": "any"
            },
            "described": true
        },
        "described": true
    },
    "VScrollBar": {
        "line": 95,
        "jsDoc": [
            "/**\r\n * Represents a vertical scroll bar.\r\n * @class VScrollBar\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
        "construct": {
            "line": 95,
            "jsDoc": [
                "/**\r\n * Creates a new `VScrollBar`. `parent` is the owner of the scroll bar.\r\n * @param {DOMElement} parent A DOM element\r\n * @param {Object} renderer An editor renderer\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "parent": "DOMElement",
                "renderer": "Object"
            },
            "described": true
        },
        "onScroll": {
            "line": 123,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scroll_event": {
            "line": 118,
            "jsDoc": [
                "/**\r\n     * Emitted when the scroll bar, well, scrolls.\r\n     * @event scroll\r\n     * @param {Object} e Contains one property, `\"data\"`, which indicates the current scroll top position\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "getWidth": {
            "line": 139,
            "jsDoc": [
                "/**\r\n     * Returns the width of the scroll bar.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setHeight": {
            "line": 147,
            "jsDoc": [
                "/**\r\n     * Sets the height of the scroll bar, in pixels.\r\n     * @param {Number} height The new height\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "height": "Number"
            },
            "described": true
        },
        "setScrollHeight": {
            "line": 156,
            "jsDoc": [
                "/**\r\n     * Sets the inner height of the scroll bar, in pixels.\r\n     * @param {Number} height The new inner height\r\n     * @deprecated Use setScrollHeight instead\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "height": "Number"
            },
            "described": true
        },
        "setInnerHeight": {
            "line": 156,
            "jsDoc": [
                "/**\r\n     * Sets the inner height of the scroll bar, in pixels.\r\n     * @param {Number} height The new inner height\r\n     * @deprecated Use setScrollHeight instead\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "height": "Number"
            },
            "described": true
        },
        "setScrollTop": {
            "line": 176,
            "jsDoc": [
                "/**\r\n     * Sets the scroll top of the scroll bar.\r\n     * @param {Number} scrollTop The new scroll top\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "scrollTop": "Number"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 238,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "HScrollBar": {
        "line": 200,
        "jsDoc": [
            "/**\r\n * Represents a horisontal scroll bar.\r\n * @class HScrollBar\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
        "construct": {
            "line": 200,
            "jsDoc": [
                "/**\r\n * Creates a new `HScrollBar`. `parent` is the owner of the scroll bar.\r\n * @param {DOMElement} parent A DOM element\r\n * @param {Object} renderer An editor renderer\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "parent": "DOMElement",
                "renderer": "Object"
            },
            "described": true
        },
        "onScroll": {
            "line": 225,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scroll_event": {
            "line": 220,
            "jsDoc": [
                "/**\r\n     * Emitted when the scroll bar, well, scrolls.\r\n     * @event scroll\r\n     * @param {Object} e Contains one property, `\"data\"`, which indicates the current scroll left position\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "e": "Object"
            },
            "described": true
        },
        "getHeight": {
            "line": 237,
            "jsDoc": [
                "/**\r\n     * Returns the height of the scroll bar.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setWidth": {
            "line": 245,
            "jsDoc": [
                "/**\r\n     * Sets the width of the scroll bar, in pixels.\r\n     * @param {Number} width The new width\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "width": "Number"
            },
            "described": true
        },
        "setInnerWidth": {
            "line": 254,
            "jsDoc": [
                "/**\r\n     * Sets the inner width of the scroll bar, in pixels.\r\n     * @param {Number} width The new inner width\r\n     * @deprecated Use setScrollWidth instead\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "width": "Number"
            },
            "described": true
        },
        "setScrollWidth": {
            "line": 262,
            "jsDoc": [
                "/**\r\n     * Sets the scroll width of the scroll bar, in pixels.\r\n     * @param {Number} width The new scroll width\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "width": "Number"
            },
            "described": true
        },
        "setScrollLeft": {
            "line": 270,
            "jsDoc": [
                "/**\r\n     * Sets the scroll left of the scroll bar.\r\n     * @param {Number} scrollTop The new scroll left\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/scrollbar.js",
            "params": {
                "return": "void",
                "scrollLeft": "any"
            },
            "described": true
        },
        "described": true,
        "on": {
            "line": 227,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Search": {
        "line": 63,
        "jsDoc": [
            "/**\r\n * @class Search\r\n *\r\n * A class designed to handle all sorts of text searches within a [[Document `Document`]].\r\n *\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/search.js",
        "construct": {
            "line": 63,
            "jsDoc": [
                "/**\r\n * \r\n *\r\n * Creates a new `Search` object. The following search options are available:\r\n *\r\n * - `needle`: The string or regular expression you're looking for\r\n * - `backwards`: Whether to search backwards from where cursor currently is. Defaults to `false`.\r\n * - `wrap`: Whether to wrap the search back to the beginning when it hits the end. Defaults to `false`.\r\n * - `caseSensitive`: Whether the search ought to be case-sensitive. Defaults to `false`.\r\n * - `wholeWord`: Whether the search matches only on whole words. Defaults to `false`.\r\n * - `range`: The [[Range]] to search within. Set this to `null` for the whole document\r\n * - `regExp`: Whether the search is a regular expression or not. Defaults to `false`.\r\n * - `start`: The starting [[Range]] or cursor position to begin the search\r\n * - `skipCurrent`: Whether or not to include the current line in the search. Default to `false`.\r\n * \r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {},
            "described": true
        },
        "set": {
            "line": 76,
            "jsDoc": [
                "/**\r\n     * Sets the search options via the `options` parameter.\r\n     * @param {Object} options An object containing all the new search properties\r\n     *\r\n     * \r\n     * @returns {Search}\r\n     * @chainable\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "Search",
                "options": "Object"
            },
            "described": true
        },
        "getOptions": {
            "line": 85,
            "jsDoc": [
                "/**\r\n     * [Returns an object containing all the search options.]{: #Search.getOptions}\r\n     * @returns {Object}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "Object"
            },
            "described": true
        },
        "setOptions": {
            "line": 94,
            "jsDoc": [
                "/**\r\n     * Sets the search options via the `options` parameter.\r\n     * @param {Object} An object containing all the search propertie\r\n     * @related Search.set\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "void",
                "options": "any"
            },
            "described": true
        },
        "find": {
            "line": 104,
            "jsDoc": [
                "/**\r\n     * Searches for `options.needle`. If found, this method returns the [[Range `Range`]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.\r\n     * @param {EditSession} session The session to search with\r\n     *\r\n     * \r\n     * @returns {Range}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "Range",
                "session": "EditSession"
            },
            "described": true
        },
        "findAll": {
            "line": 133,
            "jsDoc": [
                "/**\r\n     * Searches for all occurrances `options.needle`. If found, this method returns an array of [[Range `Range`s]] where the text first occurs. If `options.backwards` is `true`, the search goes backwards in the session.\r\n     * @param {EditSession} session The session to search with\r\n     *\r\n     * \r\n     * @returns {[Range]}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "[Range]",
                "session": "EditSession"
            },
            "described": true
        },
        "replace": {
            "line": 211,
            "jsDoc": [
                "/**\r\n     * Searches for `options.needle` in `input`, and, if found, replaces it with `replacement`.\r\n     * @param {String} input The text to search in\r\n     * @param {String} replacement The replacing text\r\n     * + (String): If `options.regExp` is `true`, this function returns `input` with the replacement already made. Otherwise, this function just returns `replacement`.<br/>\r\n     * If `options.needle` was not found, this function returns `null`.\r\n     *\r\n     * \r\n     * @returns {String}\r\n    **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "String",
                "input": "String",
                "replacement": "String"
            },
            "described": true
        },
        "$assembleRegExp": {
            "line": 241,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "any",
                "options": "any",
                "$disableFakeMultiline": "any"
            },
            "described": true
        },
        "$assembleMultilineRegExp": {
            "line": 270,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "{}",
                "needle": "any",
                "modifier": "any"
            },
            "described": true
        },
        "$matchIterator": {
            "line": 281,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/search.js",
            "params": {
                "return": "false | { forEach: (callback: any) => void; }",
                "session": "any",
                "options": "any"
            },
            "described": true
        },
        "described": true
    },
    "SearchHighlight": {
        "line": 38,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/search_highlight.js",
        "setRegexp": {
            "line": 48,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/search_highlight.js",
            "params": {
                "return": "void",
                "regExp": "any"
            },
            "described": true
        },
        "update": {
            "line": 55,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/search_highlight.js",
            "params": {
                "return": "void",
                "html": "any",
                "markerLayer": "any",
                "session": "any",
                "config": "any"
            },
            "described": true
        },
        "described": true
    },
    "SnippetManager": {
        "line": 121,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/snippets.js",
        "getTokenizer": {
            "line": 129,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "createTokenizer": {
            "line": 133,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "tokenizeTmSnippet": {
            "line": 254,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "str": "any",
                "startState": "any"
            },
            "described": true
        },
        "getVariableValue": {
            "line": 260,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "editor": "any",
                "name": "any",
                "indentation": "any"
            },
            "described": true
        },
        "tmStrFormat": {
            "line": 278,
            "jsDoc": [
                "/** returns string formatted according to http://manual.macromates.com/en/regular_expressions#replacement_string_syntax_format_strings**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "str": "any",
                "ch": "any",
                "editor": "any"
            },
            "described": true
        },
        "tmFormatFunction": {
            "line": 318,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "str": "any",
                "ch": "any",
                "editor": "any"
            },
            "described": true
        },
        "resolveVariables": {
            "line": 326,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "{}",
                "snippet": "any",
                "editor": "any"
            },
            "described": true
        },
        "insertSnippetForSelection": {
            "line": 383,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "editor": "any",
                "snippetText": "any"
            },
            "described": true
        },
        "insertSnippet": {
            "line": 508,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "editor": "any",
                "snippetText": "any"
            },
            "described": true
        },
        "$getScope": {
            "line": 521,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "editor": "any"
            },
            "described": true
        },
        "getActiveScopes": {
            "line": 546,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "{}",
                "editor": "any"
            },
            "described": true
        },
        "expandWithTab": {
            "line": 557,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "editor": "any",
                "options": "any"
            },
            "described": true
        },
        "expandSnippetForSelection": {
            "line": 567,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "boolean",
                "editor": "any",
                "options": "any"
            },
            "described": true
        },
        "findMatchingSnippet": {
            "line": 598,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "snippetList": "any",
                "before": "any",
                "after": "any"
            },
            "described": true
        },
        "register": {
            "line": 618,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "snippets": "any",
                "scope": "any"
            },
            "described": true
        },
        "unregister": {
            "line": 697,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "snippets": "any",
                "scope": "any"
            },
            "described": true
        },
        "parseSnippetFile": {
            "line": 716,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "{}",
                "str": "any"
            },
            "described": true
        },
        "getSnippetByName": {
            "line": 750,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "any",
                "name": "any",
                "editor": "any"
            },
            "described": true
        },
        "described": true
    },
    "TabstopToken": {
        "line": 134,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/snippets.js",
        "described": true
    },
    "TabstopManager": {
        "line": 765,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/snippets.js",
        "attach": {
            "line": 776,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "editor": "any"
            },
            "described": true
        },
        "detach": {
            "line": 790,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChange": {
            "line": 804,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "updateLinkedFields": {
            "line": 830,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onAfterExec": {
            "line": 847,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "onChangeSelection": {
            "line": 851,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeSession": {
            "line": 867,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "tabNext": {
            "line": 870,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "dir": "any"
            },
            "described": true
        },
        "selectTabstop": {
            "line": 880,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "index": "any"
            },
            "described": true
        },
        "addTabstops": {
            "line": 909,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "tabstops": "any",
                "start": "any",
                "end": "any"
            },
            "described": true
        },
        "addTabstopMarkers": {
            "line": 967,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "ts": "any"
            },
            "described": true
        },
        "removeTabstopMarkers": {
            "line": 974,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "ts": "any"
            },
            "described": true
        },
        "removeRange": {
            "line": 981,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/snippets.js",
            "params": {
                "return": "void",
                "range": "any"
            },
            "described": true
        },
        "described": true
    },
    "Split": {
        "line": 48,
        "jsDoc": [
            "/** \r\n * @class Split\r\n *\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/split.js",
        "$createEditor": {
            "line": 72,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setSplits": {
            "line": 88,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void",
                "splits": "any"
            },
            "described": true
        },
        "getSplits": {
            "line": 122,
            "jsDoc": [
                "/**\r\n     * \r\n     * Returns the number of splits.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getEditor": {
            "line": 132,
            "jsDoc": [
                "/**\r\n     * @param {Number} idx The index of the editor you want\r\n     *\r\n     * Returns the editor identified by the index `idx`.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "any",
                "idx": "Number"
            },
            "described": true
        },
        "getCurrentEditor": {
            "line": 141,
            "jsDoc": [
                "/**\r\n     * \r\n     * Returns the current editor.\r\n     * @returns {Editor}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "Editor"
            },
            "described": true
        },
        "focus": {
            "line": 149,
            "jsDoc": [
                "/** \r\n     * Focuses the current editor.\r\n     * @related Editor.focus\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "blur": {
            "line": 157,
            "jsDoc": [
                "/** \r\n     * Blurs the current editor.\r\n     * @related Editor.blur\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setTheme": {
            "line": 168,
            "jsDoc": [
                "/** \r\n     * \r\n     * @param {String} theme The name of the theme to set\r\n     * \r\n     * Sets a theme for each of the available editors.\r\n     * @related Editor.setTheme\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void",
                "theme": "String"
            },
            "described": true
        },
        "setKeyboardHandler": {
            "line": 181,
            "jsDoc": [
                "/** \r\n     * \r\n     * @param {String} keybinding \r\n     * \r\n     * Sets the keyboard handler for the editor.\r\n     * @related editor.setKeyboardHandler\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void",
                "keybinding": "String"
            },
            "described": true
        },
        "forEach": {
            "line": 195,
            "jsDoc": [
                "/** \r\n     * \r\n     * @param {Function} callback A callback function to execute\r\n     * @param {String} scope The default scope for the callback\r\n     * \r\n     * Executes `callback` on all of the available editors. \r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void",
                "callback": "Function",
                "scope": "String"
            },
            "described": true
        },
        "setFontSize": {
            "line": 207,
            "jsDoc": [
                "/** \r\n     * @param {Number} size The new font size\r\n     * \r\n     * Sets the font size, in pixels, for all the available editors.\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void",
                "size": "Number"
            },
            "described": true
        },
        "$cloneSession": {
            "line": 214,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "any",
                "session": "any"
            },
            "described": true
        },
        "setSession": {
            "line": 242,
            "jsDoc": [
                "/** \r\n     * \r\n     * @param {EditSession} session The new edit session\r\n     * @param {Number} idx The editor's index you're interested in\r\n     * \r\n     * Sets a new [[EditSession `EditSession`]] for the indicated editor.\r\n     * @related Editor.setSession\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "any",
                "session": "EditSession",
                "idx": "Number"
            },
            "described": true
        },
        "getOrientation": {
            "line": 273,
            "jsDoc": [
                "/** \r\n     * \r\n     * Returns the orientation.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setOrientation": {
            "line": 284,
            "jsDoc": [
                "/** \r\n     * \r\n     * Sets the orientation.\r\n     * @param {Number} orientation The new orientation value\r\n     *\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void",
                "orientation": "Number"
            },
            "described": true
        },
        "resize": {
            "line": 295,
            "jsDoc": [
                "/**  \r\n     * Resizes the editor.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/split.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "VirtualRenderer": {
        "line": 67,
        "jsDoc": [
            "/**\r\n * The class that is responsible for drawing everything you see on the screen!\r\n * @related editor.renderer \r\n * @class VirtualRenderer\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
        "construct": {
            "line": 67,
            "jsDoc": [
                "/**\r\n * Constructs a new `VirtualRenderer` within the `container` specified, applying the given `theme`.\r\n * @param {DOMElement} container The root element of the editor\r\n * @param {String} theme The starting theme\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "container": "DOMElement",
                "theme": "String"
            },
            "described": true
        },
        "mock": {
            "line": 93,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/all_browser.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "updateCharacterSize": {
            "line": 224,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setSession": {
            "line": 243,
            "jsDoc": [
                "/**\r\n     *\r\n     * Associates the renderer with an [[EditSession `EditSession`]].\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "updateLines": {
            "line": 274,
            "jsDoc": [
                "/**\r\n     * Triggers a partial update of the text, from the range given by the two parameters.\r\n     * @param {Number} firstRow The first row to update\r\n     * @param {Number} lastRow The last row to update\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "firstRow": "Number",
                "lastRow": "Number",
                "force": "any"
            },
            "described": true
        },
        "onChangeNewLineMode": {
            "line": 307,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeTabSize": {
            "line": 313,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateText": {
            "line": 321,
            "jsDoc": [
                "/**\r\n     * Triggers a full update of the text, for all the rows.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateFull": {
            "line": 330,
            "jsDoc": [
                "/**\r\n     * Triggers a full update of all the layers, for all the rows.\r\n     * @param {Boolean} force If `true`, forces the changes through\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "force": "Boolean"
            },
            "described": true
        },
        "updateFontSize": {
            "line": 340,
            "jsDoc": [
                "/**\r\n     * Updates the font size.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$updateSizeAsync": {
            "line": 345,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onResize": {
            "line": 359,
            "jsDoc": [
                "/**\r\n     * [Triggers a resize of the editor.]{: #VirtualRenderer.onResize}\r\n     * @param {Boolean} force If `true`, recomputes the size, even if the height and width haven't changed\r\n     * @param {Number} gutterWidth The width of the gutter in pixels\r\n     * @param {Number} width The width of the editor in pixels\r\n     * @param {Number} height The hiehgt of the editor, in pixels\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number",
                "force": "Boolean",
                "gutterWidth": "Number",
                "width": "Number",
                "height": "Number"
            },
            "described": true
        },
        "$updateCachedSize": {
            "line": 394,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number",
                "force": "any",
                "gutterWidth": "any",
                "width": "any",
                "height": "any"
            },
            "described": true
        },
        "onGutterResize": {
            "line": 452,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "width": "any"
            },
            "described": true
        },
        "adjustWrapLimit": {
            "line": 469,
            "jsDoc": [
                "/**\r\n     * Adjusts the wrap limit, which is the number of characters that can fit within the width of the edit area on screen.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setAnimatedScroll": {
            "line": 480,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to have an animated scroll or not.\r\n     * @param {Boolean} shouldAnimate Set to `true` to show animated scrolls\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "shouldAnimate": "Boolean"
            },
            "described": true
        },
        "getAnimatedScroll": {
            "line": 488,
            "jsDoc": [
                "/**\r\n     * Returns whether an animated scroll happens or not.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setShowInvisibles": {
            "line": 497,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to show invisible characters or not.\r\n     * @param {Boolean} showInvisibles Set to `true` to show invisibles\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "showInvisibles": "Boolean"
            },
            "described": true
        },
        "getShowInvisibles": {
            "line": 506,
            "jsDoc": [
                "/**\r\n     * Returns whether invisible characters are being shown or not.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "getDisplayIndentGuides": {
            "line": 509,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setDisplayIndentGuides": {
            "line": 513,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "display": "any"
            },
            "described": true
        },
        "setShowPrintMargin": {
            "line": 522,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to show the print margin or not.\r\n     * @param {Boolean} showPrintMargin Set to `true` to show the print margin\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "showPrintMargin": "Boolean"
            },
            "described": true
        },
        "getShowPrintMargin": {
            "line": 530,
            "jsDoc": [
                "/**\r\n     * Returns whether the print margin is being shown or not.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setPrintMarginColumn": {
            "line": 538,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to show the print margin column or not.\r\n     * @param {Boolean} showPrintMargin Set to `true` to show the print margin column\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "showPrintMargin": "Boolean"
            },
            "described": true
        },
        "getPrintMarginColumn": {
            "line": 546,
            "jsDoc": [
                "/**\r\n     * Returns whether the print margin column is being shown or not.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "getShowGutter": {
            "line": 554,
            "jsDoc": [
                "/**\r\n     * Returns `true` if the gutter is being shown.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setShowGutter": {
            "line": 563,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to show the gutter or not.\r\n     * @param {Boolean} show Set to `true` to show the gutter\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any",
                "show": "Boolean"
            },
            "described": true
        },
        "getFadeFoldWidgets": {
            "line": 567,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "setFadeFoldWidgets": {
            "line": 571,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "show": "any"
            },
            "described": true
        },
        "setHighlightGutterLine": {
            "line": 575,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "shouldHighlight": "any"
            },
            "described": true
        },
        "getHighlightGutterLine": {
            "line": 579,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$updatePrintMargin": {
            "line": 583,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getContainerElement": {
            "line": 609,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the root element containing this renderer.\r\n     * @returns {DOMElement}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "DOMElement"
            },
            "described": true
        },
        "getMouseEventTarget": {
            "line": 618,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the element that the mouse events are attached to\r\n     * @returns {DOMElement}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "DOMElement"
            },
            "described": true
        },
        "getTextAreaContainer": {
            "line": 627,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the element to which the hidden text area is added.\r\n     * @returns {DOMElement}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "DOMElement"
            },
            "described": true
        },
        "$moveTextAreaToCursor": {
            "line": 633,
            "jsDoc": [
                "/** move text input over the cursor**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getFirstVisibleRow": {
            "line": 688,
            "jsDoc": [
                "/**\r\n     * [Returns the index of the first visible row.]{: #VirtualRenderer.getFirstVisibleRow}\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getFirstFullyVisibleRow": {
            "line": 697,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the index of the first fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getLastFullyVisibleRow": {
            "line": 706,
            "jsDoc": [
                "/**\r\n     *\r\n     * Returns the index of the last fully visible row. \"Fully\" here means that the characters in the row are not truncated; that the top and the bottom of the row are on the screen.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getLastVisibleRow": {
            "line": 720,
            "jsDoc": [
                "/**\r\n     *\r\n     * [Returns the index of the last visible row.]{: #VirtualRenderer.getLastVisibleRow}\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "setPadding": {
            "line": 731,
            "jsDoc": [
                "/**\r\n     * Sets the padding for all the layers.\r\n     * @param {Number} padding A new padding value (in pixels)\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "padding": "Number"
            },
            "described": true
        },
        "setScrollMargin": {
            "line": 741,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "top": "any",
                "bottom": "any",
                "left": "any",
                "right": "any"
            },
            "described": true
        },
        "setMargin": {
            "line": 754,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "top": "any",
                "bottom": "any",
                "left": "any",
                "right": "any"
            },
            "described": true
        },
        "getHScrollBarAlwaysVisible": {
            "line": 770,
            "jsDoc": [
                "/**\r\n     * Returns whether the horizontal scrollbar is set to be always visible.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setHScrollBarAlwaysVisible": {
            "line": 778,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to show the horizontal scrollbar or not.\r\n     * @param {Boolean} alwaysVisible Set to `true` to make the horizontal scroll bar visible\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "alwaysVisible": "Boolean"
            },
            "described": true
        },
        "getVScrollBarAlwaysVisible": {
            "line": 785,
            "jsDoc": [
                "/**\r\n     * Returns whether the horizontal scrollbar is set to be always visible.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Boolean"
            },
            "described": true
        },
        "setVScrollBarAlwaysVisible": {
            "line": 793,
            "jsDoc": [
                "/**\r\n     * Identifies whether you want to show the horizontal scrollbar or not.\r\n     * @param {Boolean} alwaysVisible Set to `true` to make the horizontal scroll bar visible\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "alwaysVisible": "Boolean"
            },
            "described": true
        },
        "$updateScrollBarV": {
            "line": 797,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$updateScrollBarH": {
            "line": 810,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "freeze": {
            "line": 816,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "unfreeze": {
            "line": 820,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$renderChanges": {
            "line": 824,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any",
                "changes": "any",
                "force": "any"
            },
            "described": true
        },
        "$autosize": {
            "line": 964,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$computeLayerConfig": {
            "line": 995,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "$updateLines": {
            "line": 1101,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "$getLongestLine": {
            "line": 1125,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "updateFrontMarkers": {
            "line": 1139,
            "jsDoc": [
                "/**\r\n     * Schedules an update to all the front markers in the document.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateBackMarkers": {
            "line": 1148,
            "jsDoc": [
                "/**\r\n     *\r\n     * Schedules an update to all the back markers in the document.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "addGutterDecoration": {
            "line": 1158,
            "jsDoc": [
                "/**\r\n     *\r\n     * Deprecated; (moved to [[EditSession]])\r\n     * @deprecated\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "row": "any",
                "className": "any"
            },
            "described": true
        },
        "removeGutterDecoration": {
            "line": 1166,
            "jsDoc": [
                "/**\r\n     * Deprecated; (moved to [[EditSession]])\r\n     * @deprecated\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "row": "any",
                "className": "any"
            },
            "described": true
        },
        "updateBreakpoints": {
            "line": 1174,
            "jsDoc": [
                "/**\r\n     *\r\n     * Redraw breakpoints.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "rows": "any"
            },
            "described": true
        },
        "setAnnotations": {
            "line": 1183,
            "jsDoc": [
                "/**\r\n     * Sets annotations for the gutter.\r\n     * @param {Annotation[]} annotations An array containing annotations\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "annotations": "Annotation[]"
            },
            "described": true
        },
        "updateCursor": {
            "line": 1192,
            "jsDoc": [
                "/**\r\n     *\r\n     * Updates the cursor icon.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "hideCursor": {
            "line": 1200,
            "jsDoc": [
                "/**\r\n     *\r\n     * Hides the cursor icon.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "showCursor": {
            "line": 1208,
            "jsDoc": [
                "/**\r\n     *\r\n     * Shows the cursor icon.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollSelectionIntoView": {
            "line": 1212,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "anchor": "any",
                "lead": "any",
                "offset": "any"
            },
            "described": true
        },
        "scrollCursorIntoView": {
            "line": 1222,
            "jsDoc": [
                "/**\r\n     *\r\n     * Scrolls the cursor into the first visibile area of the editor\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "cursor": "any",
                "offset": "any",
                "$viewMargin": "any"
            },
            "described": true
        },
        "getScrollTop": {
            "line": 1267,
            "jsDoc": [
                "/**\r\n     * {:EditSession.getScrollTop}\r\n     * @related EditSession.getScrollTop\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getScrollLeft": {
            "line": 1276,
            "jsDoc": [
                "/**\r\n     * {:EditSession.getScrollLeft}\r\n     * @related EditSession.getScrollLeft\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getScrollTopRow": {
            "line": 1284,
            "jsDoc": [
                "/**\r\n     * Returns the first visible row, regardless of whether it's fully visible or not.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "getScrollBottomRow": {
            "line": 1292,
            "jsDoc": [
                "/**\r\n     * Returns the last visible row, regardless of whether it's fully visible or not.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "scrollToRow": {
            "line": 1302,
            "jsDoc": [
                "/**\r\n     * Gracefully scrolls from the top of the editor to the row indicated.\r\n     * @param {Number} row A row id\r\n     *\r\n     * @related EditSession.setScrollTop\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "row": "Number"
            },
            "described": true
        },
        "alignCursor": {
            "line": 1306,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number",
                "cursor": "any",
                "alignment": "any"
            },
            "described": true
        },
        "$calcSteps": {
            "line": 1319,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "{}",
                "fromValue": "any",
                "toValue": "any"
            },
            "described": true
        },
        "scrollToLine": {
            "line": 1342,
            "jsDoc": [
                "/**\r\n     * Gracefully scrolls the editor to the row indicated.\r\n     * @param {Number} line A line number\r\n     * @param {Boolean} center If `true`, centers the editor the to indicated line\r\n     * @param {Boolean} animate If `true` animates scrolling\r\n     * @param {Function} callback Function to be called after the animation has finished\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "line": "Number",
                "center": "Boolean",
                "animate": "Boolean",
                "callback": "Function"
            },
            "described": true
        },
        "animateScrolling": {
            "line": 1354,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "fromValue": "any",
                "callback": "any"
            },
            "described": true
        },
        "scrollToY": {
            "line": 1405,
            "jsDoc": [
                "/**\r\n     * Scrolls the editor to the y pixel indicated.\r\n     * @param {Number} scrollTop The position to scroll to\r\n     *\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "scrollTop": "Number"
            },
            "described": true
        },
        "scrollToX": {
            "line": 1420,
            "jsDoc": [
                "/**\r\n     * Scrolls the editor across the x-axis to the pixel indicated.\r\n     * @param {Number} scrollLeft The position to scroll to\r\n     *\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "scrollLeft": "Number"
            },
            "described": true
        },
        "scrollTo": {
            "line": 1431,
            "jsDoc": [
                "/**\r\n     * Scrolls the editor across both x- and y-axes.\r\n     * @param {Number} x The x value to scroll to\r\n     * @param {Number} y The y value to scroll to\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "x": "Number",
                "y": "Number"
            },
            "described": true
        },
        "scrollBy": {
            "line": 1441,
            "jsDoc": [
                "/**\r\n     * Scrolls the editor across both x- and y-axes.\r\n     * @param {Number} deltaX The x value to scroll by\r\n     * @param {Number} deltaY The y value to scroll by\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "deltaX": "Number",
                "deltaY": "Number"
            },
            "described": true
        },
        "isScrollableBy": {
            "line": 1453,
            "jsDoc": [
                "/**\r\n     * Returns `true` if you can still scroll by either parameter; in other words, you haven't reached the end of the file or line.\r\n     * @param {Number} deltaX The x value to scroll by\r\n     * @param {Number} deltaY The y value to scroll by\r\n     *\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean",
                "deltaX": "Number",
                "deltaY": "Number"
            },
            "described": true
        },
        "pixelToScreenCoordinates": {
            "line": 1466,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "{ row: any; column: any; side: number; offsetX: number; }",
                "x": "any",
                "y": "any"
            },
            "described": true
        },
        "screenToTextCoordinates": {
            "line": 1485,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any",
                "x": "any",
                "y": "any"
            },
            "described": true
        },
        "textToScreenCoordinates": {
            "line": 1512,
            "jsDoc": [
                "/**\r\n     * Returns an object containing the `pageX` and `pageY` coordinates of the document position.\r\n     * @param {Number} row The document row position\r\n     * @param {Number} column The document column position\r\n     *\r\n     * @returns {Object}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "{ pageX: number; pageY: number; }",
                "row": "Number",
                "column": "Number"
            },
            "described": true
        },
        "visualizeFocus": {
            "line": 1532,
            "jsDoc": [
                "/**\r\n     *\r\n     * Focuses the current container.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "visualizeBlur": {
            "line": 1540,
            "jsDoc": [
                "/**\r\n     *\r\n     * Blurs the current container.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "showComposition": {
            "line": 1549,
            "jsDoc": [
                "/**\r\n     * @param {Number} position\r\n     *\r\n     * @private\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "composition": "any"
            },
            "described": true
        },
        "setCompositionText": {
            "line": 1573,
            "jsDoc": [
                "/**\r\n     * @param {String} text A string of text to use\r\n     *\r\n     * Sets the inner text of the current composition to `text`.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "text": "String"
            },
            "described": true
        },
        "hideComposition": {
            "line": 1583,
            "jsDoc": [
                "/**\r\n     *\r\n     * Hides the current composition.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "addToken": {
            "line": 1598,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "text": "any",
                "type": "any",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "removeExtraToken": {
            "line": 1623,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "row": "any",
                "column": "any"
            },
            "described": true
        },
        "setTheme": {
            "line": 1633,
            "jsDoc": [
                "/**\r\n     * [Sets a new theme for the editor. `theme` should exist, and be a directory path, like `ace/theme/textmate`.]{: #VirtualRenderer.setTheme}\r\n     * @param {String} theme The path to a theme\r\n     * @param {Function} cb optional callback\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "theme": "String",
                "cb": "Function"
            },
            "described": true
        },
        "getTheme": {
            "line": 1688,
            "jsDoc": [
                "/**\r\n     * [Returns the path of the current theme.]{: #VirtualRenderer.getTheme}\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "setStyle": {
            "line": 1701,
            "jsDoc": [
                "/**\r\n     * [Adds a new class, `style`, to the editor.]{: #VirtualRenderer.setStyle}\r\n     * @param {String} style A class name\r\n     *\r\n     **/",
                "/** Methods allows to add / remove CSS classnames to the editor element.**/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "style": "String",
                "include": "any"
            },
            "described": true
        },
        "unsetStyle": {
            "line": 1710,
            "jsDoc": [
                "/**\r\n     * [Removes the class `style` from the editor.]{: #VirtualRenderer.unsetStyle}\r\n     * @param {String} style A class name\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "style": "String"
            },
            "described": true
        },
        "setCursorStyle": {
            "line": 1714,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "style": "any"
            },
            "described": true
        },
        "setMouseCursor": {
            "line": 1722,
            "jsDoc": [
                "/**\r\n     * @param {String} cursorStyle A css cursor style\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void",
                "cursorStyle": "String"
            },
            "described": true
        },
        "attachToShadowRoot": {
            "line": 1726,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "destroy": {
            "line": 1733,
            "jsDoc": [
                "/**\r\n     * Destroys the text and cursor layers for this renderer.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true,
        "container_prop": {
            "line": 1930,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOption": {
            "line": 1932,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOption": {
            "line": 1933,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOptions": {
            "line": 2016,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOptions": {
            "line": 2017,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "once": {
            "line": 2020,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultHandler": {
            "line": 2021,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeDefaultHandler": {
            "line": 2022,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "on": {
            "line": 2023,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "off": {
            "line": 2024,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_emit": {
            "line": 2047,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "_signal": {
            "line": 2049,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "addListener": {
            "line": 2051,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "emit": {
            "line": 2053,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "eventNames": {
            "line": 2055,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getMaxListeners": {
            "line": 2057,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listenerCount": {
            "line": 2059,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "listeners": {
            "line": 2061,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependListener": {
            "line": 2063,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "prependOnceListener": {
            "line": 2065,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "rawListeners": {
            "line": 2067,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeAllListeners": {
            "line": 2069,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "removeListener": {
            "line": 2071,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setMaxListeners": {
            "line": 2073,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Generator": {
        "next": {
            "line": 21,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "void",
                "callback": "any"
            },
            "described": true
        },
        "map": {
            "line": 25,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "mapper": "any"
            },
            "described": true
        },
        "filter": {
            "line": 49,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "filter": "any"
            },
            "described": true
        },
        "slice": {
            "line": 75,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "begin": "any",
                "end": "any"
            },
            "described": true
        },
        "reduce": {
            "line": 97,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "reduce": "any",
                "initialValue": "any"
            },
            "described": true
        },
        "each": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "fn": "any"
            },
            "described": true
        },
        "forEach": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "fn": "any"
            },
            "described": true
        },
        "some": {
            "line": 159,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "condition": "any"
            },
            "described": true
        },
        "every": {
            "line": 192,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "condition": "any"
            },
            "described": true
        },
        "call": {
            "line": 225,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "context": "any"
            },
            "described": true
        },
        "concat": {
            "line": 235,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "generator": "any"
            },
            "described": true
        },
        "zip": {
            "line": 260,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "generator": "any"
            },
            "described": true
        },
        "expand": {
            "line": 273,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "inserter": "any",
                "constructor": "any"
            },
            "described": true
        },
        "sort": {
            "line": 313,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "compare": "any"
            },
            "described": true
        },
        "join": {
            "line": 332,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "separator": "any"
            },
            "described": true
        },
        "reverse": {
            "line": 336,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "$arrayOp": {
            "line": 340,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "any",
                "arrayMethod": "any",
                "args": "any"
            },
            "described": true
        },
        "end": {
            "line": 362,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "void",
                "breakOnError": "any",
                "callback": "any"
            },
            "described": true
        },
        "toArray": {
            "line": 389,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/async.js",
            "params": {
                "return": "void",
                "breakOnError": "any",
                "callback": "any"
            },
            "described": true
        },
        "described": true
    },
    "TestGenerator": {
        "exec": {
            "line": 21,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/test.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "run": {
            "line": 27,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/test.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "report": {
            "line": 50,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/test.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "summary": {
            "line": 67,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/test.js",
            "params": {
                "return": "void",
                "callback": "any"
            },
            "described": true
        },
        "setupTest": {
            "line": 88,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/asyncjs/test.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "Style": {
        "line": 11,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
        "getPropertyValue": {
            "line": 14,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "described": true
    },
    "ClassList": {
        "line": 34,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
        "add": {
            "line": 38,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "str": "any"
            },
            "described": true
        },
        "remove": {
            "line": 41,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "str": "any"
            },
            "described": true
        },
        "toggle": {
            "line": 44,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "str": "any"
            },
            "described": true
        },
        "contains": {
            "line": 47,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "str": "any"
            },
            "described": true
        },
        "described": true
    },
    "Event": {
        "line": 626,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
        "initMouseEvent": {
            "line": 631,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void",
                "type": "any",
                "_1": "any",
                "_2": "any",
                "window": "any",
                "detail": "any",
                "x": "any",
                "y": "any",
                "_x": "any",
                "_y": "any",
                "ctrl": "any",
                "alt": "any",
                "shift": "any",
                "meta": "any",
                "button": "any",
                "relatedTarget": "any"
            },
            "described": true
        },
        "preventDefault": {
            "line": 649,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "stopPropagation": {
            "line": 652,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "TextNode": {
        "line": 674,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
        "cloneNode": {
            "line": 681,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockdom.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "MockRenderer": {
        "line": 34,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
        "getFirstVisibleRow": {
            "line": 51,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getLastVisibleRow": {
            "line": 55,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getFirstFullyVisibleRow": {
            "line": 59,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getLastFullyVisibleRow": {
            "line": 63,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getContainerElement": {
            "line": 67,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getMouseEventTarget": {
            "line": 71,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getTextAreaContainer": {
            "line": 75,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "addGutterDecoration": {
            "line": 79,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "removeGutterDecoration": {
            "line": 82,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "moveTextAreaToCursor": {
            "line": 85,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setSession": {
            "line": 88,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "getSession": {
            "line": 92,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any",
                "session": "any"
            },
            "described": true
        },
        "setTokenizer": {
            "line": 96,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "on": {
            "line": 99,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateCursor": {
            "line": 102,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "animateScrolling": {
            "line": 105,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "fromValue": "any",
                "callback": "any"
            },
            "described": true
        },
        "scrollToX": {
            "line": 109,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "scrollTop": "any"
            },
            "described": true
        },
        "scrollToY": {
            "line": 110,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "scrollLeft": "any"
            },
            "described": true
        },
        "scrollToLine": {
            "line": 112,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "line": "any",
                "center": "any"
            },
            "described": true
        },
        "scrollSelectionIntoView": {
            "line": 125,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollCursorIntoView": {
            "line": 128,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "scrollToRow": {
            "line": 138,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "row": "any"
            },
            "described": true
        },
        "getScrollTopRow": {
            "line": 145,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "draw": {
            "line": 149,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onChangeTabSize": {
            "line": 152,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "startRow": "any",
                "endRow": "any"
            },
            "described": true
        },
        "updateLines": {
            "line": 155,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void",
                "startRow": "any",
                "endRow": "any"
            },
            "described": true
        },
        "updateBackMarkers": {
            "line": 158,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateFrontMarkers": {
            "line": 161,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateBreakpoints": {
            "line": 164,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "onResize": {
            "line": 167,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateFull": {
            "line": 170,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "updateText": {
            "line": 173,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "showCursor": {
            "line": 176,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "visualizeFocus": {
            "line": 179,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setAnnotations": {
            "line": 182,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "setStyle": {
            "line": 185,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "unsetStyle": {
            "line": 188,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "textToScreenCoordinates": {
            "line": 191,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "{ pageX: number; pageY: number; }"
            },
            "described": true
        },
        "screenToTextCoordinates": {
            "line": 198,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "{ row: number; column: number; }"
            },
            "described": true
        },
        "adjustWrapLimit": {
            "line": 205,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/test/mockrenderer.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "TokenIterator": {
        "line": 51,
        "jsDoc": [
            "/**\r\n * \r\n *\r\n * This class provides an essay way to treat the document as a stream of tokens, and provides methods to iterate over these tokens.\r\n * @class TokenIterator\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
        "construct": {
            "line": 51,
            "jsDoc": [
                "/**\r\n * Creates a new token iterator object. The inital token index is set to the provided row and column coordinates.\r\n * @param {EditSession} session The session to associate with\r\n * @param {Number} initialRow The row to start the tokenizing at\r\n * @param {Number} initialColumn The column to start the tokenizing at\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "session": "EditSession",
                "initialRow": "Number",
                "initialColumn": "Number"
            },
            "described": true
        },
        "stepBackward": {
            "line": 66,
            "jsDoc": [
                "/**\r\n     * Tokenizes all the items from the current point to the row prior in the document. \r\n     * @returns {[String]} If the current point is not at the top of the file, this function returns `null`. Otherwise, it returns an array of the tokenized strings.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "[String]"
            },
            "described": true
        },
        "stepForward": {
            "line": 87,
            "jsDoc": [
                "/**\r\n     * Tokenizes all the items from the current point until the next row in the document. If the current point is at the end of the file, this function returns `null`. Otherwise, it returns the tokenized string.\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "getCurrentToken": {
            "line": 111,
            "jsDoc": [
                "/**\r\n     * \r\n     * Returns the current tokenized string.\r\n     * @returns {String}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "String"
            },
            "described": true
        },
        "getCurrentTokenRow": {
            "line": 120,
            "jsDoc": [
                "/**\r\n     * \r\n     * Returns the current row.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getCurrentTokenColumn": {
            "line": 129,
            "jsDoc": [
                "/**\r\n     * \r\n     * Returns the current column.\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getCurrentTokenPosition": {
            "line": 151,
            "jsDoc": [
                "/**\r\n     * Return the current token position.\r\n     * @returns {Position}\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "{ row: any; column: any; }"
            },
            "described": true
        },
        "getCurrentTokenRange": {
            "line": 159,
            "jsDoc": [
                "/**\r\n     * Return the current token range.\r\n     * @returns {Range}\r\n     */"
            ],
            "sourceName": "ace_new/ace/lib/ace/token_iterator.js",
            "params": {
                "return": "Range"
            },
            "described": true
        },
        "described": true
    },
    "Tooltip": {
        "line": 48,
        "jsDoc": [
            "/**\r\n * @class Tooltip\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/tooltip.js",
        "construct": {
            "line": 48,
            "jsDoc": [
                "/**\r\n * @param {Element} parentNode\r\n *\r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "parentNode": "Element"
            },
            "described": true
        },
        "$init": {
            "line": 55,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getElement": {
            "line": 66,
            "jsDoc": [
                "/**\r\n     * @returns {Element}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "Element"
            },
            "described": true
        },
        "setText": {
            "line": 73,
            "jsDoc": [
                "/**\r\n     * @param {String} text\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void",
                "text": "String"
            },
            "described": true
        },
        "setHtml": {
            "line": 80,
            "jsDoc": [
                "/**\r\n     * @param {String} html\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void",
                "html": "String"
            },
            "described": true
        },
        "setPosition": {
            "line": 88,
            "jsDoc": [
                "/**\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void",
                "x": "Number",
                "y": "Number"
            },
            "described": true
        },
        "setClassName": {
            "line": 96,
            "jsDoc": [
                "/**\r\n     * @param {String} className\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void",
                "className": "String"
            },
            "described": true
        },
        "show": {
            "line": 105,
            "jsDoc": [
                "/**\r\n     * @param {String} text\r\n     * @param {Number} x\r\n     * @param {Number} y\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void",
                "text": "String",
                "x": "Number",
                "y": "Number"
            },
            "described": true
        },
        "hide": {
            "line": 116,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "getHeight": {
            "line": 127,
            "jsDoc": [
                "/**\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "getWidth": {
            "line": 134,
            "jsDoc": [
                "/**\r\n     * @returns {Number}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "Number"
            },
            "described": true
        },
        "destroy": {
            "line": 138,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/tooltip.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "described": true
    },
    "UndoManager": {
        "line": 44,
        "jsDoc": [
            "/**\r\n * This object maintains the undo stack for an [[EditSession `EditSession`]].\r\n * @class UndoManager\r\n **/"
        ],
        "sourceName": "ace_new/ace/lib/ace/undomanager.js",
        "construct": {
            "line": 44,
            "jsDoc": [
                "/**\r\n * Resets the current undo state and creates a new `UndoManager`.\r\n * \r\n * @constructor\r\n **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {},
            "described": true
        },
        "addSession": {
            "line": 52,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "session": "any"
            },
            "described": true
        },
        "add": {
            "line": 64,
            "jsDoc": [
                "/**\r\n     * Provides a means for implementing your own undo manager. `options` has one property, `args`, an [[Array `Array`]], with two elements:\r\n     *\r\n     * - `args[0]` is an array of deltas\r\n     * - `args[1]` is the document to associate with\r\n     *\r\n     * @param {Object} options Contains additional properties\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "delta": "any",
                "allowMerge": "any",
                "session": "any"
            },
            "described": true
        },
        "addSelection": {
            "line": 78,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "selection": "any",
                "rev": "any"
            },
            "described": true
        },
        "startNewGroup": {
            "line": 85,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "markIgnored": {
            "line": 90,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "from": "any",
                "to": "any"
            },
            "described": true
        },
        "getSelection": {
            "line": 103,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "any",
                "rev": "any",
                "after": "any"
            },
            "described": true
        },
        "getRevision": {
            "line": 115,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "getDeltas": {
            "line": 119,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "any",
                "from": "any",
                "to": "any"
            },
            "described": true
        },
        "getChangedRanges": {
            "line": 135,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "from": "any",
                "to": "any"
            },
            "described": true
        },
        "getChangedLines": {
            "line": 140,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "from": "any",
                "to": "any"
            },
            "described": true
        },
        "undo": {
            "line": 151,
            "jsDoc": [
                "/**\r\n     * [Perform an undo operation on the document, reverting the last change.]{: #UndoManager.undo}\r\n     * @param {Boolean} dontSelect {:dontSelect}\r\n     *\r\n     * @returns {Range} The range of the undo.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "Range",
                "session": "any",
                "dontSelect": "Boolean"
            },
            "described": true
        },
        "redo": {
            "line": 184,
            "jsDoc": [
                "/**\r\n     * [Perform a redo operation on the document, reimplementing the last change.]{: #UndoManager.redo}\r\n     * @param {Boolean} dontSelect {:dontSelect}\r\n     *\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "any",
                "session": "any",
                "dontSelect": "Boolean"
            },
            "described": true
        },
        "$syncRev": {
            "line": 212,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "reset": {
            "line": 223,
            "jsDoc": [
                "/**\r\n     * Destroys the stack of undo and redo redo operations.\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "canUndo": {
            "line": 239,
            "jsDoc": [
                "/**\r\n     * Returns `true` if there are undo operations left to perform.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "canRedo": {
            "line": 247,
            "jsDoc": [
                "/**\r\n     * Returns `true` if there are redo operations left to perform.\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "bookmark": {
            "line": 254,
            "jsDoc": [
                "/**\r\n     * Marks the current status clean\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void",
                "rev": "any"
            },
            "described": true
        },
        "isAtBookmark": {
            "line": 264,
            "jsDoc": [
                "/**\r\n     * Returns if the current status is clean\r\n     * @returns {Boolean}\r\n     **/"
            ],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "toJSON": {
            "line": 268,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "fromJSON": {
            "line": 272,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "$prettyPrint": {
            "line": 281,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/undomanager.js",
            "params": {
                "return": "any",
                "delta": "any"
            },
            "described": true
        },
        "described": true
    },
    "VirtualRendererOptions": {
        "animatedScroll_prop": {
            "line": 1745,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "showInvisibles_prop": {
            "line": 1746,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "showPrintMargin_prop": {
            "line": 1753,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "printMarginColumn_prop": {
            "line": 1757,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "printMargin_prop": {
            "line": 1761,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "showGutter_prop": {
            "line": 1772,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "fadeFoldWidgets_prop": {
            "line": 1780,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "showFoldWidgets_prop": {
            "line": 1786,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "displayIndentGuides_prop": {
            "line": 1793,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "highlightGutterLine_prop": {
            "line": 1800,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "hScrollBarAlwaysVisible_prop": {
            "line": 1807,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "vScrollBarAlwaysVisible_prop": {
            "line": 1814,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "fontSize_prop": {
            "line": 1821,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "fontFamily_prop": {
            "line": 1830,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "maxLines_prop": {
            "line": 1836,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "minLines_prop": {
            "line": 1841,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "maxPixelHeight_prop": {
            "line": 1848,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "scrollPastEnd_prop": {
            "line": 1854,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "number"
            },
            "described": true
        },
        "fixedWidthGutter_prop": {
            "line": 1865,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "theme_prop": {
            "line": 1871,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "string"
            },
            "described": true
        },
        "hasCssTransforms_prop": {
            "line": 1877,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "useTextareaForIME_prop": {
            "line": 1879,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/virtual_renderer.js",
            "params": {
                "return": "boolean"
            },
            "described": true
        },
        "described": true,
        "showLineNumbers_prop": {
            "line": 1334,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Mirror": {
        "line": 7,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/worker/mirror.js",
        "setTimeout": {
            "line": 51,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/mirror.js",
            "params": {
                "return": "void",
                "timeout": "any"
            },
            "described": true
        },
        "setValue": {
            "line": 55,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/mirror.js",
            "params": {
                "return": "void",
                "value": "any"
            },
            "described": true
        },
        "getValue": {
            "line": 60,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/mirror.js",
            "params": {
                "return": "void",
                "callbackId": "any"
            },
            "described": true
        },
        "onUpdate": {
            "line": 64,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/mirror.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "isPending": {
            "line": 68,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/mirror.js",
            "params": {
                "return": "any"
            },
            "described": true
        },
        "described": true
    },
    "Sender": {
        "line": 167,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/worker/worker.js",
        "callback": {
            "line": 173,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker.js",
            "params": {
                "return": "void",
                "data": "any",
                "callbackId": "any"
            },
            "described": true
        },
        "emit": {
            "line": 181,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker.js",
            "params": {
                "return": "void",
                "name": "any",
                "data": "any"
            },
            "described": true
        },
        "described": true
    },
    "BlobBuilder": {
        "line": 62,
        "jsDoc": [
            "/** Backwards-compatibility**/"
        ],
        "sourceName": "ace_new/ace/lib/ace/worker/v2/worker_client.js",
        "described": true
    },
    "WorkerClient": {
        "onMessage": {
            "line": 115,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "e": "any"
            },
            "described": true
        },
        "reportError": {
            "line": 137,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "err": "any"
            },
            "described": true
        },
        "$normalizePath": {
            "line": 141,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "any",
                "path": "any"
            },
            "described": true
        },
        "terminate": {
            "line": 145,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "send": {
            "line": 155,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "cmd": "any",
                "args": "any"
            },
            "described": true
        },
        "call": {
            "line": 159,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "cmd": "any",
                "args": "any",
                "callback": "any"
            },
            "described": true
        },
        "emit": {
            "line": 168,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "event": "any",
                "data": "any"
            },
            "described": true
        },
        "attachToDocument": {
            "line": 181,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "doc": "any"
            },
            "described": true
        },
        "changeListener": {
            "line": 190,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void",
                "delta": "any"
            },
            "described": true
        },
        "$sendDeltaQueue": {
            "line": 201,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "void"
            },
            "described": true
        },
        "line": 66,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
        "$createWorkerFromOldConfig": {
            "line": 85,
            "jsDoc": [],
            "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
            "params": {
                "return": "any",
                "topLevelNamespaces": "any",
                "mod": "any",
                "classname": "any",
                "workerUrl": "any",
                "importScripts": "any"
            },
            "described": true
        },
        "described": true
    },
    "UIWorkerClient": {
        "line": 214,
        "jsDoc": [],
        "sourceName": "ace_new/ace/lib/ace/worker/worker_client.js",
        "described": true
    },
    "SearchOptions": {
        "line": 1395,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "needle_prop": {
            "line": 1396,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "preventScroll_prop": {
            "line": 1397,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "backwards_prop": {
            "line": 1398,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "start_prop": {
            "line": 1399,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "skipCurrent_prop": {
            "line": 1400,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "range_prop": {
            "line": 1401,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "preserveCase_prop": {
            "line": 1402,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "regExp_prop": {
            "line": 1403,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "wholeWord_prop": {
            "line": 1404,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "caseSensitive_prop": {
            "line": 1405,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "wrap_prop": {
            "line": 1406,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Point": {
        "line": 1431,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "row_prop": {
            "line": 1432,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "column_prop": {
            "line": 1433,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Delta": {
        "line": 1436,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "action_prop": {
            "line": 1437,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "start_prop": {
            "line": 1438,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "end_prop": {
            "line": 1439,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "lines_prop": {
            "line": 1440,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Annotation": {
        "line": 1443,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "row_prop": {
            "line": 1444,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "column_prop": {
            "line": 1445,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "text_prop": {
            "line": 1446,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "type_prop": {
            "line": 1447,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Command": {
        "line": 1450,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "name_prop": {
            "line": 1451,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "bindKey_prop": {
            "line": 1452,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "readOnly_prop": {
            "line": 1453,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "exec_prop": {
            "line": 1454,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "KeyboardHandler": {
        "line": 1459,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "handleKeyboard_prop": {
            "line": 1460,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "MarkerLike": {
        "line": 1463,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "range_prop": {
            "line": 1464,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "type_prop": {
            "line": 1465,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "renderer_prop": {
            "line": 1466,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "clazz_prop": {
            "line": 1467,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "inFront_prop": {
            "line": 1468,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "id_prop": {
            "line": 1469,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "update_prop": {
            "line": 1470,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Completion": {
        "line": 1490,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "value_prop": {
            "line": 1491,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "score_prop": {
            "line": 1492,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "meta_prop": {
            "line": 1493,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "name_prop": {
            "line": 1494,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "caption_prop": {
            "line": 1495,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "docHTML_prop": {
            "line": 1496,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "docText_prop": {
            "line": 1497,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "snippet_prop": {
            "line": 1498,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Config": {
        "line": 1567,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "get": {
            "line": 1568,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "set": {
            "line": 1569,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "all": {
            "line": 1570,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "moduleUrl": {
            "line": 1571,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setModuleUrl": {
            "line": 1572,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "loadModule": {
            "line": 1573,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "init": {
            "line": 1575,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "defineOptions": {
            "line": 1576,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "resetOptions": {
            "line": 1577,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultValue": {
            "line": 1578,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setDefaultValues": {
            "line": 1579,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "OptionsProvider": {
        "line": 1582,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true,
        "setOptions": {
            "line": 1583,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOptions": {
            "line": 1584,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "setOption": {
            "line": 1585,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        },
        "getOption": {
            "line": 1586,
            "jsDoc": [],
            "sourceName": "ace.d.ts",
            "described": true
        }
    },
    "Reader": {
        "line": 2444,
        "jsDoc": [],
        "sourceName": "ace.d.ts",
        "described": true
    }
}